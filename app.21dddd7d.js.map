{"version":3,"sources":["../src/options.js","../src/constants.js","../src/create-element.js","../src/component.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js","../src/diff/catch-error.js","../src/devtools.js","../src/index.js","../src/debug.js","../src/check-props.js","../src/component-stack.js","view/components/App.tsx","../src/PureComponent.js","../src/memo.js","../src/forwardRef.js","../src/Children.js","../src/suspense.js","../src/suspense-list.js","../src/portals.js","../src/scheduler.js","common/cache.ts","common/constants.ts","common/sample-data.ts","model/types.ts","common/storage.ts","common/utils.ts","common/tts.ts","common/index.ts","model/initial-state.ts","model/context.ts","model/schema.ts","model/history.ts","model/index.ts","view/utils/common.ts","view/utils/dom-helpers.ts","view/utils/filter-on-regex.ts","view/utils/hooks/data.ts","view/utils/hooks/dom.ts","view/utils/hooks/editor.ts","view/components/help/demos/IntroFooter.tsx","view/components/help/demos/OptimizeSample.tsx","view/components/help/demos/PauseSpeed.tsx","view/components/help/demos/ReportMissingHelpLink.tsx","view/components/help/demos/SnippetAdd.tsx","view/components/help/demos/SnippetEffect.tsx","view/components/help/demos/SnippetText.tsx","view/components/help/demos/index.ts","view/components/help/help-data.tsx","view/utils/hooks/help.ts","view/utils/hooks/optimize.ts","view/utils/hooks/organizer.ts","view/utils/hooks/tts.ts","view/utils/hooks/index.ts","view/utils/optimize-transforms.ts","view/utils/optimize.ts","view/utils/index.ts","view/components/context.tsx","view/components/common/AudioPlayer.tsx","view/components/common/Category.tsx","view/components/common/Checkbox.tsx","view/components/common/ClipboardButton.tsx","view/components/common/ExpandableChecklist.tsx","view/components/common/Modal.tsx","view/components/common/Organizer.tsx","view/components/common/StatusIndicator.tsx","view/components/common/SearchBar.tsx","view/components/common/index.ts","view/components/editor/BitsInput.tsx","view/components/editor/Editor.tsx","view/components/editor/Header.tsx","view/components/editor/Main.tsx","view/components/editor/PauseAddControl.tsx","view/components/editor/SaveControl.tsx","view/components/editor/utils.ts","view/components/editor/index.ts","view/components/export/Export.tsx","view/components/export/ExportMessage.tsx","view/components/export/ExportMessageCategory.tsx","view/components/export/ExportSnippet.tsx","view/components/export/Import.tsx","view/components/export/ImportDuplicateMessages.tsx","view/components/export/ImportDuplicateSnippets.tsx","view/components/export/ImportExport.tsx","view/components/export/ImportExportModal.tsx","view/components/export/ImportRenameMessages.tsx","view/components/export/ImportUncategorizedSnippets.tsx","view/components/export/utils.ts","view/components/export/Reset.tsx","view/components/export/index.ts","view/components/Footer.tsx","view/components/help/demos/SkipTutorials.tsx","view/components/help/HelpModal.tsx","view/components/help/HelpButton.tsx","view/components/help/index.ts","view/components/Loading.tsx","view/components/messages/CategoryField.tsx","view/components/messages/CategoryModal.tsx","view/components/messages/Diff.tsx","view/components/messages/List.tsx","view/components/messages/ListItem.tsx","view/components/messages/Modal.tsx","view/components/messages/index.ts","view/components/settings/General.tsx","view/components/settings/Help.tsx","view/components/settings/Modal.tsx","view/components/settings/Optimization.tsx","view/components/settings/index.ts","view/components/snippets/Row.tsx","view/components/snippets/RowControls.tsx","view/components/snippets/RowEdit.tsx","view/components/snippets/Snippet.tsx","view/components/snippets/Snippets.tsx","view/components/export/ExportSnippetSection.tsx","view/components/snippets/SectionEdit.tsx","view/components/snippets/index.ts","view/components/View.tsx","view/components/index.ts","app/updates/startup.ts","app/updates/index.ts","app/index.tsx"],"names":["options","isValidElement","rerenderQueue","defer","prevDebounce","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","push","defaultProps","createVNode","original","vnode","undefined","constructor","createRef","current","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","value","unmount","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","slice","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","call","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","firstChild","checked","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","addHookName","window","__PREACT_DEVTOOLS__","attachPreact","loggedTypeFailures","resetPropWarnings","getDisplayName","displayName","renderStack","ownerStack","getCurrentVNode","hasBabelPlugin","isPossibleOwner","getOwnerStack","stack","next","reduce","acc","owner","source","__source","fileName","lineNumber","console","warn","isWeakMapSupported","WeakMap","serializeVNode","attrs","prop","hasOwnProperty","Object","toString","JSON","stringify","oldDiff","oldDiffed","oldRoot","oldRender","pop","parent","hooksAllowed","oldBeforeDiff","oldVnode","oldCatchError","oldHook","warnedComponents","useEffect","useLayoutEffect","lazyPropTypes","deprecations","promise","Error","isValid","componentName","getClosestDomNodeParent","propTypes","has","m","lazyVNode","set","values","typeSpecs","location","getStack","keys","forEach","typeSpecName","message","comp","index","property","get","deprecatedAttributes","nodeName","deprecatedProto","create","v","__self","__proto__","join","f","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","hooks","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","action","nextValue","args","argsChanged","useRef","initialValue","useMemo","useImperativeHandle","createHandle","concat","factory","useCallback","useContext","useDebugValue","formatter","useErrorBoundary","errState","err","flushAfterPaintEffects","invokeCleanup","invokeEffect","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","filter","hook","oldArgs","newArgs","arg","shallowDiffers","PureComponent","p","memo","comparer","shouldUpdate","nextProps","updateRef","Memoed","isReactComponent","isPureReactComponent","oldDiffHook","REACT_FORWARD_SYMBOL","Symbol","for","forwardRef","fn","Forwarded","clone","$$typeof","mapFn","map","Children","count","only","normalized","toArray","Suspense","_suspenders","suspended","lazy","loader","prom","Lazy","exports","default","SuspenseList","_next","_map","suspendingVNode","suspendingComponent","resolved","onResolved","onSuspensionComplete","suspendedVNode","removeOriginal","detachedParent","originalParent","wasHydrating","detachedComponent","detachedClone","effect","fallback","list","delete","revealOrder","size","ContextProvider","Portal","_this","container","_container","_temp","before","createPortal","delegated","unsuspend","wrappedUnsuspend","Map","reverse","REACT_ELEMENT_TYPE","CAMEL_PROPS","onChangeInputType","textContent","preactRender","preactHydrate","defineProperty","configurable","writable","oldEventHook","empty","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","persist","nativeEvent","classNameDescriptor","class","oldVNodeHook","multiple","selected","className","enumerable","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","readContext","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_LowPriority","unstable_IdlePriority","unstable_runWithPriority","priority","unstable_now","performance","now","Date","version","createFactory","element","preactCloneElement","apply","unmountComponentAtNode","findDOMNode","unstable_batchedUpdates","StrictMode"],"mappings":"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","file":"app.21dddd7d.js","sourceRoot":"../src","sourcesContent":["import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (typeof childVNode == 'string' || typeof childVNode == 'number') {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.5.12', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","import { options } from 'preact';\nimport { initDevTools } from './devtools';\n\ninitDevTools();\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, name: string) => T}\n */\nexport function addHookName(value, name) {\n\tif (options._addHookName) {\n\t\toptions._addHookName(name);\n\t}\n\treturn value;\n}\n","import { checkPropTypes } from './check-props';\nimport { options, Component } from 'preact';\nimport {\n\tELEMENT_NODE,\n\tDOCUMENT_NODE,\n\tDOCUMENT_FRAGMENT_NODE\n} from './constants';\nimport {\n\tgetOwnerStack,\n\tsetupComponentStack,\n\tgetCurrentVNode,\n\tgetDisplayName\n} from './component-stack';\nimport { assign } from './util';\n\nconst isWeakMapSupported = typeof WeakMap == 'function';\n\nfunction getClosestDomNodeParent(parent) {\n\tif (!parent) return {};\n\tif (typeof parent.type == 'function') {\n\t\treturn getClosestDomNodeParent(parent._parent);\n\t}\n\treturn parent;\n}\n\nexport function initDebug() {\n\tsetupComponentStack();\n\n\tlet hooksAllowed = false;\n\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldVnode = options.vnode;\n\tlet oldCatchError = options._catchError;\n\tlet oldRoot = options._root;\n\tlet oldHook = options._hook;\n\tconst warnedComponents = !isWeakMapSupported\n\t\t? null\n\t\t: {\n\t\t\t\tuseEffect: new WeakMap(),\n\t\t\t\tuseLayoutEffect: new WeakMap(),\n\t\t\t\tlazyPropTypes: new WeakMap()\n\t\t  };\n\tconst deprecations = [];\n\n\toptions._catchError = (error, vnode, oldVNode) => {\n\t\tlet component = vnode && vnode._component;\n\t\tif (component && typeof error.then == 'function') {\n\t\t\tconst promise = error;\n\t\t\terror = new Error(\n\t\t\t\t`Missing Suspense. The throwing component was: ${getDisplayName(vnode)}`\n\t\t\t);\n\n\t\t\tlet parent = vnode;\n\t\t\tfor (; parent; parent = parent._parent) {\n\t\t\t\tif (parent._component && parent._component._childDidSuspend) {\n\t\t\t\t\terror = promise;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We haven't recovered and we know at this point that there is no\n\t\t\t// Suspense component higher up in the tree\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\toldCatchError(error, vnode, oldVNode);\n\n\t\t\t// when an error was handled by an ErrorBoundary we will nontheless emit an error\n\t\t\t// event on the window object. This is to make up for react compatibility in dev mode\n\t\t\t// and thus make the Next.js dev overlay work.\n\t\t\tif (typeof error.then != 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\toptions._root = (vnode, parentNode) => {\n\t\tif (!parentNode) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined parent passed to render(), this is the second argument.\\n' +\n\t\t\t\t\t'Check if the element is available in the DOM/has the correct id.'\n\t\t\t);\n\t\t}\n\n\t\tlet isValid;\n\t\tswitch (parentNode.nodeType) {\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tcase DOCUMENT_NODE:\n\t\t\t\tisValid = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tisValid = false;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\tlet componentName = getDisplayName(vnode);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected a valid HTML node as a second argument to render.\tReceived ${parentNode} instead: render(<${componentName} />, ${parentNode});`\n\t\t\t);\n\t\t}\n\n\t\tif (oldRoot) oldRoot(vnode, parentNode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tlet { type, _parent: parent } = vnode;\n\t\tlet parentVNode = getClosestDomNodeParent(parent);\n\n\t\thooksAllowed = true;\n\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined component passed to createElement()\\n\\n' +\n\t\t\t\t\t'You likely forgot to export your component or might have mixed up default and named imports' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type != null && typeof type == 'object') {\n\t\t\tif (type._children !== undefined && type._dom !== undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid type passed to createElement(): ${type}\\n\\n` +\n\t\t\t\t\t\t'Did you accidentally pass a JSX literal as JSX twice?\\n\\n' +\n\t\t\t\t\t\t`  let My${getDisplayName(vnode)} = ${serializeVNode(type)};\\n` +\n\t\t\t\t\t\t`  let vnode = <My${getDisplayName(vnode)} />;\\n\\n` +\n\t\t\t\t\t\t'This usually happens when you export a JSX literal and not the component.' +\n\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid type passed to createElement(): ' +\n\t\t\t\t\t(Array.isArray(type) ? 'array' : type)\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(type === 'thead' || type === 'tfoot' || type === 'tbody') &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (\n\t\t\ttype === 'tr' &&\n\t\t\tparentVNode.type !== 'thead' &&\n\t\t\tparentVNode.type !== 'tfoot' &&\n\t\t\tparentVNode.type !== 'tbody' &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot/table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'td' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <td> should have a <tr> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'th' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <th> should have a <tr>.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref !== undefined &&\n\t\t\ttypeof vnode.ref != 'function' &&\n\t\t\ttypeof vnode.ref != 'object' &&\n\t\t\t!('$$typeof' in vnode) // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (typeof vnode.type == 'string') {\n\t\t\tfor (const key in vnode.props) {\n\t\t\t\tif (\n\t\t\t\t\tkey[0] === 'o' &&\n\t\t\t\t\tkey[1] === 'n' &&\n\t\t\t\t\ttypeof vnode.props[key] != 'function' &&\n\t\t\t\t\tvnode.props[key] != null\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Component's \"${key}\" property should be a function, ` +\n\t\t\t\t\t\t\t`but got [${typeof vnode.props[key]}] instead\\n` +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type == 'function' && vnode.type.propTypes) {\n\t\t\tif (\n\t\t\t\tvnode.type.displayName === 'Lazy' &&\n\t\t\t\twarnedComponents &&\n\t\t\t\t!warnedComponents.lazyPropTypes.has(vnode.type)\n\t\t\t) {\n\t\t\t\tconst m =\n\t\t\t\t\t'PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ';\n\t\t\t\ttry {\n\t\t\t\t\tconst lazyVNode = vnode.type();\n\t\t\t\t\twarnedComponents.lazyPropTypes.set(vnode.type, true);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + `Component wrapped in lazy() is ${getDisplayName(lazyVNode)}`\n\t\t\t\t\t);\n\t\t\t\t} catch (promise) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + \"We will log the wrapped component's name once it is loaded.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet values = vnode.props;\n\t\t\tif (vnode.type._forwarded) {\n\t\t\t\tvalues = assign({}, values);\n\t\t\t\tdelete values.ref;\n\t\t\t}\n\n\t\t\tcheckPropTypes(\n\t\t\t\tvnode.type.propTypes,\n\t\t\t\tvalues,\n\t\t\t\t'prop',\n\t\t\t\tgetDisplayName(vnode),\n\t\t\t\t() => getOwnerStack(vnode)\n\t\t\t);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n\n\toptions._hook = (comp, index, type) => {\n\t\tif (!comp || !hooksAllowed) {\n\t\t\tthrow new Error('Hook can only be invoked from render methods.');\n\t\t}\n\n\t\tif (oldHook) oldHook(comp, index, type);\n\t};\n\n\t// Ideally we'd want to print a warning once per component, but we\n\t// don't have access to the vnode that triggered it here. As a\n\t// compromise and to avoid flooding the console with warnings we\n\t// print each deprecation warning only once.\n\tconst warn = (property, message) => ({\n\t\tget() {\n\t\t\tconst key = 'get' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`getting vnode.${property} is deprecated, ${message}`);\n\t\t\t}\n\t\t},\n\t\tset() {\n\t\t\tconst key = 'set' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`setting vnode.${property} is not allowed, ${message}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst deprecatedAttributes = {\n\t\tnodeName: warn('nodeName', 'use vnode.type'),\n\t\tattributes: warn('attributes', 'use vnode.props'),\n\t\tchildren: warn('children', 'use vnode.props.children')\n\t};\n\n\tconst deprecatedProto = Object.create({}, deprecatedAttributes);\n\n\toptions.vnode = vnode => {\n\t\tconst props = vnode.props;\n\t\tif (\n\t\t\tvnode.type !== null &&\n\t\t\tprops != null &&\n\t\t\t('__source' in props || '__self' in props)\n\t\t) {\n\t\t\tconst newProps = (vnode.props = {});\n\t\t\tfor (let i in props) {\n\t\t\t\tconst v = props[i];\n\t\t\t\tif (i === '__source') vnode.__source = v;\n\t\t\t\telse if (i === '__self') vnode.__self = v;\n\t\t\t\telse newProps[i] = v;\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tvnode.__proto__ = deprecatedProto;\n\t\tif (oldVnode) oldVnode(vnode);\n\t};\n\n\toptions.diffed = vnode => {\n\t\t// Check if the user passed plain objects as children. Note that we cannot\n\t\t// move this check into `options.vnode` because components can receive\n\t\t// children in any shape they want (e.g.\n\t\t// `<MyJSONFormatter>{{ foo: 123, bar: \"abc\" }}</MyJSONFormatter>`).\n\t\t// Putting this check in `options.diffed` ensures that\n\t\t// `vnode._children` is set and that we only validate the children\n\t\t// that were actually rendered.\n\t\tif (vnode._children) {\n\t\t\tvnode._children.forEach(child => {\n\t\t\t\tif (child && child.type === undefined) {\n\t\t\t\t\t// Remove internal vnode keys that will always be patched\n\t\t\t\t\tdelete child._parent;\n\t\t\t\t\tdelete child._depth;\n\t\t\t\t\tconst keys = Object.keys(child).join(',');\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Objects are not valid as a child. Encountered an object with the keys {${keys}}.` +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\thooksAllowed = false;\n\n\t\tif (oldDiffed) oldDiffed(vnode);\n\n\t\tif (vnode._children != null) {\n\t\t\tconst keys = [];\n\t\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\t\tconst child = vnode._children[i];\n\t\t\t\tif (!child || child.key == null) continue;\n\n\t\t\t\tconst key = child.key;\n\t\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\n\t\t\t\t\t// Break early to not spam the console\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst setState = Component.prototype.setState;\nComponent.prototype.setState = function(update, callback) {\n\tif (this._vnode == null) {\n\t\t// `this._vnode` will be `null` during componentWillMount. But it\n\t\t// is perfectly valid to call `setState` during cWM. So we\n\t\t// need an additional check to verify that we are dealing with a\n\t\t// call inside constructor.\n\t\tif (this.state == null) {\n\t\t\tconsole.warn(\n\t\t\t\t`Calling \"this.setState\" inside the constructor of a component is a ` +\n\t\t\t\t\t`no-op and might be a bug in your application. Instead, set ` +\n\t\t\t\t\t`\"this.state = {}\" directly.\\n\\n${getOwnerStack(getCurrentVNode())}`\n\t\t\t);\n\t\t}\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.setState\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\n\treturn setState.call(this, update, callback);\n};\n\nconst forceUpdate = Component.prototype.forceUpdate;\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode == null) {\n\t\tconsole.warn(\n\t\t\t`Calling \"this.forceUpdate\" inside the constructor of a component is a ` +\n\t\t\t\t`no-op and might be a bug in your application.\\n\\n${getOwnerStack(\n\t\t\t\t\tgetCurrentVNode()\n\t\t\t\t)}`\n\t\t);\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.forceUpdate\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\treturn forceUpdate.call(this, callback);\n};\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tfor (let prop in props) {\n\t\tif (props.hasOwnProperty(prop) && prop !== 'children') {\n\t\t\tlet value = props[prop];\n\n\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\tif (typeof value == 'function') {\n\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t}\n\n\t\t\tvalue =\n\t\t\t\tObject(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${\n\t\tchildren && children.length ? '>..</' + name + '>' : ' />'\n\t}`;\n}\n","const ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nlet loggedTypeFailures = {};\n\n/**\n * Reset the history of which prop type warnings have been logged.\n */\nexport function resetPropWarnings() {\n\tloggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * Adapted from https://github.com/facebook/prop-types/blob/master/checkPropTypes.js\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n */\nexport function checkPropTypes(\n\ttypeSpecs,\n\tvalues,\n\tlocation,\n\tcomponentName,\n\tgetStack\n) {\n\tObject.keys(typeSpecs).forEach(typeSpecName => {\n\t\tlet error;\n\t\ttry {\n\t\t\terror = typeSpecs[typeSpecName](\n\t\t\t\tvalues,\n\t\t\t\ttypeSpecName,\n\t\t\t\tcomponentName,\n\t\t\t\tlocation,\n\t\t\t\tnull,\n\t\t\t\tReactPropTypesSecret\n\t\t\t);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tif (error && !(error.message in loggedTypeFailures)) {\n\t\t\tloggedTypeFailures[error.message] = true;\n\t\t\tconsole.error(\n\t\t\t\t`Failed ${location} type: ${error.message}${(getStack &&\n\t\t\t\t\t`\\n${getStack()}`) ||\n\t\t\t\t\t''}`\n\t\t\t);\n\t\t}\n\t});\n}\n","import { options, Fragment } from 'preact';\n\n/**\n * Get human readable name of the component/dom node\n * @param {import('./internal').VNode} vnode\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type === Fragment) {\n\t\treturn 'Fragment';\n\t} else if (typeof vnode.type == 'function') {\n\t\treturn vnode.type.displayName || vnode.type.name;\n\t} else if (typeof vnode.type == 'string') {\n\t\treturn vnode.type;\n\t}\n\n\treturn '#text';\n}\n\n/**\n * Used to keep track of the currently rendered `vnode` and print it\n * in debug messages.\n */\nlet renderStack = [];\n\n/**\n * Keep track of the current owners. An owner describes a component\n * which was responsible to render a specific `vnode`. This exclude\n * children that are passed via `props.children`, because they belong\n * to the parent owner.\n *\n * ```jsx\n * const Foo = props => <div>{props.children}</div> // div's owner is Foo\n * const Bar = props => {\n *   return (\n *     <Foo><span /></Foo> // Foo's owner is Bar, span's owner is Bar\n *   )\n * }\n * ```\n *\n * Note: A `vnode` may be hoisted to the root scope due to compiler\n * optimiztions. In these cases the `_owner` will be different.\n */\nlet ownerStack = [];\n\n/**\n * Get the currently rendered `vnode`\n * @returns {import('./internal').VNode | null}\n */\nexport function getCurrentVNode() {\n\treturn renderStack.length > 0 ? renderStack[renderStack.length - 1] : null;\n}\n\n/**\n * If the user doesn't have `@babel/plugin-transform-react-jsx-source`\n * somewhere in his tool chain we can't print the filename and source\n * location of a component. In that case we just omit that, but we'll\n * print a helpful message to the console, notifying the user of it.\n */\nlet hasBabelPlugin = false;\n\n/**\n * Check if a `vnode` is a possible owner.\n * @param {import('./internal').VNode} vnode\n */\nfunction isPossibleOwner(vnode) {\n\treturn typeof vnode.type == 'function' && vnode.type != Fragment;\n}\n\n/**\n * Return the component stack that was captured up to this point.\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getOwnerStack(vnode) {\n\tconst stack = [vnode];\n\tlet next = vnode;\n\twhile (next._owner != null) {\n\t\tstack.push(next._owner);\n\t\tnext = next._owner;\n\t}\n\n\treturn stack.reduce((acc, owner) => {\n\t\tacc += `  in ${getDisplayName(owner)}`;\n\n\t\tconst source = owner.__source;\n\t\tif (source) {\n\t\t\tacc += ` (at ${source.fileName}:${source.lineNumber})`;\n\t\t} else if (!hasBabelPlugin) {\n\t\t\thasBabelPlugin = true;\n\t\t\tconsole.warn(\n\t\t\t\t'Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.'\n\t\t\t);\n\t\t}\n\n\t\treturn (acc += '\\n');\n\t}, '');\n}\n\n/**\n * Setup code to capture the component trace while rendering. Note that\n * we cannot simply traverse `vnode._parent` upwards, because we have some\n * debug messages for `this.setState` where the `vnode` is `undefined`.\n */\nexport function setupComponentStack() {\n\tlet oldDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldRoot = options._root;\n\tlet oldVNode = options.vnode;\n\tlet oldRender = options._render;\n\n\toptions.diffed = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.pop();\n\t\t}\n\t\trenderStack.pop();\n\t\tif (oldDiffed) oldDiffed(vnode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\trenderStack.push(vnode);\n\t\t}\n\t\tif (oldDiff) oldDiff(vnode);\n\t};\n\n\toptions._root = (vnode, parent) => {\n\t\townerStack = [];\n\t\tif (oldRoot) oldRoot(vnode, parent);\n\t};\n\n\toptions.vnode = vnode => {\n\t\tvnode._owner =\n\t\t\townerStack.length > 0 ? ownerStack[ownerStack.length - 1] : null;\n\t\tif (oldVNode) oldVNode(vnode);\n\t};\n\n\toptions._render = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.push(vnode);\n\t\t}\n\n\t\tif (oldRender) oldRender(vnode);\n\t};\n}\n","import * as Preact from \"preact\";\nimport { useRef } from \"preact/hooks\";\nimport {\n  WithContextHooks,\n  WithGlobalContexts,\n  View,\n  useCtrlZListener,\n  AudioPlayer,\n} from \"~/view/components\";\n\nexport const App: Preact.FunctionComponent = () => {\n  const modal_container = useRef<HTMLDivElement>();\n  useCtrlZListener(modal_container);\n  return (\n    <WithGlobalContexts>\n      <WithContextHooks>\n        <View />\n        <textarea\n          id=\"clipboard-input\"\n          className=\"clipboard-input invisible\"\n          tabIndex={-1}\n        />\n        <AudioPlayer data=\"\" className=\"invisible\" id=\"measure-duration\" />\n        <div\n          ref={modal_container}\n          id=\"modal-container\"\n          className=\"modal-container\"\n        />\n      </WithContextHooks>\n    </WithGlobalContexts>\n  );\n};\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\t// We always have ref in props.ref, except for\n\t// mobx-react. It will call this function directly\n\t// and always pass ref as the second argument.\n\tfunction Forwarded(props, ref) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\tref = props.ref || ref;\n\t\treturn fn(\n\t\t\tclone,\n\t\t\t!ref || (typeof ref === 'object' && !('current' in ref)) ? null : ref\n\t\t);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent.componentWillUnmount =\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._suspendedComponentWillUnmount =\n\t\tsuspendingComponent.componentWillUnmount;\n\tsuspendingComponent.componentWillUnmount = () => {\n\t\tonResolved();\n\n\t\tif (suspendingComponent._suspendedComponentWillUnmount) {\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount();\n\t\t}\n\t};\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n","import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { _vnode: vnode, _container: container });\n}\n","// This file includes experimental React APIs exported from the \"scheduler\"\n// npm package. Despite being explicitely marked as unstable some libraries\n// already make use of them. This file is not a full replacement for the\n// scheduler package, but includes the necessary shims to make those libraries\n// work with Preact.\n\nexport const unstable_ImmediatePriority = 1;\nexport const unstable_UserBlockingPriority = 2;\nexport const unstable_NormalPriority = 3;\nexport const unstable_LowPriority = 4;\nexport const unstable_IdlePriority = 5;\n\n/**\n * @param {number} priority\n * @param {() => void} callback\n */\nexport function unstable_runWithPriority(priority, callback) {\n\treturn callback();\n}\n\nexport const unstable_now =\n\ttypeof performance === 'object' && typeof performance.now === 'function'\n\t\t? performance.now.bind(performance)\n\t\t: () => Date.now();\n","class TTSCache {\n  private cache: { [key: string]: TTS.TTSRequest } = {};\n\n  set = (request: TTS.TTSRequest) => {\n    this.cache[request.text] = { ...request };\n  };\n\n  remove = (request: TTS.TTSRequest) => {\n    delete this.cache[request.text];\n  };\n\n  get = (key: string) => {\n    return this.cache[key];\n  };\n\n  reset = () => {\n    Object.keys(this.cache).forEach(key => {\n      delete this.cache[key];\n    });\n  };\n}\n\nexport const tts_cache = new TTSCache();\n","export const VOICE_NAMES = [\n  \"Brian\",\n  \"Amy\",\n  \"Emma\",\n  \"Joanna\",\n  \"Kendra\",\n  \"Kimberly\",\n  \"Salli\",\n  \"Joey\",\n  \"Matthew\",\n  \"Geraint\",\n] as const;\nexport const DEFAULT_VOICE = VOICE_NAMES[0];\n\nexport const SPEED_CHARS = [\"¡\", \"₍₎\", \"≥\"] as const;\nexport const DEFAULT_SPEED_CHAR = SPEED_CHARS[0];\nexport const PAUSE_CHAR_SPEED_MODIFIED = \"ᴾ\";\n\nexport const DEFAULT_BITS_STRING = \"uni300\";\n\nexport const UNCATEGORIZED_GROUP_NAME = \"Not Categorized\";\n\nexport const DEFAULT_HISTORY_STEPS_LIMIT = 256;\n\nexport const REPOSITORY_URL = \"https://www.github.com/BlueLdr/tts-playground\";\n\n// calculated via linear regression of test data\nexport const PAUSE_CHAR_DURATION = {\n  Brian: { normal: 0.1999461211, speed: 0.08355150677 },\n  Amy: { normal: 0.1995261917, speed: 0.06229863459 },\n  Emma: { normal: 0.200174812, speed: 0.05020200451 },\n  Joanna: { normal: 0.2001859692, speed: 0.1044909511 },\n  Kendra: { normal: 0.199556391, speed: 0.06293196165 },\n  Kimberly: { normal: 0.200026191, speed: 0.1110108842 },\n  Salli: { normal: 0.2003132805, speed: 0.04992818797 },\n  Joey: { normal: 0.1998515038, speed: 0.09749575338 },\n  Matthew: { normal: 0.2000170338, speed: 0.03287844361 },\n  Geraint: { normal: 0.1995276872, speed: 0.1145263226 },\n};\n","import { DEFAULT_SPEED_CHAR, DEFAULT_VOICE } from \"~/common/constants\";\n\nexport const sample_snippets: TTS.Snippet[] = [\n  {\n    id: \"sample-snippet-1\",\n    text: \"VB\",\n    options: {\n      prefix: \"a\",\n      suffix: \"\",\n      default_count: 5,\n      space_after: false,\n      space_before: true,\n    },\n  },\n  {\n    id: \"sample-snippet-2\",\n    text: \"brur\",\n    options: {\n      prefix: \"ur\",\n      suffix: \"?^\",\n      default_count: 2,\n      space_after: true,\n      space_before: true,\n    },\n  },\n  {\n    id: \"sample-snippet-3\",\n    text: \"PX\",\n    options: {\n      prefix: \"y\",\n      suffix: \"\",\n      default_count: 5,\n      space_after: false,\n      space_before: true,\n    },\n  },\n  {\n    id: \"sample-snippet-4\",\n    text: \"HJ\",\n    options: {\n      prefix: \"a\",\n      suffix: \"\",\n      default_count: 5,\n      space_after: false,\n      space_before: true,\n    },\n  },\n  {\n    id: \"sample-snippet-5\",\n    text: \"ﬆ\",\n    options: {\n      prefix: \"\",\n      suffix: \"\",\n      default_count: 5,\n      space_after: false,\n      space_before: true,\n    },\n  },\n];\n\nexport const sample_snippets_sections: TTS.SnippetsSection[] = [\n  {\n    name: \"Sample Snippets\",\n    open: true,\n    data: [\"sample-snippet-1\", \"sample-snippet-2\"],\n  },\n  {\n    name: \"Sprinkler Noises\",\n    open: false,\n    data: [\"sample-snippet-3\", \"sample-snippet-4\", \"sample-snippet-5\"],\n  },\n];\n\nexport const sample_messages: TTS.Message[] = [\n  {\n    id: \"sample-message-1\",\n    name: \"Sample Message\",\n    text: \"This is a sample message. No silly noises here boink\",\n    options: {\n      bits: \"\",\n      speed: false,\n      max_length: 255,\n      speed_char: DEFAULT_SPEED_CHAR,\n      voice: DEFAULT_VOICE,\n    },\n  },\n  {\n    id: \"sample-message-2\",\n    name: \"Silly Message\",\n    text: \"This is a silly message. Do not send this message to the streamer. OOHOO HOO ᴾᴾᴾ HE DOESN'T KNOW LMAO ᴾᴾᴾᴾᴾᴾ HE LACKS CRITICAL INFORMATION OMEGA LAUGHING ᴾᴾᴾᴾᴾᴾᴾ\",\n    options: {\n      bits: \"\",\n      speed: true,\n      max_length: 255,\n      speed_char: DEFAULT_SPEED_CHAR,\n      voice: DEFAULT_VOICE,\n    },\n  },\n];\n\nexport const sample_message_categories: TTS.MessageCategory[] = [\n  {\n    name: \"Sample Messages\",\n    open: true,\n    data: [\"sample-message-1\", \"sample-message-2\"],\n  },\n];\n","import { HelpDataKey } from \"~/view/components/help/help-data\";\n\nexport enum OptimizeTrigger {\n  manual = 0,\n  submit = 1,\n  blur = 2,\n  stop = 3,\n  edit = 4,\n}\n\nexport enum OptimizeLevel {\n  safe = 0,\n  normal = 1,\n  max = 2,\n}\n\ndeclare global {\n  namespace TTS {\n    interface Message {\n      id: string;\n      text: string;\n      name: string;\n      options: MessageOptions;\n    }\n\n    interface MessageOptions {\n      max_length: number;\n      speed: boolean;\n      bits: string;\n      speed_char?: string;\n      voice: string;\n    }\n\n    type LoadMessageEvent = CustomEvent<{\n      callback: () => void;\n      id: string | null;\n      prev_id: string | null;\n      passive?: boolean;\n    }>;\n\n    interface MessageCategory {\n      name: string;\n      open: boolean;\n      data: string[];\n    }\n\n    interface MessageCategoryPopulated {\n      name: string;\n      open: boolean;\n      data: TTS.Message[];\n    }\n\n    interface Snippet {\n      id: string;\n      text: string;\n      options: SnippetOptions;\n    }\n\n    interface SnippetOptions {\n      prefix?: string;\n      suffix?: string;\n      space_before: boolean;\n      space_after: boolean;\n      default_count: number;\n    }\n\n    interface SnippetsSection {\n      name: string;\n      open: boolean;\n      data: string[];\n    }\n\n    interface SnippetsSectionPopulated {\n      name: string;\n      open: boolean;\n      data: Snippet[];\n    }\n\n    interface EditorState {\n      text: string;\n      max_length: number;\n      speed: boolean;\n      voice: string;\n      bits: string;\n      pause_duration: number;\n      speed_char: string;\n    }\n\n    interface EditorHistory {\n      keep?: boolean;\n      state: TTS.EditorState;\n      cursor: {\n        start: number;\n        end: number;\n      };\n      cursor_before?: {\n        start: number;\n        end: number;\n      };\n    }\n\n    interface EditorHistoryStorage {\n      data: EditorHistory[];\n      index: number;\n    }\n\n    interface EditorSettings {\n      trim_whitespace: boolean;\n      optimize_words: OptimizeTrigger;\n      optimize_level: OptimizeLevel;\n      bits_string: string;\n      history_steps: number;\n      skip_tutorials: boolean;\n      stop_playback_at_modifier: boolean;\n    }\n\n    type OptimizeTriggerName = Exclude<keyof typeof OptimizeTrigger, \"blur\">;\n    type OptimizeLevelName = keyof typeof OptimizeLevel;\n\n    type OptimizeCallback = (\n      new_text: string,\n      cursor_start: number,\n      cursor_end: number,\n      trigger: OptimizeTrigger\n    ) => void;\n\n    type OptimizeEvent = CustomEvent<{\n      trigger: OptimizeTrigger;\n      input: preact.RefObject<HTMLTextAreaElement>;\n      callback?: OptimizeCallback;\n      refocus_target?: HTMLElement;\n    }>;\n\n    interface AppState {\n      volume: number;\n      message: string | null;\n      editor: EditorState;\n      settings: EditorSettings;\n    }\n\n    interface RequestStatus {\n      pending: boolean;\n      success: boolean;\n      error?: any;\n    }\n\n    interface TTSRequest {\n      text: string;\n      promise: Promise<string>;\n      data: string;\n    }\n\n    type ExportedSettings = EditorSettings & { __type: \"settings\" };\n    type ExportedMessage = Message & { __type: \"message\" };\n    type ExportedMessageCategory = Omit<MessageCategory, \"data\"> & {\n      __type: \"message-category\";\n      data: string[] | TTS.ExportedMessage[];\n    };\n    type ExportedSnippet = Snippet & { __type: \"snippet\" };\n    type ExportedSnippetsSection = Omit<SnippetsSection, \"data\"> & {\n      __type: \"snippets-section\";\n      data: string[] | ExportedSnippet[];\n    };\n\n    interface ExportData {\n      __type: \"export-data\";\n      settings?: ExportedSettings;\n      messages?: ExportedMessage[];\n      snippets?: ExportedSnippet[];\n      messageCategories?: ExportedMessageCategory[];\n      snippetsSections?: ExportedSnippetsSection[];\n    }\n\n    type AnyExportData =\n      | TTS.ExportData\n      | TTS.ExportData[\"settings\"]\n      | TTS.ExportData[\"messages\"]\n      | TTS.ExportData[\"snippets\"]\n      | TTS.ExportedMessage\n      | TTS.ExportedMessageCategory\n      | TTS.ExportedSnippetsSection\n      | TTS.ExportedSnippet\n      | (\n          | TTS.ExportedMessage\n          | TTS.ExportedMessageCategory\n          | TTS.ExportedSnippetsSection\n          | TTS.ExportedSnippet\n          | TTS.ExportedSettings\n        )[];\n\n    interface ExportFile {\n      name: string;\n      data: string;\n    }\n\n    interface HelpItem {\n      key: string;\n      name: string;\n      content:\n        | string\n        | preact.ComponentType<{ goToHelp: (key: HelpDataKey) => void }>;\n      tutorial?: boolean;\n    }\n\n    type HelpKey = HelpDataKey;\n\n    type HelpCompletedMap = {\n      [K in HelpDataKey]?: boolean;\n    };\n  }\n}\n\nexport default TTS;\n","import {\n  DEFAULT_BITS_STRING,\n  DEFAULT_HISTORY_STEPS_LIMIT,\n  DEFAULT_SPEED_CHAR,\n  DEFAULT_VOICE,\n  do_confirm,\n  sample_message_categories,\n  sample_messages,\n  sample_snippets,\n  sample_snippets_sections,\n  UNCATEGORIZED_GROUP_NAME,\n} from \"~/common\";\nimport { OptimizeLevel, OptimizeTrigger } from \"~/model/types\";\n\nconst load_storage_or = (key, def) => {\n  const stored = localStorage.getItem(key);\n  if (stored) {\n    return JSON.parse(stored) || def;\n  }\n  return def;\n};\n\nexport const get_stored_snippets = (): TTS.Snippet[] =>\n  load_storage_or(\"tts-snippets\", sample_snippets);\nexport const set_stored_snippets = (value: TTS.Snippet[]) =>\n  localStorage.setItem(\"tts-snippets\", JSON.stringify(value));\n\nexport const get_stored_snippets_sections = (): TTS.SnippetsSection[] =>\n  load_storage_or(\"tts-snippets-sections\", sample_snippets_sections);\nexport const set_stored_snippets_sections = (value: TTS.SnippetsSection[]) =>\n  localStorage.setItem(\"tts-snippets-sections\", JSON.stringify(value));\n\nexport const get_stored_messages = (): TTS.Message[] =>\n  load_storage_or(\"tts-messages\", sample_messages);\nexport const set_stored_messages = (value: TTS.Message[]) =>\n  localStorage.setItem(\"tts-messages\", JSON.stringify(value));\n\nexport const get_stored_message_categories = (): TTS.MessageCategory[] =>\n  load_storage_or(\"tts-message-categories\", sample_message_categories);\nexport const set_stored_message_categories = (value: TTS.MessageCategory[]) =>\n  localStorage.setItem(\"tts-message-categories\", JSON.stringify(value));\n\nexport const get_stored_uncategorized_messages = (): TTS.MessageCategory =>\n  load_storage_or(\"tts-uncat-messages\", DEFAULT_UNCAT_MESSAGES);\nexport const set_stored_uncategorized_messages = (value: TTS.MessageCategory) =>\n  localStorage.setItem(\"tts-uncat-messages\", JSON.stringify(value));\n\nexport const get_stored_state = (): TTS.AppState =>\n  load_storage_or(\"tts-state\", DEFAULT_STATE);\nexport const set_stored_state = (value: TTS.AppState) =>\n  localStorage.setItem(\"tts-state\", JSON.stringify(value));\n\nexport const get_stored_help = (): TTS.HelpCompletedMap =>\n  load_storage_or(\"tts-help\", {});\nexport const set_stored_help = (value: TTS.HelpCompletedMap) =>\n  localStorage.setItem(\"tts-help\", JSON.stringify(value));\n\nexport const reset_all_storage = (clear_help?: boolean) => {\n  if (do_confirm(\"Are you REALLY sure you wanna do this?\")) {\n    localStorage.setItem(\"tts-state\", \"\");\n    localStorage.setItem(\"tts-messages\", \"\");\n    localStorage.setItem(\"tts-message-categories\", \"\");\n    localStorage.setItem(\"tts-snippets\", \"\");\n    clear_help && localStorage.setItem(\"tts-help\", \"\");\n    window.location.reload();\n  }\n};\n\nexport const DEFAULT_UNCAT_MESSAGES: TTS.MessageCategory = {\n  name: UNCATEGORIZED_GROUP_NAME,\n  open: false,\n  data: [],\n};\n\nexport const DEFAULT_STATE: TTS.AppState = {\n  settings: {\n    bits_string: DEFAULT_BITS_STRING,\n    trim_whitespace: true,\n    optimize_words: OptimizeTrigger.manual,\n    optimize_level: OptimizeLevel.normal,\n    history_steps: DEFAULT_HISTORY_STEPS_LIMIT,\n    skip_tutorials: false,\n    stop_playback_at_modifier: true,\n  },\n  message: null,\n  volume: 0.5,\n  editor: {\n    max_length: 255,\n    speed: false,\n    bits: \"\",\n    text: \"Sample text\",\n    pause_duration: 1,\n    speed_char: DEFAULT_SPEED_CHAR,\n    voice: DEFAULT_VOICE,\n  },\n};\n","export const capitalize = (str: string | undefined) =>\n  str != null\n    ? str.length > 1\n      ? `${str[0].toUpperCase()}${str.slice(1, str.length)}`\n      : str.toUpperCase()\n    : \"\";\n\nexport type ArrayInsertPosSpecifier<T> =\n  | \"start\"\n  | \"end\"\n  | number\n  | ((a: T, b: T) => -1 | 0 | 1);\n\n// helper functions to manipulate arrays without mutating the original copy\nexport const add_item_to = <T>(\n  list: readonly T[],\n  item: T,\n  pos: ArrayInsertPosSpecifier<T> = \"end\"\n): T[] => {\n  if (!item) {\n    return list ? list.slice() : [];\n  }\n  if (!list) {\n    list = [];\n  }\n  if (list.length === 0) {\n    return [item];\n  }\n  let index = typeof pos === \"number\" ? pos : -1;\n  if (typeof pos === \"function\") {\n    let i = 0;\n    while (i < list.length && index < 0) {\n      const comp = pos(item, list[i]);\n      if (comp === 1) {\n        i++;\n      } else {\n        index = i;\n      }\n    }\n  }\n  if (index > 0 && index < list.length) {\n    return [...list.slice(0, index), item, ...list.slice(index)];\n  } else if (typeof pos !== \"string\") {\n    pos = index === 0 ? \"start\" : \"end\";\n  }\n  return pos === \"start\" ? [item].concat(list) : list.concat([item]);\n};\n\nexport const remove_item_from = <T>(\n  list: readonly T[],\n  match: (item: T, index?: number) => boolean\n): T[] => {\n  const index = list.findIndex(match);\n  if (index === -1) return list.slice();\n  return list.slice(0, index).concat(list.slice(index + 1));\n};\n\nexport const replace_item_in = <T extends string | number | boolean | object>(\n  list: readonly T[],\n  match: (item: T, index?: number) => boolean,\n  new_item: T | ((prev_value?: T) => T),\n  append_if_missing?: ArrayInsertPosSpecifier<T>\n): T[] => {\n  const index = list.findIndex(match);\n  const new_value =\n    typeof new_item === \"function\" ? new_item(list[index]) : new_item;\n  if (index === -1) {\n    return append_if_missing\n      ? add_item_to(list, new_value, append_if_missing)\n      : list.slice();\n  }\n  return list\n    .slice(0, index)\n    .concat([new_value])\n    .concat(list.slice(index + 1));\n};\n\nexport const union_arrays = <T>(\n  arr1: T[],\n  arr2: T[],\n  is_equal?: keyof T | ((a: T, b: T) => boolean)\n) => {\n  if (arr1.length === 0) {\n    return arr2;\n  }\n  if (arr2.length === 0) {\n    return arr1;\n  }\n  return arr1.concat(\n    arr2.filter(b => {\n      if (is_equal != null) {\n        if (typeof is_equal === \"function\") {\n          return !arr1.some(a => is_equal(b, a));\n        }\n        return !arr1.some(a => a[is_equal] === b[is_equal]);\n      }\n      return !arr1.includes(b);\n    })\n  );\n};\n\nexport const deep_equals = (\n  a: any,\n  b: any,\n  max_depth: number = 10,\n  assume_different_after_max_depth: boolean = false,\n  depth: number = 0\n) => {\n  if (depth > max_depth) {\n    return assume_different_after_max_depth;\n  }\n  if (a === b) {\n    return true;\n  }\n  const ta = typeof a;\n  const tb = typeof b;\n  if (tb !== ta) {\n    return false;\n  }\n  if (a === null || b === null) {\n    return a === null && b === null;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every((v, i) =>\n        deep_equals(\n          v,\n          b[i],\n          max_depth,\n          assume_different_after_max_depth,\n          depth + 1\n        )\n      )\n    );\n  }\n  if (ta === \"object\") {\n    const ea = Object.entries(a);\n    const eb = Object.entries(b);\n    return (\n      ea.length === eb.length &&\n      ea.every(\n        ([k, v]) =>\n          k in b &&\n          deep_equals(\n            v,\n            b[k],\n            max_depth,\n            assume_different_after_max_depth,\n            depth + 1\n          )\n      )\n    );\n  }\n  return a === b;\n};\n\nexport const do_alert = (...args) => {\n  const focused = document.activeElement;\n  alert(...args);\n  if (focused instanceof HTMLElement) {\n    focused?.focus();\n  }\n};\n\nexport const do_confirm = (...args) => {\n  const focused = document.activeElement;\n  const result = confirm(...args);\n  if (focused instanceof HTMLElement) {\n    focused?.focus();\n  }\n  return result;\n};\n\nexport const random_hex_str = (length: number) => {\n  if (length <= 0) {\n    return \"\";\n  }\n  const multiple = Math.pow(10, length * 2);\n  const min = parseInt(\"f\".repeat(length - 1), 16);\n\n  let num;\n  while ((num = Math.round(Math.random() * multiple)) <= min) {}\n\n  return num.toString(16).slice(-length);\n};\n\nexport const generate_id = (base: string) => {\n  const d = Date.now().toString(16);\n  const r = random_hex_str(16 - d.length);\n  const rd = `${r.slice(0, Math.round(r.length / 2))}${d}${r.slice(\n    Math.round(r.length / 2)\n  )}`.split(\"\");\n  const n = base.split(\"\").map(c => (c.charCodeAt(0) % 16).toString(16));\n  if (n.length < 16) {\n    n.push(...random_hex_str(16 - n.length).split(\"\"));\n  }\n  return n\n    .slice(0, 16)\n    .map((c, i) => `${rd[i]}${c}`)\n    .join(\"\");\n};\n\nexport const comparator =\n  <T extends object>(\n    extract: PropsOfType<T, string | number> | ((item: T) => number),\n    direction: \"asc\" | \"desc\" = \"asc\",\n    fallback?: (a: T, b: T) => -1 | 0 | 1\n  ) =>\n  (a: T, b: T): -1 | 0 | 1 => {\n    const v_a = typeof extract === \"function\" ? extract(a) : a[extract];\n    const v_b = typeof extract === \"function\" ? extract(b) : b[extract];\n    return ((direction === \"asc\" ? 1 : -1) *\n      (v_a < v_b ? -1 : v_a > v_b ? 1 : fallback ? fallback(a, b) : 0)) as\n      | 1\n      | 0\n      | -1;\n  };\n\nexport const regex_last_match = (\n  str: string,\n  regex: RegExp,\n  from_index?: number\n): RegExpExecArray | null => {\n  let result = null;\n  let match = null;\n  while (\n    (match = regex.exec(str)) != null &&\n    match?.index < (from_index ?? str.length) &&\n    // prevent inf loop\n    (!!result ? match?.index !== result.index : true)\n  ) {\n    result = match;\n  }\n  return result;\n};\n","import { tts_cache } from \"~/common/cache\";\nimport { DEFAULT_VOICE, SPEED_CHARS } from \"~/common/constants\";\nimport { do_alert, regex_last_match } from \"./utils\";\n\nexport const TTS_URL = (voice: string = DEFAULT_VOICE) =>\n  `https://api.streamelements.com/kappa/v2/speech?voice=${voice}&text=`;\n\n/**\n * @param text {string}\n * @param voice {string}\n * @returns {Promise<string>}\n */\nexport const get_tts_data = async (\n  text: string,\n  voice: string = DEFAULT_VOICE\n): Promise<string> => {\n  if (!text) {\n    return Promise.reject();\n  }\n  const request: TTS.TTSRequest = tts_cache.get(`${voice}:${text}`) ?? {\n    text: `${voice}:${text}`,\n    promise: undefined,\n    data: \"\",\n  };\n  if (request.data) {\n    return request.data;\n  }\n  if (!request.promise) {\n    request.text = `${voice}:${text}`;\n    request.data = \"\";\n    request.promise = fetch(TTS_URL(voice) + encodeURIComponent(text.trim()))\n      .then(async res => {\n        if (res.status != 200) {\n          const msg = await res.text();\n          do_alert(msg);\n          tts_cache.remove(request);\n          return Promise.reject(msg);\n        }\n\n        const mp3 = await res.blob();\n        request.data = URL.createObjectURL(mp3);\n        tts_cache.set(request);\n\n        return request.data;\n      })\n      .catch(err => {\n        console.error(`Failed to get TTS data:`, err);\n        return Promise.reject(err);\n      });\n    tts_cache.set(request);\n  }\n\n  return request.promise;\n};\n\nexport const play_audio = (\n  audioElemId?: string,\n  should_load: boolean = true,\n  start_time: number = 0,\n  end_time?: number\n) => {\n  const audio = document.getElementById(\n    audioElemId ? `${audioElemId}-audio` : \"audio\"\n  );\n  if (!(audio instanceof HTMLAudioElement)) {\n    return;\n  }\n  audio.pause();\n  if (should_load) {\n    if (start_time > 0) {\n      audio.addEventListener(\n        \"canplaythrough\",\n        () => {\n          audio.currentTime = start_time;\n        },\n        { once: true }\n      );\n    }\n    audio.load();\n  } else {\n    audio.currentTime = start_time;\n  }\n  if (end_time && end_time > 0) {\n    const listener = () => {\n      if (audio.currentTime >= end_time + 1) {\n        audio.pause();\n        audio.removeEventListener(\"timeupdate\", listener);\n      }\n    };\n    audio.addEventListener(\"timeupdate\", listener);\n  }\n  audio.play();\n};\n\nexport const get_speed_modifier = (message: TTS.Message) => {\n  const {\n    text,\n    options: { max_length, speed, bits, speed_char },\n  } = message;\n  let text_ = bits ? `${bits} ${text}` : text;\n  if (!speed || !speed_char || text_.length >= max_length - 1) {\n    return \"\";\n  }\n  return speed_char\n    .repeat(max_length - text_.length)\n    .slice(0, max_length - text_.length);\n};\n\n// predicts duration of text before speed modifier\n// x: duration of text without speed modifier\n// y: number of speed modifier characters\nconst speed_duration_equations: ObjectOf<\n  ObjectOf<(x: number, y: number) => number>\n> = {\n  Brian: {\n    [SPEED_CHARS[0]]: (x, y) =>\n      -0.004804943951 * Math.pow(x, 2) +\n      1.034989221 * x +\n      0.0001032108018 * Math.pow(y, 2) +\n      -0.01230543739 * y +\n      -0.02559110019,\n    [SPEED_CHARS[1]]: (x, y) =>\n      -0.006894924164 * Math.pow(x, 2) +\n      1.10503311 * x +\n      0.00008364119949 * Math.pow(y, 2) +\n      -0.01117538952 * y +\n      -0.05257275558,\n    [SPEED_CHARS[2]]: (x, y) =>\n      0.04697671721 * Math.pow(x, 2) +\n      0.8024347343 * x +\n      -0.00008669458965 * Math.pow(y, 2) +\n      0.01149287335 * y +\n      -0.05711350097,\n  },\n  Amy: {\n    [SPEED_CHARS[0]]: (x, y) =>\n      -0.0004864875063 * Math.pow(x, 2) +\n      0.06758773105 * x +\n      -0.06136184459 * Math.pow(y, 2) +\n      1.865900893 * y +\n      -3.127775073,\n    [SPEED_CHARS[1]]: (x, y) =>\n      -0.0002582598232 * Math.pow(x, 2) +\n      0.04793784106 * x +\n      -0.0746356267 * Math.pow(y, 2) +\n      1.990340676 * y +\n      -3.120363155,\n    [SPEED_CHARS[2]]: (x, y) =>\n      -0.000003997373737 * Math.pow(x, 2) +\n      -0.0009238623232 * x +\n      -0.0307274085 * Math.pow(y, 2) +\n      1.353685899 * y +\n      -0.6190789821,\n  },\n};\n\nconst get_duration = async (\n  text: string,\n  voice: string\n): Promise<number | undefined> => {\n  if (!text || !voice) {\n    return;\n  }\n\n  const audio = document.getElementById(\n    \"measure-duration-audio\"\n  ) as HTMLAudioElement;\n  const source = document.getElementById(\n    \"measure-duration-source\"\n  ) as HTMLSourceElement;\n  if (!audio || !source) {\n    return;\n  }\n\n  const data = await get_tts_data(text, voice).catch(err => {\n    console.error(\n      `Error occurred while trying to measure message duration:`,\n      err\n    );\n    return;\n  });\n  if (!data) {\n    return;\n  }\n\n  return new Promise<number>(resolve => {\n    audio.addEventListener(\n      \"canplaythrough\",\n      () => {\n        resolve(audio.duration);\n      },\n      { once: true }\n    );\n    source.src = data;\n    audio.load();\n  });\n};\n\nconst DUR_CHECK_EXTRA_CHAR = \"ᴾᴾ\";\nconst DUR_CHECK_EXTRA_CHAR_DURATION = 0.287333;\nconst SPEED_BREAK_REGEX =\n  /(?:\\s+[{(\\[]\\s*)|(?:\\s*[}:\\])]\\s+)|(?:[;!?,])|(?:\\s+[\\\\|]\\s+)|(?:\\s+\\/(?:\\s+\\/)+\\s+)|(?:(?:\\s+\\.\\s*)|(?:\\s*\\.\\s+))/g;\nconst START_AT_CURSOR_OFFSET = 0.5;\n\nexport const predict_duration = async (\n  message: TTS.Message,\n  start_index?: number\n): Promise<[duration: number, start_time: number] | undefined> => {\n  const { speed, voice, speed_char, max_length } = message.options;\n  const is_sped = speed && max_length > message.text.length;\n\n  const result = await (async (): Promise<\n    [duration: number, start_time: number] | undefined\n  > => {\n    /** duration of the whole message text, without speed modifiers */\n    const base_duration = await get_duration(message.text, voice);\n    if (!start_index && !is_sped) {\n      return [base_duration, 0];\n    }\n\n    const adj_start = start_index\n      ? regex_last_match(\n          message.text,\n          /[\\s;/\\\\{}\\[\\]:.<>\\-_+=()*^%$#~|!?,ᴾ0-9]/gi,\n          start_index\n        )\n      : null;\n    if (\n      adj_start &&\n      adj_start.index > 0 &&\n      adj_start.index < message.text.length\n    ) {\n      start_index = adj_start.index + adj_start[0].length;\n    }\n    if (start_index && (!speed || max_length <= message.text.length)) {\n      const start_time = await get_duration(\n        message.text.slice(0, start_index),\n        voice\n      );\n      return [base_duration, start_time];\n    }\n\n    /** regex match for the speed-breaking text */\n    let break_match = is_sped\n      ? regex_last_match(message.text, SPEED_BREAK_REGEX)\n      : null;\n\n    if (!break_match) {\n      if (!start_index) {\n        return [\n          speed_duration_equations[voice]?.[speed_char]?.(\n            base_duration,\n            get_speed_modifier(message).length\n          ),\n          0,\n        ];\n      } else {\n        // @ts-expect-error:\n        break_match = {\n          [0]: \"\",\n          index: 0,\n        };\n      }\n    }\n\n    /** start index of the speed-modified text */\n    const sped_start_index = break_match.index + break_match[0].length;\n    const text_sped = message.text.slice(sped_start_index);\n\n    /** Duration of the to-be-modified text, unmodified */\n    const sped_duration_normal = await get_duration(\n      text_sped.trimStart(),\n      voice\n    );\n    /** Duration of the speed-modified text */\n    const sped_duration_modified: number | undefined = speed_duration_equations[\n      voice\n    ]?.[speed_char]?.(sped_duration_normal, get_speed_modifier(message).length);\n\n    /** duration of the message before the speed-breaking text */\n    const unsped_duration = base_duration - sped_duration_normal;\n\n    /** Full duration of the real message */\n    const duration = unsped_duration + sped_duration_modified;\n\n    if (!start_index || start_index <= 0 || start_index > message.text.length) {\n      return [duration, 0];\n    }\n\n    if (start_index >= break_match.index && start_index <= sped_start_index) {\n      return [duration, unsped_duration];\n    }\n\n    if (start_index >= sped_start_index) {\n      const sped_ratio = sped_duration_modified / sped_duration_normal;\n      const start_sped = start_index - sped_start_index;\n      let sped_before_dur, sped_after_dur;\n      if (start_sped > text_sped.length / 2) {\n        sped_before_dur = await get_duration(\n          text_sped.slice(0, start_sped),\n          voice\n        );\n        sped_after_dur = (sped_duration_normal - sped_before_dur) * sped_ratio;\n      } else {\n        sped_after_dur = await get_duration(text_sped.slice(start_sped), voice);\n        sped_after_dur *= sped_ratio;\n      }\n      return [duration, duration - sped_after_dur];\n    }\n\n    const unsped_text = message.text.slice(0, sped_start_index);\n    let before_dur, after_dur;\n    if (start_index > unsped_text.length / 2) {\n      before_dur = await get_duration(unsped_text.slice(0, start_index), voice);\n    } else {\n      after_dur = await get_duration(\n        `${unsped_text.slice(start_index)} ${DUR_CHECK_EXTRA_CHAR}`,\n        voice\n      );\n      before_dur = unsped_duration - after_dur + DUR_CHECK_EXTRA_CHAR_DURATION;\n    }\n    return [duration, before_dur];\n  })().catch(() => {});\n\n  if (!result) {\n    return;\n  }\n  return [result[0], Math.max(0, result[1] - START_AT_CURSOR_OFFSET)];\n};\n","export * from \"./cache\";\nexport * from \"./constants\";\nexport * from \"./sample-data\";\nexport * from \"./storage\";\nexport * from \"./tts\";\nexport * from \"./utils\";\n","import * as common from \"~/common\";\n\nconst stored_state = common.get_stored_state();\nconst initial_state: TTS.AppState = {\n  volume: stored_state?.volume ?? common.DEFAULT_STATE.volume,\n  message:\n    typeof stored_state?.message === \"string\"\n      ? stored_state.message\n      : common.DEFAULT_STATE.message,\n  settings: {\n    trim_whitespace:\n      stored_state?.settings?.trim_whitespace ??\n      common.DEFAULT_STATE.settings.trim_whitespace,\n    optimize_words:\n      stored_state?.settings?.optimize_words ??\n      common.DEFAULT_STATE.settings.optimize_words,\n    optimize_level:\n      stored_state?.settings?.optimize_level ??\n      common.DEFAULT_STATE.settings.optimize_level,\n    bits_string:\n      stored_state?.settings?.bits_string ??\n      common.DEFAULT_STATE.settings.bits_string,\n    history_steps:\n      stored_state?.settings?.history_steps ??\n      common.DEFAULT_STATE.settings.history_steps,\n    skip_tutorials:\n      stored_state?.settings?.skip_tutorials ??\n      common.DEFAULT_STATE.settings.skip_tutorials,\n    stop_playback_at_modifier:\n      stored_state?.settings?.stop_playback_at_modifier ??\n      common.DEFAULT_STATE.settings.stop_playback_at_modifier,\n  },\n  editor: {\n    text: stored_state?.editor?.text ?? common.DEFAULT_STATE.editor.text,\n    max_length:\n      stored_state?.editor?.max_length ??\n      common.DEFAULT_STATE.editor.max_length,\n    speed: stored_state?.editor?.speed ?? common.DEFAULT_STATE.editor.speed,\n    bits: stored_state?.editor?.bits ?? common.DEFAULT_STATE.editor.bits,\n    pause_duration:\n      stored_state?.editor?.pause_duration ??\n      common.DEFAULT_STATE.editor.pause_duration,\n    speed_char:\n      stored_state?.editor?.speed_char ??\n      common.DEFAULT_STATE.editor.speed_char,\n    voice: stored_state?.editor?.voice ?? common.DEFAULT_STATE.editor.voice,\n  },\n};\n\nconst messages: TTS.Message[] = common.get_stored_messages() ?? [];\nconst message_categories: TTS.MessageCategory[] =\n  common.get_stored_message_categories() ?? [];\nconst uncategorized_msgs: TTS.MessageCategory =\n  common.get_stored_uncategorized_messages() ?? common.DEFAULT_UNCAT_MESSAGES;\nconst snippets: TTS.Snippet[] = common.get_stored_snippets() ?? [];\nconst snippets_sections: TTS.SnippetsSection[] =\n  common.get_stored_snippets_sections() ?? [];\nconst help: TTS.HelpCompletedMap = common.get_stored_help() ?? {};\nexport const INITIAL_STATE = {\n  ...initial_state,\n  messages,\n  message_categories,\n  uncategorized_msgs,\n  snippets,\n  snippets_sections,\n  help,\n} as const;\n","import * as Preact from \"preact\";\nimport * as hooks from \"preact/hooks\";\nimport { INITIAL_STATE } from \"~/model/initial-state\";\nimport { OptimizeTrigger } from \"~/model/types\";\n\nexport const createNamedContext = <T extends any>(\n  initialValue: T,\n  name\n): Preact.Context<ImmutableContextValue<T>> => {\n  const ctx = Preact.createContext(\n    new ImmutableContextValue(initialValue, () => {})\n  );\n  ctx.displayName = name;\n  return ctx;\n};\n\nexport class ImmutableContextValue<T extends any, S = hooks.StateUpdater<T>> {\n  constructor(value: T, setValue: S) {\n    this._value = value;\n    this._setValue = setValue;\n  }\n  private _value: T;\n  private _setValue: S;\n  get value() {\n    return this._value;\n  }\n  get setValue() {\n    return this._setValue;\n  }\n  set value(val) {}\n  set setValue(val) {}\n}\n\nexport const VOLUME_CTX = createNamedContext<number>(\n  INITIAL_STATE.volume,\n  \"VOLUME_CTX\"\n);\nexport const EDITOR_STATE = createNamedContext<TTS.EditorState>(\n  INITIAL_STATE.editor,\n  \"EDITOR_STATE\"\n);\n\nexport const LOADED_MESSAGE = createNamedContext<string | null>(\n  INITIAL_STATE.message ?? null,\n  \"LOADED_MESSAGE\"\n) as Preact.Context<\n  ImmutableContextValue<\n    string | null,\n    (index: string | null, force?: boolean, passive?: boolean) => boolean\n  >\n>;\n\nexport const EDITOR_UNSAVED = createNamedContext<boolean>(\n  true,\n  \"EDITOR_UNSAVED\"\n);\n\nexport const EDIT_MSG_TARGET = createNamedContext<number | undefined>(\n  undefined,\n  \"EDIT_MSG_TARGET\"\n);\n\nexport const ADD_SNIPPET_CALLBACK = createNamedContext<\n  (value: string, flag?: \"start\" | \"end\") => void\n>(() => {}, \"ADD_SNIPPET_CALLBACK\");\n\nexport const OPTIMIZE_MESSAGE_CALLBACK = createNamedContext<\n  (trigger: OptimizeTrigger, refocus?: HTMLElement) => void\n>(() => {}, \"OPTIMIZE_MESSAGE_CALLBACK\");\n\nexport const EDITOR_SETTINGS = createNamedContext<TTS.EditorSettings>(\n  INITIAL_STATE.settings,\n  \"EDITOR_SETTINGS\"\n);\n\nexport const MESSAGES = createNamedContext<TTS.Message[]>(\n  INITIAL_STATE.messages,\n  \"MESSAGES\"\n);\n\nexport const MESSAGE_CATEGORIES = createNamedContext<TTS.MessageCategory[]>(\n  INITIAL_STATE.message_categories,\n  \"MESSAGE_CATEGORIES\"\n);\n\nexport const UNCATEGORIZED_MESSAGES = createNamedContext<TTS.MessageCategory>(\n  INITIAL_STATE.uncategorized_msgs,\n  \"UNCATEGORIZED_MESSAGES\"\n) as Preact.Context<\n  ImmutableContextValue<\n    TTS.MessageCategory,\n    (uncat: TTS.MessageCategory, new_categories?: TTS.MessageCategory[]) => void\n  >\n>;\n\nexport const SNIPPETS = createNamedContext<TTS.Snippet[]>(\n  INITIAL_STATE.snippets,\n  \"SNIPPETS\"\n);\nexport const SNIPPETS_SECTIONS = createNamedContext<TTS.SnippetsSection[]>(\n  INITIAL_STATE.snippets_sections,\n  \"SNIPPETS_SECTIONS\"\n);\n\nexport const IS_OPTIMIZED = Preact.createContext<() => boolean>(() => false);\nIS_OPTIMIZED.displayName = \"IS_OPTIMIZED\";\n\nexport const HELP_ITEM = createNamedContext<TTS.HelpKey | null>(\n  null,\n  \"HELP_ITEM\"\n);\n\nexport const HELP_COMPLETED = createNamedContext<TTS.HelpCompletedMap>(\n  INITIAL_STATE.help,\n  \"HELP_COMPLETED\"\n);\n\nexport const MODAL_DIRTY = createNamedContext<boolean>(false, \"MODAL_DIRTY\");\n","import {\n  DEFAULT_BITS_STRING,\n  DEFAULT_HISTORY_STEPS_LIMIT,\n  DEFAULT_SPEED_CHAR,\n  DEFAULT_VOICE,\n} from \"~/common\";\nimport { OptimizeLevel, OptimizeTrigger } from \"~/model/types\";\n\nexport type TypeString<T extends boolean | string | number> = T extends boolean\n  ? \"boolean\"\n  : T extends string\n  ? \"string\"\n  : T extends number\n  ? \"number\"\n  : never;\n\nexport type SchemaOfProperty<T extends boolean | string | number> = {\n  type: TypeString<T>;\n  default?: T;\n  multi?: boolean;\n};\n\nexport type SchemaProp<T extends object, K extends keyof T> = T[K] extends\n  | boolean\n  | string\n  | number\n  ? SchemaOfProperty<T[K]> & { multi?: false }\n  : T[K] extends (infer F)[]\n  ? F extends object\n    ? { type: SchemaOf<F>; default?: {}; multi: true }\n    : { type: F; default: readonly [] | null; multi: true }\n  : T[K] extends object\n  ? { type: SchemaOf<T[K]>; default?: {}; multi?: false }\n  : never;\n\nexport type SchemaOf<T extends object> = {\n  [K in keyof T]: SchemaProp<T, K>;\n};\n\nexport const SETTINGS_SCHEMA: SchemaOf<TTS.EditorSettings> = {\n  trim_whitespace: { type: \"boolean\", default: false },\n  optimize_words: { type: \"number\", default: OptimizeTrigger.manual },\n  optimize_level: { type: \"number\", default: OptimizeLevel.normal },\n  bits_string: { type: \"string\", default: DEFAULT_BITS_STRING },\n  history_steps: { type: \"number\", default: DEFAULT_HISTORY_STEPS_LIMIT },\n  skip_tutorials: { type: \"boolean\", default: false },\n  stop_playback_at_modifier: { type: \"boolean\", default: true },\n};\n\nexport const SNIPPET_OPTIONS_SCHEMA: SchemaOf<TTS.SnippetOptions> = {\n  prefix: { type: \"string\", default: \"\" },\n  suffix: { type: \"string\", default: \"\" },\n  space_before: { type: \"boolean\", default: false },\n  space_after: { type: \"boolean\", default: false },\n  default_count: { type: \"number\", default: 1 },\n} as const;\n\nexport const SNIPPET_SCHEMA: SchemaOf<TTS.Snippet> = {\n  id: { type: \"string\" },\n  text: { type: \"string\" },\n  options: { type: SNIPPET_OPTIONS_SCHEMA },\n} as const;\n\nexport const SNIPPET_SECTION_SCHEMA: SchemaOf<TTS.SnippetsSection> = {\n  name: { type: \"string\" },\n  open: { type: \"boolean\", default: false },\n  data: { type: \"string\", default: [], multi: true },\n} as const;\n\nexport const MESSAGE_OPTIONS_SCHEMA: SchemaOf<TTS.MessageOptions> = {\n  max_length: { type: \"number\", default: 255 },\n  speed: { type: \"boolean\", default: false },\n  bits: { type: \"string\", default: \"\" },\n  speed_char: { type: \"string\", default: DEFAULT_SPEED_CHAR },\n  voice: { type: \"string\", default: DEFAULT_VOICE },\n};\n\nexport const MESSAGE_SCHEMA: SchemaOf<TTS.Message> = {\n  id: { type: \"string\" },\n  name: { type: \"string\" },\n  text: { type: \"string\" },\n  options: { type: MESSAGE_OPTIONS_SCHEMA },\n};\n\nexport const MESSAGE_CATEGORY_SCHEMA: SchemaOf<TTS.MessageCategory> = {\n  name: { type: \"string\" },\n  open: { type: \"boolean\", default: false },\n  data: { type: \"string\", default: [], multi: true },\n} as const;\n\nexport const HISTORY_CURSOR_SCHEMA: SchemaOf<TTS.EditorHistory[\"cursor\"]> = {\n  start: { type: \"number\" },\n  end: { type: \"number\" },\n};\nexport const HISTORY_SCHEMA: SchemaOf<TTS.EditorHistory> = {\n  keep: {\n    type: \"boolean\",\n    default: false,\n  },\n  state: {\n    type: {\n      ...MESSAGE_OPTIONS_SCHEMA,\n      text: { type: \"string\" },\n      pause_duration: { type: \"number\", default: 1 },\n      speed_char: { type: \"string\", default: DEFAULT_SPEED_CHAR },\n    },\n    default: {},\n  },\n  cursor: { type: HISTORY_CURSOR_SCHEMA },\n  cursor_before: {\n    type: HISTORY_CURSOR_SCHEMA,\n    default: {},\n  },\n};\n\nexport const HISTORY_STORAGE_SCHEMA: SchemaOf<TTS.EditorHistoryStorage> = {\n  data: {\n    type: HISTORY_SCHEMA,\n    default: [],\n    multi: true,\n  },\n  index: {\n    type: \"number\",\n  },\n};\n\nexport const conform_to_schema = <T extends object, K extends object>(\n  data: T,\n  schema: SchemaOf<K>\n): K | null => {\n  // @ts-expect-error:\n  const output: K = {};\n  let failed = false;\n  if (!data) {\n    return null;\n  }\n  Object.entries(schema).forEach(<PK extends keyof K>([key, type]) => {\n    if (failed) {\n      return;\n    }\n    const is_present = key in data;\n    const is_complex = typeof type.type !== \"string\";\n    const is_array = is_present && Array.isArray(data[key]);\n    const multi_matches = !!type.multi === is_array;\n    if (!is_present || !multi_matches) {\n      if (!(\"default\" in type)) {\n        failed = true;\n      } else if (!is_complex || type.multi) {\n        output[key] = type.default;\n      }\n    }\n\n    if (is_complex) {\n      if (is_array) {\n        const arr = [];\n        data[key].forEach(d => {\n          const conformed = conform_to_schema(d, type.type);\n          if (conformed) {\n            arr.push(conformed);\n          }\n        });\n        output[key] = arr;\n      } else {\n        const conformed = conform_to_schema(data[key], type.type);\n        if (conformed) {\n          output[key] = conformed;\n        } else if (!type.default) {\n          failed = true;\n        }\n      }\n    } else {\n      const valid = is_array\n        ? data[key].every(i => typeof i === type.type)\n        : typeof data[key] === type.type;\n      if (!valid) {\n        if (!(\"default\" in type)) {\n          failed = true;\n        }\n        output[key] = type.default;\n      } else {\n        output[key] = data[key];\n      }\n    }\n  });\n  return failed ? null : output;\n};\n","import {\n  deep_equals,\n  DEFAULT_HISTORY_STEPS_LIMIT,\n  get_stored_state,\n} from \"~/common\";\nimport { conform_to_schema, HISTORY_STORAGE_SCHEMA } from \"./schema\";\n\nconst LOCAL_STORAGE_HISTORY_KEY = \"tts-history\";\n\nexport class EditorHistoryManager {\n  constructor(limit: number, history?: TTS.EditorHistory[], index?: number) {\n    this.history = history ?? [];\n    this.index = index ?? -1;\n    this.initialized = false;\n    this.limit = limit;\n    this.loaded = !!history;\n  }\n\n  private history: TTS.EditorHistory[];\n  private index: number;\n  private initialized: boolean;\n  private loaded: boolean;\n  private limit: number;\n\n  private setHistory(new_history: TTS.EditorHistory[]) {\n    this.history = new_history;\n    this.storeHistory();\n  }\n  private setIndex(new_index: number) {\n    this.index = new_index;\n    this.storeHistory();\n  }\n  private storeHistory() {\n    localStorage.setItem(\n      LOCAL_STORAGE_HISTORY_KEY,\n      JSON.stringify({\n        data: this.history,\n        index: this.index,\n      })\n    );\n  }\n\n  private _on_change: (\n    new_state: TTS.EditorHistory,\n    use_cursor_before: boolean\n  ) => void = () => {};\n\n  public initialize(\n    initial: TTS.EditorHistory,\n    on_change: (\n      new_state: TTS.EditorHistory,\n      use_cursor_before: boolean\n    ) => void\n  ) {\n    if (this.initialized) {\n      console.warn(`Attempted to re-initialize EditorHistoryManager`);\n      return;\n    }\n    if (!this.loaded) {\n      this.reset(initial);\n    }\n    this._on_change = on_change;\n    this.initialized = true;\n  }\n\n  public getCurrentState() {\n    return this.history[this.index];\n  }\n\n  public reset(initial: TTS.EditorHistory) {\n    this.index = 0;\n    this.setHistory([{ ...initial, keep: true }]);\n  }\n\n  public push(\n    state: TTS.EditorHistory,\n    replace:\n      | boolean\n      | ((old_: TTS.EditorHistory, new_: TTS.EditorHistory) => boolean) = false\n  ) {\n    const { keep: _, ...new_state } = state;\n    const { keep, ...cur } = this.getCurrentState();\n    if (typeof replace === \"function\") {\n      replace = replace(cur, new_state);\n    }\n    if (deep_equals(cur, new_state)) {\n      return;\n    }\n\n    if (replace) {\n      const { keep: __, ...prev } = this.history[this.index - 1] ?? {};\n      if (keep || deep_equals(prev, new_state)) {\n        replace = false;\n      }\n    }\n    const drop = Math.max(\n      this.history.length - this.limit + (replace ? 0 : 1),\n      0\n    );\n    this.setHistory(\n      this.history\n        .slice(drop, this.index + (replace ? 0 : 1))\n        .concat({ ...state, keep: state.keep ?? false })\n    );\n    this.setIndex(this.history.length - 1);\n  }\n\n  public undo() {\n    const prev_state = this.getCurrentState();\n    if (this.index <= 0) {\n      console.warn(`Cannot undo, reached start of history.`);\n      return prev_state;\n    }\n    this.setIndex(this.index - 1);\n    const new_state = this.getCurrentState();\n    this._on_change(\n      { ...new_state, cursor_before: prev_state.cursor_before },\n      true\n    );\n    return new_state;\n  }\n\n  public redo() {\n    if (this.index >= this.history.length - 1) {\n      console.warn(`Cannot redo, reached end of history.`);\n      return this.getCurrentState();\n    }\n    this.setIndex(this.index + 1);\n    const new_state = this.getCurrentState();\n    this._on_change(new_state, false);\n    return new_state;\n  }\n\n  public keep() {\n    this.history[this.index].keep = true;\n    this.setHistory(this.history);\n  }\n}\n\nconst create_history_manager = () => {\n  const limit =\n    get_stored_state()?.settings?.history_steps ?? DEFAULT_HISTORY_STEPS_LIMIT;\n  const stored = JSON.parse(\n    localStorage.getItem(LOCAL_STORAGE_HISTORY_KEY) ?? \"null\"\n  );\n  const conformed = stored\n    ? conform_to_schema(stored, HISTORY_STORAGE_SCHEMA)\n    : null;\n  if (conformed && conformed.data.length === stored.data.length) {\n    return new EditorHistoryManager(limit, conformed.data, conformed.index);\n  }\n  return new EditorHistoryManager(limit);\n};\nexport const EditorHistory = create_history_manager();\n","export * from \"./context\";\nexport * from \"./history\";\nexport * from \"./initial-state\";\nexport * from \"./schema\";\nexport * from \"./types\";\n","import { UNCATEGORIZED_GROUP_NAME, union_arrays } from \"~/common\";\n\nexport const ensure_number = (value: any, def: number) => {\n  let num = value;\n  if (typeof value === \"string\") {\n    num = parseInt(value);\n  }\n  if (isNaN(num)) {\n    return def ?? 0;\n  }\n  return num;\n};\n\nexport const insert_text_at_selection = (\n  text: string,\n  snippet: string,\n  max_length: number,\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  const { selectionStart = text.length, selectionEnd = text.length } =\n    input_ref.current ?? {};\n\n  const chars_allowed =\n    max_length - (text.length - (selectionEnd - selectionStart));\n  if (chars_allowed < 1) {\n    input_ref.current?.focus();\n    return [text, text.length] as const;\n  }\n  if (chars_allowed < snippet.length) {\n    snippet = snippet.slice(0, chars_allowed);\n  }\n  const text_start = text?.slice(0, selectionStart) ?? \"\";\n  let text_end = text?.slice(selectionEnd) ?? \"\";\n  if (\n    snippet.startsWith(\" \") &&\n    (!text || text_start.endsWith(\" \") || selectionStart === 0)\n  ) {\n    snippet = snippet.slice(1);\n  }\n  if (snippet.endsWith(\" \") && text_end.startsWith(\" \")) {\n    text_end = text_end.slice(1);\n  }\n  return [\n    `${text_start}${snippet}${text_end}`.slice(0, max_length),\n    `${text_start}${snippet}`.length,\n  ] as const;\n};\n\nconst UPPERCASE =\n  /[A-ZÀ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉƊƋƎƏƐƑƓƔƖƗƘƜƝƟƠƢƤƦƧƩƬƮƯƱƲƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶǷǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃɄɅɆɈɊɌɎͰͲͶͿΆΈΉΊΌΎΏΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫϏϘϚϜϞϠϢϤϦϨϪϬϮϴ]/;\n// taken/modified from https://stackoverflow.com/a/17265031\nexport const match_case = (\n  text: string,\n  pattern: string,\n  discard?: string | RegExp\n) => {\n  let result = \"\";\n\n  for (let i = 0; i < text.length; i++) {\n    const c = text.charAt(i);\n    const p = pattern.charAt(i);\n    if (\n      discard &&\n      (typeof discard === \"string\"\n        ? discard === c || discard.includes(c)\n        : discard.test(c))\n    ) {\n      continue;\n    }\n\n    if (UPPERCASE.test(p)) {\n      result += c.toLocaleUpperCase();\n    } else {\n      result += c.toLocaleLowerCase();\n    }\n  }\n\n  return result;\n};\n\nexport const get_uncategorized_messages = (\n  messages: TTS.Message[],\n  categories: TTS.MessageCategory[],\n  uncategorized?: TTS.MessageCategory\n): TTS.MessageCategory => {\n  const uncat_msgs = messages\n    .filter(m => !categories.some(c => c.data.includes(m.id)))\n    .map(m => m.id);\n\n  let data = union_arrays(\n    uncategorized?.data.filter(\n      id =>\n        messages.some(m => m.id === id) &&\n        !categories.some(c => c.data.includes(id))\n    ) ?? [],\n    uncat_msgs\n  );\n\n  return {\n    ...(uncategorized ?? { name: UNCATEGORIZED_GROUP_NAME, open: false }),\n    data,\n  };\n};\n\nexport const snippet_to_string = (snippet: TTS.Snippet): string =>\n  `${snippet.options.space_before ? \" \" : \"\"}${snippet.options.prefix ?? \"\"}${\n    snippet.text\n  }${snippet.options.suffix ?? \"\"}${snippet.options.space_after ? \" \" : \"\"}`;\n","import { validate_import_data } from \"~/view/components\";\n\nexport const maybeClassName = (className?: string) =>\n  className ? ` ${className}` : \"\";\n\nexport const classNamesWithSuffix = (suffix: string, ...names: string[]) =>\n  names\n    .filter(n => !!n)\n    .map(n => `${n}${suffix}`)\n    .join(\" \");\n\nexport const silence_event: EventListener = e => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n// potentially focusable = would be focusable if the element\n// doesn't have [tabindex=\"-1\"]\n// https://stackoverflow.com/a/38865836\nexport const POTENTIAL_FOCUSABLE_SELECTORS = [\n  \"a[href]\",\n  \"area[href]\",\n  'input:not([disabled]):not([type=\"hidden\"])',\n  \"select:not([disabled])\",\n  \"textarea:not([disabled])\",\n  \"button:not([disabled])\",\n  \"iframe\",\n  \"object\",\n  \"embed\",\n  \"*[tabindex]:not([tabindex='-1'])\",\n  \"*[contenteditable]\",\n];\nexport const FOCUSABLE_SELECTORS = POTENTIAL_FOCUSABLE_SELECTORS.map(s => {\n  const extra = \":not([tabindex='-1'])\";\n  return s.endsWith(extra) ? s : `${s}:not([tabindex='-1'])`;\n});\n\n// get first focusable element in a container\nexport const getFirstFocusable = (\n  container: HTMLElement,\n  prefix?: string\n): HTMLElement => {\n  if (!prefix) {\n    return container.querySelector(FOCUSABLE_SELECTORS.join(\", \"));\n  }\n  return container.querySelector(\n    FOCUSABLE_SELECTORS.map(s => `${prefix} ${s}`).join(\", \")\n  );\n};\n\nexport const upload_file = input_file =>\n  new Promise<TTS.AnyExportData>((resolve, reject) => {\n    if (input_file.type !== \"application/json\") {\n      return reject(\"You must select a valid JSON file.\");\n    }\n    const reader = new FileReader();\n\n    reader.onload = ev => {\n      if (ev.target) {\n        try {\n          const new_data = JSON.parse(ev.target[\"result\"] as string);\n          const validated = validate_import_data(new_data);\n          if (validated) {\n            resolve(validated);\n          } else {\n            reject(\n              \"That file did not contain any data that could be imported.\"\n            );\n          }\n        } catch (err) {\n          console.error(`Failed to parse import file:`, err);\n          reject(\"You must select a valid JSON file.\");\n        }\n      }\n    };\n    reader.readAsText(input_file);\n  });\n","// filters/sorts the options based on the text typed in the input\nimport { capitalize, comparator } from \"~/common\";\n\n// https://stackoverflow.com/a/6969486\nexport const escape_regex_str = str =>\n  str\n    .replace(/[\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n    .replace(/(\\[.*)-(.*\\])/g, \"$1\\\\-$2\");\n\nexport const filter_options_with_score = <T>(\n  text: string,\n  options: readonly T[],\n  test_option: (opt: T, regex: RegExp) => boolean\n): ScoredMatch<T>[] => {\n  if (!text) {\n    return options.map(opt => ({ opt, score: 0 }));\n  }\n  //escape the text so it doesn't break the tester\n  const esc_text = escape_regex_str(text);\n\n  const rA = new RegExp(esc_text, \"i\");\n  // regexes to determine how closely the text matches each option\n  // 0. Matches the text exactly\n  const r0 = new RegExp(`^${esc_text}$`, \"i\");\n  // 1. Matches the very beginning of the option\n  const r1 = new RegExp(`^${esc_text}`, \"i\");\n  // 2. Text is preceded by a word boundary\n  const r2 = new RegExp(`\\b${esc_text}`, \"i\");\n  // 3. Text is preceeded by any lowercase letter or number,\n  // and first char of text is capitalized\n  const r3 = new RegExp(`[a-z0-9]${escape_regex_str(capitalize(text))}`);\n  // 4. Text is preceeded by any non-alphanumeric char\n  const r4 = new RegExp(`[^\\w]${esc_text}`, \"i\");\n\n  const matches = options\n    // filter out options that don't match at all\n    .filter(opt => test_option(opt, rA))\n\n    // get the score for each option\n    .map((opt: T) => {\n      if (test_option(opt, r0)) {\n        return { score: 5, opt };\n      }\n      if (test_option(opt, r1)) {\n        return { score: 4, opt };\n      }\n      if (test_option(opt, r2)) {\n        return { score: 3, opt };\n      }\n      if (test_option(opt, r3)) {\n        return { score: 2, opt };\n      }\n      if (test_option(opt, r4)) {\n        return { score: 1, opt };\n      }\n      return { score: 0, opt };\n    });\n\n  // sort by score (descending) and return the result\n  return matches.sort(comparator(\"score\", \"desc\"));\n};\n\nexport const filter_options = <T>(\n  text: string,\n  options: readonly T[],\n  test_option: RegexFilterFunction<T>\n): T[] =>\n  filter_options_with_score(text, options, test_option).map(({ opt }) => opt);\n\nexport const filter_options_by_props = <T extends object>(\n  text: string,\n  options: T[],\n  keys: StringPropOf<T>[]\n): T[] => {\n  if (!text) {\n    return options;\n  }\n  const matches: { [K in StringPropOf<T>]?: ScoredMatch<T>[] } = {};\n  keys.forEach(k => {\n    matches[k] = filter_options_with_score(text, options, (opt, regex) =>\n      // @ts-expect-error: even with the type dec, ts still doesn't think opt[k] is a string\n      regex.test(opt[k])\n    );\n  });\n\n  let results: ScoredMatch<T>[] = [];\n  keys.forEach(k => {\n    if (matches[k]) {\n      results = results.concat(matches[k]);\n    }\n  });\n  return results.sort(comparator(\"score\", \"desc\")).map(({ opt }) => opt);\n};\n","import * as hooks from \"preact/hooks\";\n\nconst useMounted = () => {\n  const mounted = hooks.useRef<boolean>(true);\n  hooks.useEffect(\n    () => () => {\n      mounted.current = false;\n    },\n    []\n  );\n  return mounted;\n};\n\n// useState, but prevents setState from being called after the component unmounts\nexport const useStateIfMounted = <T>(initial_value: T) => {\n  const mounted = useMounted();\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  const setter: hooks.StateUpdater<T> = hooks.useCallback(\n    new_value => {\n      if (mounted.current) {\n        setValue(new_value);\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter] as const;\n};\n\n// useState, but emulates the functionality of state/setState in a class component\nexport const useStateObject = <T extends object>(initial_value: T) => {\n  const mounted = useMounted();\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  const setter = hooks.useCallback(\n    (new_state: Partial<T> | ((prev_state: T) => T)) => {\n      if (!mounted.current) {\n        return;\n      }\n      if (typeof new_state === \"function\") {\n        setValue(new_state);\n      } else {\n        setValue(prev_state => ({\n          ...prev_state,\n          ...new_state,\n        }));\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter] as const;\n};\n\nexport const useStateRef = <\n  T extends string | number | boolean | object | null\n>(\n  initial_value: T\n) => {\n  const mounted = useMounted();\n  const value_ref = hooks.useRef<T>(initial_value);\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  const setter: hooks.StateUpdater<T> = hooks.useCallback(\n    new_value => {\n      if (mounted.current) {\n        value_ref.current =\n          typeof new_value === \"function\"\n            ? new_value(value_ref.current)\n            : new_value;\n        setValue(new_value);\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter, value_ref] as const;\n};\n\nexport const useStateWithRef = <\n  T extends string | number | boolean | object | null\n>(\n  initial_value: T,\n  value_ref: preact.RefObject<T>\n) => {\n  const mounted = useMounted();\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  hooks.useEffect(() => {\n    value_ref.current = initial_value;\n  }, []);\n  const setter: hooks.StateUpdater<T> = hooks.useCallback(\n    new_value => {\n      if (mounted.current) {\n        value_ref.current =\n          typeof new_value === \"function\"\n            ? new_value(value_ref.current)\n            : new_value;\n        setValue(new_value);\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter] as const;\n};\n\nexport const useValueRef = <T>(value: T) => {\n  const ref = hooks.useRef<T>(value);\n  ref.current = value;\n  return ref;\n};\n\nexport const useMemoRef = <T>(factory: () => T, inputs: any[]) => {\n  const value = hooks.useMemo(factory, inputs);\n  return useValueRef(value);\n};\n\nexport const useRequestStatus = <T extends any[], R>(\n  send_request: (...args: T) => Promise<R>\n) => {\n  const [state, set_state] = useStateIfMounted({\n    pending: false,\n    success: false,\n    error: null,\n  });\n  const make_request = hooks.useCallback(\n    (...args: T) => {\n      set_state({ pending: true, success: false, error: null });\n      return send_request(...args)\n        .then(res => {\n          set_state({ pending: false, success: true, error: null });\n          return res;\n        })\n        .catch(err => {\n          set_state({ pending: false, success: false, error: err });\n          return err;\n        });\n    },\n    [send_request]\n  );\n\n  return [state, make_request] as const;\n};\n\nexport const useContextState = <V, S>(\n  ctx: preact.Context<{ value: V; setValue: S }>\n) => {\n  const { value, setValue } = hooks.useContext(ctx);\n  return [value, setValue] as const;\n};\n\nexport const useCallbackAfterUpdate = <Args extends any[]>(\n  do_update: (...args: Args) => void,\n  callback: preact.RefObject<() => void>,\n  inputs: any[]\n) => {\n  const invoke_callback = hooks.useRef(false);\n  hooks.useEffect(() => {\n    if (invoke_callback.current && callback.current) {\n      callback.current?.();\n      invoke_callback.current = false;\n    }\n  }, inputs);\n  const call_do_update = hooks.useCallback(\n    (...args: Args) => {\n      invoke_callback.current = true;\n      do_update(...args);\n    },\n    [do_update]\n  );\n  const call_manual_callback = hooks.useCallback(() => {\n    invoke_callback.current = false;\n    callback.current?.();\n  }, []);\n\n  return [call_do_update, call_manual_callback];\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useMemo } from \"preact/hooks\";\nimport * as hooks from \"preact/hooks\";\nimport { import_multiple_files } from \"~/view/components\";\nimport {\n  upload_file,\n  useStateIfMounted,\n  useStateRef,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst window_listener_options = { once: true };\nexport const useHoldClick = (\n  on_click: (e?: any) => void,\n  on_end_click: (e?: any) => void,\n  repeat_delay: number = 150,\n  initial_delay: number = 750\n) => {\n  const [clicked, set_clicked, clicked_ref] = useStateRef<boolean>(false);\n  const on_click_ref = useValueRef(on_click);\n  const on_end_click_ref = useValueRef(on_end_click);\n  const delay = useValueRef(repeat_delay);\n  const timer = hooks.useRef<any>();\n\n  const repeat_click = hooks.useCallback(() => {\n    if (!clicked_ref.current) {\n      return;\n    }\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    on_click_ref.current?.();\n    timer.current = setTimeout(repeat_click, delay.current);\n  }, []);\n  const cancel = hooks.useCallback(() => {\n    set_clicked(false);\n    clearTimeout(timer.current);\n    timer.current = null;\n  }, []);\n\n  hooks.useEffect(() => {\n    if (!clicked) {\n      return;\n    }\n    timer.current = setTimeout(repeat_click, initial_delay);\n\n    window.addEventListener(\"mouseup\", cancel, window_listener_options);\n    window.addEventListener(\"blur\", cancel, window_listener_options);\n    return () => {\n      on_end_click_ref.current?.();\n      window.removeEventListener(\"mouseup\", cancel);\n      window.removeEventListener(\"blur\", cancel);\n    };\n  }, [clicked]);\n\n  const onMouseDown = hooks.useCallback(e => {\n    e.initialClick = true;\n    on_click_ref.current?.(e);\n    set_clicked(true);\n  }, []);\n\n  return hooks.useMemo(() => {\n    const l: any = { onMouseDown };\n    if (clicked) {\n      l.onMouseLeave = cancel;\n    }\n    return l;\n  }, [clicked]);\n};\n\nexport const useRenderPropsFunc = <T extends object>(\n  render: (props: Preact.RenderableProps<T>) => Preact.VNode | null,\n  inputs: any[],\n  name: string\n): Preact.ComponentType<T> => {\n  const comp = useCallback(render, inputs);\n  // @ts-expect-error:\n  comp.displayName = name;\n  return comp;\n};\n\nexport const useTempAnimation = (duration: number, delay?: number) => {\n  const timer = hooks.useRef<any>();\n  const [active, set_active, active_ref] = useStateRef<boolean>(false);\n  const reset = hooks.useCallback(() => {\n    set_active(false);\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = null;\n  }, []);\n  const trigger = hooks.useCallback(() => {\n    if (active_ref.current) {\n      reset();\n    }\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    if (delay) {\n      timer.current = setTimeout(() => {\n        set_active(true);\n        timer.current = setTimeout(reset, duration);\n      }, delay);\n    } else {\n      set_active(true);\n      timer.current = setTimeout(reset, duration);\n    }\n  }, [duration, delay]);\n\n  hooks.useEffect(() => {\n    if (active) {\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n        timer.current = null;\n      };\n    }\n  }, [active]);\n\n  return [active, trigger, set_active] as const;\n};\n\nexport const useCopyToClipboard = (text?: string, id?: string) => {\n  return hooks.useCallback(async () => {\n    const elem = document.getElementById(\n      `clipboard-input${id ? `-${id}` : \"\"}`\n    );\n    if (!text || !(elem instanceof HTMLTextAreaElement)) {\n      return Promise.reject();\n    }\n    const active = document.activeElement as HTMLElement;\n    elem.value = text;\n    elem.select();\n    elem.setSelectionRange(0, 99999);\n    elem.focus();\n    const success = document.execCommand(\"copy\");\n    elem.value = \"\";\n    elem.blur();\n    active?.focus();\n    return success ? Promise.resolve() : Promise.reject();\n  }, [text]);\n};\n\nexport const useDebounce = <T extends any[]>(\n  callback: (...args: T) => void,\n  delay: number = 150\n) => {\n  const timer = hooks.useRef<any>(null);\n  const cb = hooks.useCallback(\n    (...args: T) => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n      timer.current = setTimeout(() => {\n        callback(...args);\n        clearTimeout(timer.current);\n        timer.current = null;\n      }, delay);\n    },\n    [callback]\n  );\n\n  const cancel = hooks.useCallback(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = null;\n    }\n  }, []);\n\n  hooks.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n      timer.current = null;\n    };\n  }, [callback]);\n\n  return [cb, cancel] as const;\n};\n\nexport const useDragAndDrop = (on_drop: (files: FileList) => Promise<void>) => {\n  const [dragged, set_dragged] = useStateIfMounted(false);\n  const on_start = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    set_dragged(true);\n  }, []);\n  const on_finish = useCallback(() => set_dragged(false), []);\n  const on_drop_ = useCallback(\n    e => {\n      e.preventDefault();\n      e.stopPropagation();\n      set_dragged(false);\n      on_drop(e.dataTransfer.files);\n      e.dataTransfer.clearData();\n    },\n    [on_drop]\n  );\n\n  return [\n    dragged,\n    useMemo(\n      () => ({\n        onDragOver: on_start,\n        onDragEnter: on_start,\n        onDrop: on_drop_,\n        onDragLeave: on_finish,\n        onDragExit: on_finish,\n        onDragEnd: on_finish,\n      }),\n      [on_start, on_finish, on_drop_]\n    ),\n  ] as const;\n};\n\nexport const useUploadFiles = (\n  on_finish: (data: TTS.AnyExportData) => void,\n  on_error?: (err: string) => void,\n  form_ref?: Preact.RefObject<HTMLFormElement>\n) => {\n  return useCallback(\n    (files: FileList) =>\n      (() => {\n        if (files.length > 1) {\n          const loaded: Promise<TTS.AnyExportData>[] = [];\n          for (let i = 0; i < files.length; i++) {\n            loaded.push(upload_file(files.item(i)));\n          }\n          return Promise.all(loaded).then(data => {\n            return import_multiple_files(...data);\n          });\n        }\n        const input_file = files[0];\n        if (!input_file) {\n          return Promise.resolve();\n        }\n        return upload_file(input_file);\n      })()\n        .catch(err => {\n          if (typeof err === \"string\") {\n            on_error?.(err);\n          } else {\n            console.error(err);\n          }\n          return null;\n        })\n        .then(data => {\n          form_ref?.current?.reset();\n          if (data) {\n            return on_finish(data);\n          }\n        }),\n    [on_finish, on_error]\n  );\n};\n","import { useCallback } from \"preact/hooks\";\nimport * as hooks from \"preact/hooks\";\nimport {\n  deep_equals,\n  do_alert,\n  remove_item_from,\n  replace_item_in,\n} from \"~/common\";\nimport {\n  EDITOR_STATE,\n  EDITOR_UNSAVED,\n  LOADED_MESSAGE,\n  MESSAGE_CATEGORIES,\n  MESSAGES,\n} from \"~/model\";\nimport {\n  insert_text_at_selection,\n  useContextState,\n  useValueRef,\n} from \"~/view/utils\";\n\nexport const useInsertSnippet = (\n  text: string,\n  max_length: number,\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  const text_ref = useValueRef(text);\n  const length_ref = useValueRef(max_length);\n  const cursor_pos = hooks.useRef(-1);\n  const reset_pos = hooks.useRef(false);\n\n  const insert_snippet = hooks.useCallback(\n    (value: string, flag?: \"start\" | \"end\") => {\n      if (!flag && cursor_pos.current !== -1) {\n        input_ref.current.selectionStart = cursor_pos.current;\n        input_ref.current.selectionEnd = cursor_pos.current;\n      }\n      const [new_text, new_index] = insert_text_at_selection(\n        text_ref.current,\n        value,\n        length_ref.current,\n        input_ref\n      );\n      cursor_pos.current = new_index;\n\n      if (flag === \"end\") {\n        if (new_text === text_ref.current) {\n          cursor_pos.current = -1;\n        } else {\n          reset_pos.current = true;\n        }\n      }\n      if (new_text === text_ref.current) {\n        input_ref.current?.focus();\n      }\n      return new_text;\n    },\n    []\n  );\n\n  hooks.useEffect(() => {\n    if (cursor_pos.current !== -1) {\n      input_ref.current?.focus();\n      input_ref.current.selectionStart = cursor_pos.current;\n      input_ref.current.selectionEnd = cursor_pos.current;\n      cursor_pos.current = -1;\n    }\n    if (reset_pos.current) {\n      cursor_pos.current = -1;\n      reset_pos.current = false;\n    }\n  }, [text]);\n\n  return insert_snippet;\n};\n\nexport const useLoadedMessage = (messages: TTS.Message[]) => {\n  const [loaded_id, set_loaded_id] = useContextState(LOADED_MESSAGE);\n  const loaded = hooks.useMemo(\n    () => messages.find(m => m.id === loaded_id) ?? null,\n    [messages, loaded_id]\n  );\n  return [loaded as TTS.Message | null, loaded_id, set_loaded_id] as const;\n};\n\nexport const useSaveMessageInCategory = () => {\n  const [categories, set_categories] = useContextState(MESSAGE_CATEGORIES);\n  const categories_ref = useValueRef(categories);\n  const update_in_category = useCallback((name: string, message_id: string) => {\n    const cat = categories_ref.current.find(c => c.name === name) ?? {\n      name,\n      open: true,\n      data: [],\n    };\n    if (cat.data.includes(message_id)) {\n      return;\n    }\n    const cats = categories_ref.current.map(c => ({\n      ...c,\n      data:\n        c.name === name\n          ? c.data\n          : remove_item_from(c.data, id => id === message_id),\n    }));\n    set_categories(\n      replace_item_in(\n        cats,\n        c => c.name === name,\n        {\n          ...cat,\n          data: replace_item_in(\n            cat.data,\n            id => id === message_id,\n            message_id,\n            \"end\"\n          ),\n        },\n        \"end\"\n      )\n    );\n  }, []);\n\n  const remove_from_category = useCallback((message_id: string) => {\n    set_categories(\n      categories_ref.current.map(c => ({\n        ...c,\n        data: remove_item_from(c.data, id => id === message_id),\n      }))\n    );\n  }, []);\n\n  return useCallback(\n    (id: string | null, value: TTS.Message | undefined, category?: string) => {\n      if ((value && !value.id) || (id && value && value.id !== id)) {\n        return;\n      }\n      if (!value) {\n        remove_from_category(id);\n      } else if (category) {\n        update_in_category(category, value.id);\n      }\n    },\n    []\n  );\n};\n\nexport const useSaveMessage = () => {\n  const [messages, set_messages] = useContextState(MESSAGES);\n\n  const update_in_categories = useSaveMessageInCategory();\n  const [loaded_message, loaded_id, set_loaded_id] = useLoadedMessage(messages);\n  const {\n    value: { text, speed, speed_char, max_length, bits, voice },\n  } = hooks.useContext(EDITOR_STATE);\n  const [is_unsaved, set_unsaved] = useContextState(EDITOR_UNSAVED);\n\n  const new_is_unsaved = hooks.useMemo(() => {\n    return !loaded_message\n      ? !!text\n      : loaded_message.text !== text ||\n          loaded_message.options?.speed !== speed ||\n          loaded_message.options?.speed_char !== speed_char ||\n          loaded_message.options?.bits !== bits ||\n          loaded_message.options?.voice !== voice ||\n          loaded_message.options?.max_length !== max_length;\n  }, [loaded_message, text, speed, max_length, bits, speed_char, voice]);\n\n  hooks.useEffect(() => {\n    set_unsaved(new_is_unsaved);\n  }, [new_is_unsaved]);\n\n  const load_when_unsaved_reset = hooks.useRef<string | null>(null);\n  const messages_ref = useValueRef(messages);\n  const loaded_ref = useValueRef(loaded_id);\n  const update_messages = hooks.useCallback(\n    (\n      id: string | null,\n      value: TTS.Message | undefined,\n      category?: string\n    ): boolean => {\n      if (value && !value.id) {\n        do_alert(\"couldn't save due to missing id\");\n        console.error(\"couldn't save due to missing id\");\n        return false;\n      }\n      if (id && value && value.id !== id) {\n        do_alert(\"couldn't save due to mismatched ids\");\n        console.error(\"couldn't save due to mismatched ids\");\n        return false;\n      }\n      const msgs = messages_ref.current ?? [];\n      const same_name = msgs.find(m => m.name === value?.name);\n      if (same_name && same_name.id !== id) {\n        do_alert(\"A message with this name already exists.\");\n        return false;\n      }\n      const this_index = msgs.findIndex(m => m.id === id);\n\n      const data = msgs?.slice();\n      const prev_msg = data.find(m => m.id === loaded_ref.current);\n      data[this_index === -1 ? messages_ref.current.length : this_index] =\n        value;\n      const new_messages = data.filter(r => !!r);\n      set_messages(new_messages);\n      update_in_categories(id, value, category);\n      if (id === loaded_ref.current) {\n        if (!value) {\n          load_when_unsaved_reset.current = null;\n        } else if (!id) {\n          load_when_unsaved_reset.current = value.id;\n        } else if (\n          // if renaming current message, could be unsaved changes in editor, so passive update\n          deep_equals(value, { ...(prev_msg ?? {}), name: value.name })\n        ) {\n          set_loaded_id(id, true, true);\n          return true;\n        }\n        set_unsaved(!value);\n        // create a new message\n      } else if (!id) {\n        load_when_unsaved_reset.current = value.id;\n        set_unsaved(!value);\n      }\n\n      return true;\n    },\n    []\n  );\n\n  hooks.useEffect(() => {\n    const new_index = load_when_unsaved_reset.current;\n    if (new_index != null && !is_unsaved) {\n      set_loaded_id(new_index, false, true);\n      load_when_unsaved_reset.current = null;\n    }\n  }, [is_unsaved]);\n\n  hooks.useEffect(() => {\n    if (\n      typeof loaded_id === \"string\" &&\n      loaded_id.length > 0 &&\n      messages.findIndex(m => m.id === loaded_id) < 0\n    ) {\n      set_loaded_id(null, true, true);\n    }\n  }, [loaded_id, messages]);\n\n  return [loaded_message, update_messages] as const;\n};\n\nexport const useSaveSnippetInSection = (\n  sections_ref: preact.RefObject<TTS.SnippetsSection[]>,\n  set_sections: (value: TTS.SnippetsSection[]) => void\n) => {\n  const update_in_section = useCallback(\n    (section_name: string, snippet_id: string): boolean => {\n      const section = sections_ref.current.find(s => s.name === section_name);\n      if (section.data.includes(snippet_id)) {\n        return;\n      }\n      const sects = sections_ref.current.map(s => ({\n        ...s,\n        data:\n          s.name === section_name\n            ? s.data\n            : remove_item_from(s.data, id => id === snippet_id),\n      }));\n      set_sections(\n        replace_item_in(\n          sects,\n          s => s.name === section_name,\n          {\n            ...section,\n            data: replace_item_in(\n              section.data,\n              id => id === snippet_id,\n              snippet_id,\n              \"end\"\n            ),\n          },\n          \"end\"\n        )\n      );\n    },\n    []\n  );\n\n  const remove_from_section = useCallback((snippet_id: string) => {\n    set_sections(\n      sections_ref.current.map(c => ({\n        ...c,\n        data: remove_item_from(c.data, id => id === snippet_id),\n      }))\n    );\n  }, []);\n\n  return useCallback(\n    (id: string | null, value: TTS.Snippet | undefined, section: string) => {\n      if ((value && !value.id) || (id && value && value.id !== id)) {\n        return;\n      }\n      if (!value) {\n        remove_from_section(id);\n      } else if (section) {\n        update_in_section(section, value.id);\n      }\n    },\n    []\n  );\n};\n","import * as Preact from \"preact\";\n\nconst INTRO_STEPS = {\n  \"intro-start\": \"intro-editor\",\n  \"intro-editor\": \"intro-messages\",\n  \"intro-messages\": \"intro-snippets\",\n  \"intro-snippets\": \"intro-help\",\n  \"intro-help\": null,\n} as const;\n\nexport const IntroFooter: Preact.FunctionComponent<{\n  item: TTS.HelpKey;\n  setItem: (key: TTS.HelpKey | null) => void;\n  back: () => void;\n}> = ({ item, setItem, back }) => {\n  return (\n    <div className=\"modal-footer\">\n      {item === \"intro-start\" ? (\n        <button\n          className=\"btn btn-large btn-negative\"\n          onClick={() => setItem(\"intro-help\")}\n        >\n          Skip\n        </button>\n      ) : (\n        <button className=\"btn btn-large\" onClick={back}>\n          Back\n        </button>\n      )}\n      <button\n        className=\"btn btn-large btn-primary\"\n        onClick={() => setItem(INTRO_STEPS[item])}\n      >\n        {item === \"intro-start\"\n          ? \"Start\"\n          : item === \"intro-help\"\n          ? \"Get Started\"\n          : \"Next\"}\n      </button>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { DEFAULT_STATE } from \"~/common\";\nimport { OptimizeLevel, OptimizeTrigger } from \"~/model\";\nimport { optimize_message } from \"~/view/utils\";\n\nconst optimize_sample =\n  \"You had seven and a half bags of   cheetos before tonight, don't you think you ate them too fast? \";\n\nexport const OptimizeSampleDemo: Preact.FunctionComponent = () => {\n  const [optimize_sample_after] = optimize_message(\n    optimize_sample,\n    { current: null },\n    OptimizeTrigger.manual,\n    { ...DEFAULT_STATE.settings, optimize_level: OptimizeLevel.max }\n  );\n\n  return (\n    <div className=\"help-demo help-demo-optimize-sample\">\n      For example, the message\n      <div className=\"help-demo-optimize-sample-text tts-text\">\n        \"{optimize_sample}\" ({optimize_sample.length} chars)\n      </div>\n      would be transformed into the following after optimization:\n      <div className=\"help-demo-optimize-sample-text tts-text\">\n        \"{optimize_sample_after}\" ({optimize_sample_after.length} chars)\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useMemo } from \"preact/hooks\";\nimport { DEFAULT_SPEED_CHAR } from \"~/common\";\nimport { AudioPlayer, generate_pause } from \"~/view/components\";\nimport { useAudioPlayer } from \"~/view/utils\";\n\nconst create_text = str =>\n  `this is before the pause ${str} this is after the pause ${DEFAULT_SPEED_CHAR.repeat(\n    20\n  )}`;\n\nexport const PauseSpeedDemo: Preact.FunctionComponent = () => {\n  const [tts_data, preview_tts] = useAudioPlayer(\"pause-demo-modal-player\");\n\n  const [text_normal, text_preserved] = useMemo(\n    () => [\n      create_text(generate_pause(1.3, \"Brian\", false)),\n      create_text(generate_pause(1.3, \"Brian\", true)),\n    ],\n    []\n  );\n\n  return (\n    <div className=\"help-demo help-demo-pause\">\n      <h4 className=\"help-demo-prompt\">Try it out:</h4>\n      <div className=\"help-demo-pause-top\">\n        <div className=\"help-demo-pause-item\">\n          <div className=\"help-demo-pause-item-text tts-text\">\n            {text_normal}\n          </div>\n          <button\n            className=\"help-demo-pause-item-button icon-button\"\n            onClick={() => preview_tts(text_normal)}\n          >\n            <i className=\"fas fa-volume-up\" />\n          </button>\n        </div>\n        <div className=\"help-demo-pause-item\">\n          <div className=\"help-demo-pause-item-text tts-text\">\n            {text_preserved}\n          </div>\n          <button\n            className=\"help-demo-pause-item-button icon-button\"\n            onClick={() => preview_tts(text_preserved)}\n          >\n            <i className=\"fas fa-volume-up\" />\n          </button>\n        </div>\n      </div>\n      <div className=\"help-demo-pause-player\">\n        <AudioPlayer data={tts_data} id=\"pause-demo-modal-player\" />\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useMemo } from \"preact/hooks\";\nimport { REPOSITORY_URL } from \"~/common\";\nimport { HELP_ITEM } from \"~/model\";\n\nconst MISSING_HELP_ISSUE_TITLE = (key: string) =>\n  `Missing Help Data for \"${key}\"`;\nconst MISSING_HELP_ISSUE_BODY = (elem: string) =>\n  `Found on element \"${elem || \"unknown\"}\"`;\n\nexport const ReportMissingHelpLink: Preact.FunctionComponent = () => {\n  const help_item = useContext(HELP_ITEM).value;\n  const url = useMemo(() => {\n    const source_elem =\n      document.querySelector(`[data-help=\"${help_item}\"]`) ||\n      document.querySelector(`[data-tutorial=\"${help_item}\"]`);\n\n    let selector = \"\";\n    let el = source_elem;\n    while (el instanceof HTMLElement) {\n      let classes = \"\";\n      el.classList.forEach(c => {\n        classes += `.${c}`;\n      });\n      const this_selector = `${el.nodeName.toLowerCase()}${\n        el.id ? `#${el.id}` : \"\"\n      }${classes}`;\n      selector = selector ? `${this_selector} ${selector}` : this_selector;\n      el = el.parentElement;\n    }\n\n    const query: any = {\n      title: MISSING_HELP_ISSUE_TITLE(help_item),\n      body: MISSING_HELP_ISSUE_BODY(selector),\n      labels: \"bug\",\n    };\n\n    return `${REPOSITORY_URL}/issues/new?${Object.entries(query)\n      .map(([key, value]) => `${key}=${encodeURIComponent(value as any)}`)\n      .join(\"&\")}`;\n  }, [help_item]);\n\n  if (!help_item) {\n    return null;\n  }\n  return (\n    <a href={url} target=\"_blank\">\n      Report this issue\n    </a>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\nimport { SnippetsRow } from \"~/view/components\";\nimport { useInsertSnippet, useStateIfMounted } from \"~/view/utils\";\n\nconst snippet: TTS.Snippet = {\n  id: \"test\",\n  text: \"TEXT\",\n  options: {\n    prefix: \"pre\",\n    suffix: \"post\",\n    space_before: true,\n    space_after: true,\n    default_count: 1,\n  },\n};\nconst noop = () => {};\nconst noop_async = () => new Promise<void>(() => {});\nexport const SnippetAddDemo: Preact.FunctionComponent = ({}) => {\n  const input_ref = useRef<HTMLTextAreaElement>();\n  const [text, set_text] = useStateIfMounted(\n    \"This is a sample message. Blablabla.\"\n  );\n  const insert_snippet = useInsertSnippet(text, 400, input_ref);\n  const add_to_message = useCallback(\n    (str: string, flag?: \"start\" | \"end\") => {\n      const new_text = insert_snippet(str, flag);\n      set_text(new_text);\n      return new_text;\n    },\n    [insert_snippet]\n  );\n\n  useEffect(() => {\n    if (!input_ref.current) {\n      return;\n    }\n    input_ref.current?.focus();\n    input_ref.current.selectionStart = 25;\n    input_ref.current.selectionEnd = 25;\n  }, []);\n\n  return (\n    <div className=\"help-demo help-demo-snippet-add\">\n      <h4 className=\"help-demo-prompt\">Try it out:</h4>\n      <div className=\"help-demo-snippet-add-content\">\n        <textarea\n          ref={input_ref}\n          className=\"tts-textarea-input tts-text\"\n          value={text}\n          rows={4}\n          cols={40}\n          onInput={e => {\n            set_text((e.target as HTMLTextAreaElement).value);\n          }}\n        />\n        <SnippetsRow\n          row={snippet}\n          updateRow={noop}\n          onClickDelete={noop}\n          onClickEdit={noop}\n          previewText={noop_async}\n          addToMessage={add_to_message}\n        />\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\n\nexport const SnippetEffectDemo: Preact.FunctionComponent = () => {\n  return (\n    <div className=\"help-demo help-demo-snippet-effects\">\n      <div className=\"row tts-snippets-modal-text\">\n        <label className=\"tts-snippets-modal-prefix\">\n          <span>Prefix</span>\n          <input value=\"y\" readonly={true} className=\"tts-text\" />\n        </label>\n        <label className=\"tts-snippets-modal-input\">\n          <span>Main Text</span>\n          <input value=\"PX\" readonly={true} className=\"tts-text\" />\n        </label>\n        <label className=\"tts-snippets-modal-suffix\">\n          <span>Suffix</span>\n          <input value=\"\" readOnly={true} className=\"tts-text\" />\n        </label>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\n\nconst data: TTS.Snippet = {\n  id: \"sample\",\n  text: \"Main\",\n  options: {\n    space_after: true,\n    space_before: true,\n    prefix: \"pre\",\n    suffix: \"?^\",\n    default_count: 1,\n  },\n};\n\nexport const SnippetTextDemo: Preact.FunctionComponent = () => {\n  return (\n    <div className=\"help-demo help-demo-snippet-text\">\n      <div className=\"snippet\">\n        <div\n          className=\"snippet-space-before\"\n          data-show={`${data.options.space_before}`}\n        >\n          <div className=\"help-demo-snippet-text-label\">Space Before</div>\n        </div>\n        {data.options.prefix && (\n          <div className=\"snippet-prefix\">\n            <span className=\"tts-text\">{data.options.prefix}</span>\n            <div className=\"help-demo-snippet-text-label\">Prefix</div>\n          </div>\n        )}\n        <div className=\"snippet-text\">\n          <span className=\"tts-text\">{data.text}</span>\n          <div className=\"help-demo-snippet-text-label\">Main Text</div>\n        </div>\n        {data.options.suffix && (\n          <div className=\"snippet-suffix\">\n            <span className=\"tts-text\">{data.options.suffix}</span>\n            <div className=\"help-demo-snippet-text-label\">Suffix</div>\n          </div>\n        )}\n        <div\n          className=\"snippet-space-after\"\n          data-show={`${data.options.space_after}`}\n        >\n          <div className=\"help-demo-snippet-text-label\">Space After</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export * from \"./IntroFooter\";\nexport * from \"./OptimizeSample\";\nexport * from \"./PauseSpeed\";\nexport * from \"./ReportMissingHelpLink\";\nexport * from \"./SnippetAdd\";\nexport * from \"./SnippetEffect\";\nexport * from \"./SnippetText\";\n","import * as Preact from \"preact\";\nimport {\n  PAUSE_CHAR_SPEED_MODIFIED,\n  REPOSITORY_URL,\n  DEFAULT_SPEED_CHAR,\n  SPEED_CHARS,\n} from \"~/common\";\nimport {\n  ReportMissingHelpLink,\n  PauseSpeedDemo,\n  OptimizeSampleDemo,\n  SnippetAddDemo,\n  SnippetTextDemo,\n  SnippetEffectDemo,\n} from \"./demos\";\n\n/* for easy copy/paste\n  {\n    key: \"\",\n    name: \"\",\n    content: \"\",\n  },\n */\n\nconst help_data_type = <T extends { [key: string]: TTS.HelpItem }>(\n  input: T\n): T => input;\n\nconst HELP_COMMON = {\n  optimize:\n    \"Message optimization will remove unneeded characters, without altering the speech, to maximize the amount of text you can fit within the character limit.\",\n  speed:\n    \"The Speed Modifier causes the speech to become higher-pitched and faster, as if the speaker is excited or panicking.\",\n  speed_enable: `Enabling \"Speed Modifier\" will fill the rest of the message up to the character limit with the speed modifier character.`,\n  speed_brian:\n    \"Brian is the only voice that consistently works well with the speed modifier. Most other voices will have little to no change in pitch or speed.\",\n  speed_amy:\n    \"When using Amy, speed modifiers have the opposite of their normal effects.\",\n};\n\nexport const HELP_DATA = help_data_type({\n  /* ======================================\n   * ============== EDITOR ================\n     ====================================== */\n  \"reset-editor\": {\n    key: \"reset-editor\",\n    name: \"Reset Editor Button\",\n    content:\n      \"Clicking the Reset button will clear the text in the editor and start a new message. Changes to the current message will not be saved.\",\n  },\n\n  \"pause-add\": {\n    key: \"pause-add\",\n    name: \"Add Pause\",\n    content: () => (\n      <Preact.Fragment>\n        Add text to the message that will make the speaker pause for the\n        specified amount of time.\n        <br />\n        Right-Click the Add Pause button to quickly add a pause using the\n        duration that was previously set.\n      </Preact.Fragment>\n    ),\n  },\n\n  \"pause-speed\": {\n    key: \"pause-speed\",\n    name: \"Pause: Preserve Speed Modifier\",\n    content: ({ goToHelp }) => (\n      <Preact.Fragment>\n        <p>\n          The normal way to add a pause is using <code>/</code>, separated by\n          spaces. However, this behaves like punctuation, which removes the\n          effect of the speed modifier on any text before it. The{\" \"}\n          <code>{PAUSE_CHAR_SPEED_MODIFIED}</code> character has a similar\n          effect, but preserves the effect of the speed modifier.\n        </p>\n        <h4>\n          Why not use <code>{PAUSE_CHAR_SPEED_MODIFIED}</code> all the time?\n        </h4>\n        <p>\n          The <code>{PAUSE_CHAR_SPEED_MODIFIED}</code> character, while quiet,\n          is not completely silent like slashes are. It can also affect the\n          pronunciation of words before and after it. For example,{\" \"}\n          <code>{PAUSE_CHAR_SPEED_MODIFIED.repeat(4)} ow</code> will sound more\n          like \"pow\" than \"ow\", even with the space in between.\n          <br />\n        </p>\n        <p>\n          <button className=\"link\" onClick={() => goToHelp(\"speed-overview\")}>\n            Learn more about the Speed Modifier and Punctuation.\n          </button>\n        </p>\n        <PauseSpeedDemo />\n      </Preact.Fragment>\n    ),\n  },\n\n  \"editor-voice\": {\n    key: \"tts-voice\",\n    name: \"Text-to-Speech Voice\",\n    tutorial: true,\n    content: () => (\n      <Preact.Fragment>\n        <p>Choose the TTS voice to use for the current message.</p>\n        <h3>Important Tips</h3>\n        <ul>\n          <li>{HELP_COMMON.speed_brian}</li>\n        </ul>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"use-bits\": {\n    key: \"use-bits\",\n    name: \"Bits String\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Enable this if you plan to send your message using Bits in Twitch\n          chat. This will count the Bits text towards the character limit, but\n          won't be part of the message speech. This will ensure that the message\n          sounds exactly the same when you send it as it does in testing.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"submit-button\": {\n    key: \"submit-button\",\n    name: \"Submit Button\",\n    content: () => (\n      <Preact.Fragment>\n        <p>Click to listen to your message.</p>\n        <p>\n          If you want to automatically skip ahead to a certain part of the\n          message, place the text cursor in the editor at the point you want to\n          skip to, and hold the Shift key while clicking Submit.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  /* ======================================\n   * ============= SNIPPETS ===============\n     ====================================== */\n\n  \"snippets-overview\": {\n    key: \"snippets-overview\",\n    name: \"Snippets\",\n    content: props => (\n      <Preact.Fragment>\n        <p>\n          Snippets are bits of text that can be easily inserted into your\n          message. Expand each section below to learn more.\n        </p>\n        <details>\n          <summary>The Parts of a Snippet</summary>\n          {HELP_DATA[\"snippet-text\"].content(props)}\n        </details>\n        <details>\n          <summary>Snippet Groups</summary>\n          {HELP_DATA[\"snippets-group\"].content()}\n        </details>\n        <details>\n          <summary>Inserting Snippets</summary>\n          {HELP_DATA[\"snippet-insert\"].content()}\n        </details>\n        <details>\n          <summary>Snippet Actions</summary>\n          {HELP_DATA[\"snippet-actions\"].content()}\n        </details>\n        <details>\n          <summary>Example: Creating Sound Effects</summary>\n          {HELP_DATA[\"snippet-effects\"].content()}\n        </details>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"snippets-group\": {\n    key: \"snippets-group\",\n    name: \"Snippet Group\",\n    content: () => (\n      <p>\n        Snippet Groups help keep your snippets organized. Click on the group to\n        expand/hide the snippets inside. Click the Edit button (\n        <i className=\"fas fa-edit\" />) to rename or delete the group.\n      </p>\n    ),\n  },\n\n  \"snippet-text\": {\n    key: \"snippet-text\",\n    name: \"Snippet Text\",\n    content: ({ goToHelp }) => (\n      <Preact.Fragment>\n        <p>\n          A snippet is made up of three parts: the prefix, the main text, and\n          the suffix.\n        </p>\n        <p>\n          The <b>prefix</b> is inserted at the beginning of the snippet, and is\n          not repeated. This allows you to start the snippet with a certain\n          character or string before the repeated main text. This is most\n          commonly used for{\" \"}\n          <button className=\"link\" onClick={() => goToHelp(\"snippet-effects\")}>\n            Creating Sound Effects\n          </button>\n          .\n        </p>\n        <p>\n          The <b>main text</b> is inserted in the middle of the snippet, and can\n          be repeated however many times you want. See the{\" \"}\n          <button className=\"link\" onClick={() => goToHelp(\"snippet-insert\")}>\n            Insert Snippet help section\n          </button>{\" \"}\n          to learn how to use this.\n        </p>\n        <p>\n          The <b>suffix</b> is inserted at the end of the snippet, and, like the\n          prefix, it is not repeated. This is particularly useful for\n          punctuation.\n        </p>\n        <p>\n          <b>Other options</b>\n        </p>\n        <ul>\n          <li>\n            <b>Space Before/After</b>: When these are enabled, the editor will\n            ensure that there is always a space before and/or after the snippet\n            when you insert it. Some snippets won't be spoken correctly when\n            they aren't separated from other words. Others will work fine.\n          </li>\n          <li>\n            <b>Default Repeat Count</b>: This sets the default number of times\n            the main text is repeated when you insert the snippet once. For\n            example, if the snippet below had a default repeat count of 3,\n            inserting it once would add the text <code>preMainMainMain?^</code>{\" \"}\n            to the message.\n          </li>\n        </ul>\n        <p>\n          Note that all parts of the snippet <b>except the Main Text</b> are\n          optional.\n        </p>\n        <SnippetTextDemo />\n      </Preact.Fragment>\n    ),\n  },\n\n  \"snippet-insert\": {\n    key: \"snippet-insert\",\n    name: \"Insert Snippet\",\n    tutorial: true,\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Left-Click this button to insert the entire snippet into the editor.\n          When you Left-Click and hold, the main text will be repeatedly\n          inserted into the editor until you release the button.\n        </p>\n        <p>\n          Right-Click this button to insert only the main text, without the\n          prefix, suffix, or spaces. Right-Click and hold to repeatedly insert\n          only the main text.\n        </p>\n        <p>\n          Select text in the editor and then insert the snippet to overwrite the\n          selected text.\n        </p>\n        <SnippetAddDemo />\n      </Preact.Fragment>\n    ),\n  },\n\n  \"snippet-actions\": {\n    key: \"snippet-actions\",\n    name: \"Snippet Actions\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Clicking the Gear icon (<i className=\"fas fa-cog\" />) next to a\n          snippet will reveal a list of actions.\n        </p>\n        <dl>\n          <dt>\n            <i className=\"fas fa-volume-up\" /> Listen:\n          </dt>\n          <dd>Play an audio preview of the snippet.</dd>\n          <dt>\n            <i className=\"fas fa-clipboard\" /> Copy to Clipboard:\n          </dt>\n          <dd>\n            Copy the snippet to the clipboard. (Hint: Right-Click to copy only\n            the main text.)\n          </dd>\n          <dt>\n            <i className=\"fas fa-edit\" /> Edit:\n          </dt>\n          <dd>Edit the snippet text and options.</dd>\n          <dt>\n            <i className=\"fas fa-trash\" /> Delete:\n          </dt>\n          <dd>Delete the snippet.</dd>\n        </dl>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"snippet-effects\": {\n    key: \"snippet-effects\",\n    name: \"Snippet Example: Creating Sound Effects\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Most TTS voices will make sound effects when you repeat a sequence of\n          characters. For example, <code>yPXPXPXPXPX</code>\n          will sound like a sprinkler or spray bottle. However, repeating the\n          characters <code>PX</code> alone will simply be pronounced as \"pee\n          ecks\". Starting the sequence with a vowel will cause the speech engine\n          to pronounce it as a word rather than letters.\n        </p>\n        <p>\n          So if we want to create a snippet for this sound, it would look\n          something like this.\n        </p>\n        <SnippetEffectDemo />\n      </Preact.Fragment>\n    ),\n  },\n\n  \"snippet-export\": {\n    key: \"snippet-export\",\n    name: \"Export Snippet\",\n    content: \"Export a snippet to backup or share it with others.\",\n  },\n\n  /* ======================================\n   * ============= MESSAGES ===============\n     ====================================== */\n\n  \"messages-overview\": {\n    key: \"messages-overview\",\n    name: \"Messages\",\n    content: () => (\n      <Preact.Fragment>\n        <h4>View and load your saved Messages.</h4>\n        <p>Key Features:</p>\n        <ul>\n          <li>Copy Message text straight to the clipboard</li>\n          <li>Load saved Messages into the editor.</li>\n          <li>Rename or delete saved Messages.</li>\n        </ul>\n        <p>\n          Note: If you load a Message into the editor and modify it, you will\n          have the option to either save changes to the existing Message or save\n          it as a new Message.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"messages-group\": {\n    key: \"messages-group\",\n    name: \"Message Group\",\n    content: () => (\n      <p>\n        Message Groups help keep your messages organized. Click on the group to\n        expand/hide the messages inside. Click the Edit button (\n        <i className=\"fas fa-edit\" />) to rename or delete the group.\n      </p>\n    ),\n  },\n\n  \"messages-export\": {\n    key: \"messages-export\",\n    name: \"Export Message\",\n    content: \"Export a message to backup or share it with others.\",\n  },\n\n  /* ======================================\n   * =========== OPTIMIZATION =============\n     ====================================== */\n\n  \"optimize-full\": {\n    key: \"optimize-full\",\n    name: \"Message Optimization\",\n    content: ({ goToHelp }) => (\n      <Preact.Fragment>\n        <p>\n          {HELP_COMMON.optimize} This becomes helpful when you have a long\n          message, or you want to get the most out of the{\" \"}\n          <button className=\"link\" onClick={() => goToHelp(\"speed-overview\")}>\n            Speed Modifier\n          </button>\n          .\n        </p>\n        <OptimizeSampleDemo />\n        <hr />\n        <h3>Message Optimization Settings</h3>\n        {HELP_DATA[\"optimize-settings\"].content()}\n      </Preact.Fragment>\n    ),\n  },\n\n  \"optimize-settings\": {\n    key: \"optimize-settings\",\n    name: \"Message Optimization: Settings\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          The following options are available for configuring message\n          optimization:\n        </p>\n        <dl>\n          <dt>\n            <b>Automatically Trim Spaces</b>\n          </dt>\n          <dd>\n            When this is enabled, any unnecessary spaces in the message text\n            will be removed. This includes spaces at the beginning and end of\n            the message, as well as multiple consecutive spaces.\n          </dd>\n          <dt>\n            <b>Optimize Words (Trigger)</b>\n          </dt>\n          <dd>\n            This setting determines when the message will be optimized.\n            <ol>\n              <li>\n                <b>Manually</b>: Only optimize when you click the \"Optimize\n                Message\" button above the editor.\n              </li>\n              <li>\n                <b>When you click submit</b>: Optimize when you click the\n                \"Submit\" button.\n              </li>\n              <li>\n                <b>When you stop typing</b>: Automatically optimize a few\n                seconds after you stop typing.\n              </li>\n              <li>\n                <b>As you're typing</b>: Optimize immediately as you type.\n              </li>\n            </ol>\n          </dd>\n          <dt>\n            <b>Optimization Level</b>\n          </dt>\n          <dd>\n            This setting determines how aggressive the optimization will be with\n            regard to preserving the speech of the original text.\n            <ol>\n              <li>\n                <b>Minimum</b>: Speech should be identical before and after\n                optimization.\n              </li>\n              <li>\n                <b>Normal</b>: Optimization will cause some very minor changes\n                in speech, but shouldn't be noticeable.\n              </li>\n              <li>\n                <b>Maximum</b>: Some parts of speech may change noticeably, but\n                should still have the correct syllables.\n              </li>\n            </ol>\n          </dd>\n        </dl>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"optimize-manual\": {\n    key: \"optimize-manual\",\n    name: \"Manually Trigger Optimization\",\n    tutorial: true,\n    content: ({ goToHelp }) => (\n      <Preact.Fragment>\n        <p>\n          Clicking this button will optimize the current text in the editor.\n        </p>\n        <p>{HELP_COMMON.optimize}</p>\n        <p>\n          See the{\" \"}\n          <button className=\"link\" onClick={() => goToHelp(\"optimize-full\")}>\n            Message Optimization help page\n          </button>{\" \"}\n          to learn more.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  /* ======================================\n   * =============== SPEED ================\n     ====================================== */\n\n  \"speed-overview\": {\n    key: \"speed-overview\",\n    name: \"Speed Modifier\",\n    tutorial: true,\n    content: () => (\n      <Preact.Fragment>\n        <p>{HELP_COMMON.speed}</p>\n        <p>{HELP_COMMON.speed_enable}</p>\n        <details>\n          <summary>Speed Modifier Characters</summary>\n          {HELP_DATA[\"speed-chars\"].content()}\n        </details>\n        <h3>Important Tips</h3>\n        <ul>\n          <li>\n            Any text that is followed by punctuation will not be affected by the\n            speed modifier. For example, in the message{\" \"}\n            <code>Hey you, get off my lawn{DEFAULT_SPEED_CHAR.repeat(10)}</code>\n            , <code>Hey you</code> will be spoken normally, and{\" \"}\n            <code>get off my lawn</code> will be sped up.\n          </li>\n          <li>{HELP_COMMON.speed_brian}</li>\n          <li>\n            {HELP_COMMON.speed_amy} So <code>{SPEED_CHARS[0]}</code> and{\" \"}\n            <code>{SPEED_CHARS[1]}</code> will make her speak slower/deeper, and{\" \"}\n            <code>{SPEED_CHARS[2]}</code> will make her speed up.\n          </li>\n        </ul>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"speed-chars\": {\n    key: \"speed-chars\",\n    name: \"Speed Modifier Characters\",\n    content: () => (\n      <ul>\n        <li>\n          <code>{SPEED_CHARS[0]}</code>: \"Inverted Exclamation Mark\" is the\n          default speed modifier character. It is the most reliable and\n          consistent for producing the desired speed and pitch.\n        </li>\n        <li>\n          <code>{SPEED_CHARS[1]}</code>: \"Opening Parenthesis Closing\n          Parenthesis\" performs very similarly to <code>{SPEED_CHARS[0]}</code>,\n          but with slightly less intensity and subtle differences in inflection.\n          Try this if <code>{SPEED_CHARS[0]}</code> isn't quite giving you the\n          result you want.\n        </li>\n        <li>\n          <code>{SPEED_CHARS[2]}</code>: \"Greater Than or Equal To\" surprisingly\n          has the opposite effect of the other modifiers: it causes the speaker\n          to slow down and lower their pitch later in the sentence.\n        </li>\n      </ul>\n    ),\n  },\n\n  /* ======================================\n   * ============== SETTINGS ==============\n     ====================================== */\n\n  \"tutorials-help\": {\n    key: \"tutorials-help\",\n    name: \"Feature Tutorials\",\n    content: () => (\n      <p>\n        These tutorials will appear the first time you use certain features.\n        They're meant to give you a brief explanation along with any important\n        tips about how the feature works. After you see them once, they won't\n        appear again unless you use the help button in the top right corner of\n        the page.\n      </p>\n    ),\n  },\n\n  \"bits-default\": {\n    key: \"bits-default\",\n    name: \"Default Bits String\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Choose the string that you plan to use most often when creating\n          messages with Bits.\n        </p>\n        <p>\n          This defaults to <code>uni300</code> because this is (currently) the\n          shortest Bit text available, which leaves more room for speed modifier\n          characters.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"history-steps\": {\n    key: \"history-steps\",\n    name: \"Maximum Undo/Redo Steps\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Adjust the maximum number of undo/redo steps that will be stored. When\n          you exceed this number, the oldest step will be discarded.\n        </p>\n        <p>\n          Note: You should only need to adjust this if you're on a slow computer\n          and the app is having performance issues.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  /* ======================================\n   * =========== IMPORT/EXPORT ============\n     ====================================== */\n\n  \"import-export-overview\": {\n    key: \"import-export-overview\",\n    name: \"Import/Export Data\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Import and Export Messages, Snippets, and Settings to backup or share\n          with others.\n        </p>\n        <details>\n          <summary>Export Data</summary>\n          {HELP_DATA[\"export-details\"].content()}\n        </details>\n        <details>\n          <summary>Import Data</summary>\n          {HELP_DATA[\"import-details\"].content()}\n        </details>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"export-details\": {\n    key: \"export-details\",\n    name: \"Export Data\",\n    content: () => (\n      <p>\n        Export data to backup or share with others. Select which data you wish\n        to include (Messages, Snippets, and Settings). The output will be a{\" \"}\n        <code>.json</code> file.\n      </p>\n    ),\n  },\n\n  \"import-details\": {\n    key: \"import-details\",\n    name: \"Import Data\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Import data that was exported from the app. You must provide a valid{\" \"}\n          <code>.json</code> file.\n        </p>\n        <p>\n          If there are conflicts during the import (e.g. two Messages with the\n          same name), you will be prompted to resolve them (e.g. by renaming one\n          of the Messages). Exact duplicates will automatically be discarded.\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"import-export-reset\": {\n    key: \"import-export-reset\",\n    name: \"Reset Storage\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          Resetting storage will clear all saved messages, snippets, and\n          settings, and restore the default sample data. If there's anything you\n          might want to keep, you should export the data before resetting.\n        </p>\n        <p>\n          Note: <b>This operation is not reversible.</b>\n        </p>\n      </Preact.Fragment>\n    ),\n  },\n\n  /* ======================================\n   * =============== OTHER ================\n     ====================================== */\n\n  organize: {\n    key: \"organize\",\n    name: \"Organize Groups and Items\",\n    content: () => (\n      <Preact.Fragment>\n        Clicking the reorganize button (<i class=\"fas fa-sort\" />) will enable\n        control over the order and grouping of the items in the list. You can\n        reorder items inside groups, reorder groups, and move items from one\n        group to another.\n      </Preact.Fragment>\n    ),\n  },\n\n  \"help-docs\": {\n    key: \"help-docs\",\n    name: \"Read the TTS Guide\",\n    content: () => (\n      <Preact.Fragment>\n        <p>\n          This guide will walk you through the basics of TTS manipulation,\n          including general inflection and pronunciation, speed modifiers, and\n          sound effects.\n        </p>\n        <a\n          href={`${REPOSITORY_URL}/blob/master/docs/guide.md`}\n          target=\"_blank\"\n          className=\"btn btn-primary btn-large\"\n        >\n          Read the TTS Guide\n        </a>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"skip-tutorials\": {\n    key: \"skip-tutorials\",\n    name: \"Skip All Tutorials\",\n    content: () => (\n      <Preact.Fragment>\n        {HELP_DATA[\"tutorials-help\"].content()}\n        <p>Are you sure you want to turn off these tutorials?</p>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"not-found\": {\n    key: \"not-found\",\n    name: \"Not Found\",\n    content: () => {\n      return (\n        <Preact.Fragment>\n          <p>Sorry! We don't have any information about that.</p>\n          <p>\n            Did we miss something? <ReportMissingHelpLink />.\n          </p>\n        </Preact.Fragment>\n      );\n    },\n  },\n\n  /* ======================================\n   * =============== INTRO ================\n     ====================================== */\n\n  \"intro-start\": {\n    key: \"intro-start\",\n    name: \"\",\n    content: () => (\n      <Preact.Fragment>\n        <h1>Welcome to the TTS Playground!</h1>\n        <p>Let's take a quick tour of the app and its features!</p>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"intro-editor\": {\n    key: \"intro-editor\",\n    name: \"Editor\",\n    content: () => (\n      <Preact.Fragment>\n        <h4>Craft and assemble your messages in the editor.</h4>\n        <p>Key features:</p>\n        <ul>\n          <li>Full undo/redo support (Ctrl+Z, Ctrl+Shift+Z)</li>\n          <li>Easily add pauses and snippets</li>\n          <li>Toggle speed modifier</li>\n          <li>Save Messages to access them later</li>\n        </ul>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"intro-messages\": {\n    key: \"intro-messages\",\n    name: \"Messages\",\n    content: () => (\n      <Preact.Fragment>\n        <h4>View and load your saved Messages.</h4>\n        <p>Key Features:</p>\n        <ul>\n          <li>Copy Message text straight to the clipboard</li>\n          <li>Load saved Messages into the editor.</li>\n        </ul>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"intro-snippets\": {\n    key: \"intro-snippets\",\n    name: \"Snippets\",\n    content: () => (\n      <Preact.Fragment>\n        <h4>\n          Insert repeated text snippets into your message with single click.\n        </h4>\n        <p>Key Features:</p>\n        <ul>\n          <li>Create, test, and store repeated text snippets</li>\n          <li>\n            Insert snippets into the editor by clicking the Add button (\n            <i className=\"fas fa-plus\" />)\n          </li>\n          <li>\n            Click and hold the Add button (\n            <i className=\"fas fa-plus\" />) to repeat the snippet.\n          </li>\n          <li>Group snippets to keep them organized</li>\n        </ul>\n      </Preact.Fragment>\n    ),\n  },\n\n  \"intro-help\": {\n    key: \"intro-help\",\n    name: \"Help Button\",\n    content: () => (\n      <Preact.Fragment>\n        <p>If you're not sure how something works:</p>\n        <ol>\n          <li>Click the Help button in the top right corner.</li>\n          <li>Click the item on the page that you want to learn about.</li>\n          <li>Read the information provided in the help popup.</li>\n        </ol>\n      </Preact.Fragment>\n    ),\n  },\n});\n\nexport type HelpData = typeof HELP_DATA;\nexport type HelpDataKey = keyof HelpData;\n","import { useContext } from \"preact/hooks\";\nimport * as hooks from \"preact/hooks\";\nimport { EDITOR_SETTINGS, HELP_COMPLETED, HELP_ITEM } from \"~/model\";\nimport { HELP_DATA, HelpDataKey } from \"~/view/components/help/help-data\";\nimport {\n  silence_event,\n  useContextState,\n  useStateIfMounted,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst get_help_keys = (elem: HTMLElement): [HelpDataKey, HelpDataKey] => {\n  let help_key = elem?.dataset?.help;\n  let tut_key = elem?.dataset?.tutorial;\n\n  if (!help_key && !tut_key && elem.tagName === \"OPTION\") {\n    elem = elem.parentElement;\n    help_key = elem?.dataset?.help;\n    tut_key = elem?.dataset?.tutorial;\n  }\n\n  return [help_key, tut_key] as [HelpDataKey, HelpDataKey];\n};\n\nexport const useHelpItem = (enabled: boolean) => {\n  const [key, set_key] = useContextState(HELP_ITEM);\n  const [comp, set_comp] = useContextState(HELP_COMPLETED);\n  const skip_tutorials = useValueRef(\n    useContext(EDITOR_SETTINGS).value.skip_tutorials\n  );\n  const [is_tutorial, set_is_tutorial] = useStateIfMounted(false);\n  const comp_map_ref = useValueRef(comp);\n  const enabled_ref = useValueRef(enabled);\n  const key_ref = useValueRef(key);\n\n  hooks.useEffect(() => {\n    if (!comp[\"intro-help\"]) {\n      set_key(\"intro-start\");\n    }\n  }, []);\n\n  hooks.useEffect(() => {\n    if (!key || !HELP_DATA[key]) {\n      set_is_tutorial(false);\n    }\n  }, [key]);\n\n  const open_item = hooks.useCallback(\n    (new_key: HelpDataKey, other_key?: HelpDataKey) => {\n      if (new_key in HELP_DATA) {\n        set_key(new_key);\n        if (!comp_map_ref.current[new_key]) {\n          set_comp({\n            ...comp_map_ref.current,\n            ...(other_key ? { [other_key]: true } : {}),\n            [new_key]: true,\n          });\n        }\n      } else if (enabled_ref.current) {\n        set_key(new_key);\n      }\n    },\n    []\n  );\n\n  return [\n    key,\n    hooks.useCallback<EventListener>(e => {\n      if (key_ref.current) {\n        return;\n      }\n      const [help_key, tut_key] = get_help_keys(e.target as HTMLElement);\n\n      let target = !enabled_ref.current && tut_key ? tut_key : help_key;\n      if (!target) {\n        return;\n      }\n\n      const is_tut =\n        !enabled_ref.current &&\n        ((!!tut_key && !comp_map_ref.current[tut_key]) ||\n          (!!(HELP_DATA[help_key] as TTS.HelpItem)?.tutorial &&\n            !comp_map_ref.current[help_key]));\n\n      if (enabled_ref.current || (is_tut && !skip_tutorials.current)) {\n        silence_event(e);\n        set_is_tutorial(is_tut);\n        open_item(target, tut_key);\n      }\n    }, []),\n    is_tutorial,\n  ] as const;\n};\n","import preact from \"preact\";\nimport * as hooks from \"preact/hooks\";\nimport {\n  EDITOR_SETTINGS,\n  EDITOR_STATE,\n  OPTIMIZE_MESSAGE_CALLBACK,\n  OptimizeTrigger,\n} from \"~/model\";\nimport {\n  optimize_message,\n  useCallbackAfterUpdate,\n  useContextState,\n  useValueRef,\n} from \"~/view/utils\";\n\nexport const useOptimizeMessage = (\n  editor_settings: TTS.EditorSettings,\n  is_optimized: preact.RefObject<boolean>,\n  enabled: preact.RefObject<boolean>\n) => {\n  const [editor_state, set_editor_state] = useContextState(EDITOR_STATE);\n  const state_ref = useValueRef(editor_state);\n  const settings_ref = useValueRef(editor_settings);\n  const last_trigger = hooks.useRef<OptimizeTrigger>(Infinity);\n\n  hooks.useEffect(() => {\n    is_optimized.current = false;\n  }, [editor_state.text]);\n\n  const callback_ref = hooks.useRef<() => void>(() => {});\n  const [optimize_message_listener] = useCallbackAfterUpdate(\n    hooks.useCallback((e: TTS.OptimizeEvent) => {\n      const { trigger, input, callback } = e.detail;\n      if (\n        (is_optimized.current && last_trigger.current <= trigger) ||\n        !enabled.current\n      ) {\n        callback(\n          state_ref.current.text,\n          input.current?.selectionStart,\n          input.current?.selectionEnd,\n          trigger\n        );\n        return;\n      }\n      const { trim_whitespace, optimize_words } = settings_ref.current;\n      if (!trim_whitespace && trigger > optimize_words) {\n        callback(\n          state_ref.current.text,\n          input.current?.selectionStart,\n          input.current?.selectionEnd,\n          trigger\n        );\n        return;\n      }\n      const [new_text, cursor_start, cursor_end] = optimize_message(\n        state_ref.current.text,\n        input,\n        trigger,\n        settings_ref.current\n      );\n\n      if (state_ref.current.text !== new_text && callback) {\n        callback_ref.current = () => {\n          callback_ref.current = () => {};\n          callback(new_text, cursor_start, cursor_end, trigger);\n        };\n      }\n\n      last_trigger.current = trigger;\n      is_optimized.current = true;\n      set_editor_state({\n        ...state_ref.current,\n        text: new_text,\n      });\n\n      if (state_ref.current.text === new_text && callback) {\n        callback(new_text, cursor_start, cursor_end, trigger);\n      }\n    }, []),\n    callback_ref,\n    [editor_state.text]\n  );\n\n  hooks.useEffect(() => {\n    window.addEventListener(\"optimize-message\", optimize_message_listener);\n    return () =>\n      window.removeEventListener(\"optimize-message\", optimize_message_listener);\n  }, []);\n};\n\nexport const useOptimizeMessageTrigger = (\n  input_ref: preact.RefObject<HTMLTextAreaElement>,\n  callback_pre?: TTS.OptimizeCallback,\n  callback_post?: TTS.OptimizeCallback\n) => {\n  const settings_ref = useValueRef(hooks.useContext(EDITOR_SETTINGS).value);\n  const editor_state = hooks.useContext(EDITOR_STATE).value;\n  const state_ref = useValueRef(editor_state);\n  const [ctx_callback, set_callback] = useContextState(\n    OPTIMIZE_MESSAGE_CALLBACK\n  );\n\n  const cb = hooks.useCallback(\n    (trigger: OptimizeTrigger, refocus_target?: HTMLElement) => {\n      callback_pre?.(\n        state_ref.current.text,\n        input_ref.current?.selectionStart,\n        input_ref.current?.selectionEnd,\n        trigger\n      );\n      if (\n        !settings_ref.current.trim_whitespace &&\n        trigger > settings_ref.current.optimize_words\n      ) {\n        callback_post?.(\n          state_ref.current.text,\n          input_ref.current?.selectionStart,\n          input_ref.current?.selectionEnd,\n          trigger\n        );\n        if (trigger === OptimizeTrigger.manual) {\n          refocus_target?.focus();\n        }\n        return;\n      }\n      const evt: TTS.OptimizeEvent = new CustomEvent(\"optimize-message\", {\n        bubbles: true,\n        detail: {\n          trigger,\n          input: input_ref,\n          callback: (...args: Parameters<TTS.OptimizeCallback>) => {\n            callback_post(...args);\n            if (trigger === OptimizeTrigger.manual) {\n              refocus_target?.focus();\n            }\n          },\n        },\n      });\n      input_ref.current?.dispatchEvent(evt);\n    },\n    [input_ref, callback_post]\n  );\n  hooks.useEffect(() => {\n    set_callback(() => cb);\n  }, [cb]);\n\n  return ctx_callback;\n};\n","import * as Preact from \"preact\";\nimport * as hooks from \"preact/hooks\";\nimport { add_item_to, replace_item_in } from \"~/common\";\nimport { useStateIfMounted, useStateRef, useValueRef } from \"~/view/utils\";\n\nconst reorder_disabled = (el: HTMLElement) =>\n  el.getAttribute(\"data-disable-reorder\") === \"true\" ||\n  `${el.getAttribute(\"draggable\")}` === \"false\";\n\nexport const move_organizer_item = <T extends any>(\n  sections: OrganizerBaseProps<T>[\"sections\"],\n  grabbed: OrganizerGrabbedItem<T>,\n  target: OrganizerIndex\n) => {\n  let result = sections;\n  const cur_section = sections[grabbed.section_index];\n  const new_section = { ...sections[target.section] };\n  const old_data = cur_section.data.filter((_, i) => i !== grabbed.item_index);\n  if (grabbed.section_index === target.section) {\n    new_section.data = old_data;\n  } else {\n    result = replace_item_in(result, (_, i) => i === grabbed.section_index, {\n      ...cur_section,\n      data: old_data,\n    });\n  }\n\n  new_section.data = add_item_to(new_section.data, grabbed.value, target.item);\n  return replace_item_in(result, (_, i) => i === target.section, new_section);\n};\n\nexport const move_organizer_section = <T extends any>(\n  sections: OrganizerBaseProps<T>[\"sections\"],\n  grabbed: OrganizerGrabbedSection<T>,\n  target: number\n) => {\n  if (grabbed.value && target > -1 && target !== grabbed.section_index) {\n    const sects = sections.filter((_, i) => i !== grabbed.section_index);\n    return add_item_to(sects, grabbed.value, target);\n  }\n};\n\nexport const useDragReorder = <T extends any>(\n  sections: Preact.RefObject<OrganizerBaseProps<T>[\"sections\"]>,\n  callback: OrganizerBaseProps<T>[\"updateSections\"]\n) => {\n  const [grabbed, set_grabbed, grabbed_ref] = useStateRef<OrganizerGrabbedItem<\n    T | OrganizerSectionSpec<T>\n  > | null>(null);\n  const [target_index, set_target_index, target_index_ref] =\n    useStateRef<OrganizerIndex | null>(null);\n  const [all_closed, set_all_closed] = useStateIfMounted(false);\n\n  const move_to_index = hooks.useCallback(\n    <A extends T | OrganizerSectionSpec<T>>(\n      target: OrganizerGrabbedItem<A>,\n      new_index: OrganizerIndex\n    ) => {\n      let result;\n      if (target.type === \"section\") {\n        result = move_organizer_section(\n          sections.current,\n          target as OrganizerGrabbedSection<T>,\n          new_index.section\n        );\n      } else if (target.type === \"item\") {\n        result = move_organizer_item(\n          sections.current,\n          target as OrganizerGrabbedItem<T>,\n          new_index\n        );\n      } else {\n        return;\n      }\n      callback(result);\n    },\n    [callback]\n  );\n\n  const end_drag = hooks.useCallback(() => {\n    set_grabbed(null);\n    set_target_index(null);\n    set_all_closed(false);\n  }, []);\n\n  const on_drag_over_section = hooks.useCallback(\n    (section: number) => e => {\n      e.preventDefault();\n      if (grabbed_ref.current == null) {\n        return;\n      }\n      if (\n        grabbed_ref.current.type === \"item\" &&\n        grabbed_ref.current.section_index === section\n      ) {\n        set_target_index(null);\n        return;\n      }\n      set_target_index({ section, item: null });\n    },\n    []\n  );\n  const on_drag_over_item = hooks.useCallback(\n    (section: number, item: number) => {\n      if (grabbed_ref.current?.type !== \"item\") {\n        return;\n      }\n      return e => {\n        e.preventDefault();\n        if (grabbed_ref.current == null) {\n          return;\n        }\n        set_target_index({ section, item });\n      };\n    },\n    []\n  );\n\n  const on_drop = hooks.useCallback(\n    e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const grabbed_ = grabbed_ref.current;\n      const target_index_ = target_index_ref.current;\n      if (\n        grabbed_ != null &&\n        target_index_ != null &&\n        (target_index_.section !== grabbed_.section_index ||\n          target_index_.item !== grabbed_.item_index)\n      ) {\n        move_to_index(grabbed_, target_index_);\n      }\n\n      end_drag();\n    },\n    [move_to_index, target_index]\n  );\n\n  hooks.useEffect(() => {\n    if (grabbed != null) {\n      const listener = e => {\n        if (grabbed_ref.current == null) {\n          return;\n        }\n        if (target_index_ref.current != null) {\n          on_drop(e);\n          return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        end_drag();\n      };\n      document.body.addEventListener(\"dragend\", listener, { once: true });\n      document.body.addEventListener(\"drop\", listener, { once: true });\n      document.body.addEventListener(\"mouseup\", listener, { once: true });\n      return () => {\n        document.body.removeEventListener(\"dragend\", listener);\n        document.body.removeEventListener(\"mouseup\", listener);\n      };\n    }\n  }, [grabbed]);\n\n  const get_section_props = (\n    section: OrganizerSectionSpec<T>,\n    index: number\n  ): Omit<HTMLDivProps, \"open\"> => {\n    const grabbed_ = grabbed_ref.current;\n    const target = target_index_ref.current;\n    return {\n      onMouseDown: e => {\n        e.stopPropagation();\n      },\n      onDragStartCapture: e => {\n        if (reorder_disabled(e.currentTarget)) {\n          e.preventDefault();\n        } else {\n          set_grabbed({\n            type: \"section\",\n            value: section,\n            section_index: index,\n            item_index: null,\n          });\n          setTimeout(() => {\n            if (grabbed_ref.current?.type === \"section\") {\n              set_all_closed(true);\n            }\n          }, 100);\n        }\n      },\n      // @ts-expect-error:\n      \"data-grabbed\": `${\n        grabbed_?.type === \"section\" && grabbed_?.section_index === index\n      }`,\n      \"data-drop-target\": `${\n        grabbed_?.type === \"item\" &&\n        target?.section === index &&\n        grabbed?.section_index !== index &&\n        target.item === null\n      }`,\n    } as const;\n  };\n\n  return [\n    grabbed,\n    set_grabbed,\n    target_index,\n    get_section_props,\n    all_closed,\n    on_drag_over_section,\n    on_drag_over_item,\n    on_drop,\n  ] as const;\n};\n\nconst DRAG_HOVER_OPEN_SECTION_DELAY = 1000;\nconst clear_timer = t => {\n  if (t?.current) {\n    clearTimeout(t.current);\n    t.current = null;\n  }\n};\nexport const useDragToOpen = <T extends any>(\n  openSections: OrganizerBaseProps<T>[\"openSections\"],\n  setOpen: OrganizerBaseProps<T>[\"setOpen\"],\n  grabbed: OrganizerGrabbedItem<T | OrganizerSectionSpec<T>>\n) => {\n  const open_ref = useValueRef(openSections);\n  const [, set_hovered, hovered_ref] = useStateRef<number | null>(null);\n  const open_timer = hooks.useRef<any>(null);\n\n  const set_open = hooks.useCallback(\n    (index: number, section: OrganizerSectionSpec<T>) => {\n      if (hovered_ref.current !== index) {\n        return;\n      }\n      clear_timer(open_timer);\n      setOpen(section.name, true);\n    },\n    [setOpen]\n  );\n\n  hooks.useEffect(() => {\n    if (grabbed) {\n      return () => {\n        clear_timer(open_timer);\n        set_hovered(null);\n      };\n    }\n  }, [grabbed]);\n\n  const onDragEnterSection = hooks.useCallback(\n    (section: OrganizerSectionSpec<T>, index: number) => e => {\n      if (\n        !open_ref.current[section.name] &&\n        e.target.classList.contains(\"organizer-reorder-area\") &&\n        e.target.getAttribute(\"data-type\") === \"section\"\n      ) {\n        e.preventDefault();\n        set_hovered(index);\n        open_timer.current = setTimeout(() => {\n          set_open(index, section);\n        }, DRAG_HOVER_OPEN_SECTION_DELAY);\n      }\n    },\n    [set_open]\n  );\n  const onDragExitSection = hooks.useCallback(\n    (section: OrganizerSectionSpec<T>, index: number) => e => {\n      if (\n        !section.open &&\n        !open_ref.current[section.name] &&\n        e.target.classList.contains(\"organizer-reorder-area\") &&\n        e.target.getAttribute(\"data-type\") === \"section\"\n      ) {\n        e.preventDefault();\n        clear_timer(open_timer);\n        set_hovered(null);\n      }\n    },\n    [setOpen]\n  );\n\n  return [onDragEnterSection, onDragExitSection] as const;\n};\n","import * as hooks from \"preact/hooks\";\nimport {\n  get_tts_data,\n  play_audio,\n  get_speed_modifier,\n  predict_duration,\n} from \"~/common\";\nimport { EDITOR_SETTINGS, EDITOR_STATE } from \"~/model\";\nimport {\n  useMemoRef,\n  useRequestStatus,\n  useStateRef,\n  useValueRef,\n} from \"~/view/utils\";\n\nexport const usePlayMessage = (message: TTS.Message, player_id?: string) => {\n  const { bits_string, stop_playback_at_modifier } =\n    hooks.useContext(EDITOR_SETTINGS).value ?? {};\n  const {\n    text,\n    options: { speed, max_length, bits, voice, speed_char },\n  } = message;\n  const voice_ref = useValueRef(voice);\n  const message_ref = useValueRef(message);\n  const timestamp_ref = hooks.useRef<number>(0);\n  const end_time_ref = hooks.useRef<number>(undefined);\n\n  const [data, set_data, data_ref] = useStateRef(\"\");\n  const full_text = useMemoRef(() => {\n    if (speed && max_length !== text.length) {\n      return `${text}${get_speed_modifier(message)}`;\n    }\n    return text;\n  }, [speed, text, max_length, bits, bits_string, speed_char]);\n\n  const get_tts_audio = hooks.useCallback(\n    async (\n      msg_text: string,\n      voice?: string,\n      start_time?: number\n    ): Promise<[string, number?, number?]> => {\n      let duration = [];\n      const data = await get_tts_data(msg_text, voice);\n      if ((stop_playback_at_modifier && speed) || start_time) {\n        duration = await predict_duration(message_ref.current, start_time);\n      }\n      return [\n        data,\n        stop_playback_at_modifier ? duration[0] : undefined,\n        duration[1],\n      ];\n    },\n    [stop_playback_at_modifier, speed]\n  );\n\n  const [status, fetch_tts] = useRequestStatus(get_tts_audio);\n  const on_submit = hooks.useCallback(\n    (start_index?: number) => {\n      fetch_tts(full_text.current, voice_ref.current, start_index).then(\n        ([d, end_time, start_time]) => {\n          end_time_ref.current = end_time;\n          if (d === data_ref.current) {\n            if (data_ref.current)\n              play_audio(player_id, false, start_time, end_time);\n          } else {\n            timestamp_ref.current = start_time;\n            set_data(d);\n          }\n        }\n      );\n    },\n    [player_id, fetch_tts, speed, stop_playback_at_modifier]\n  );\n\n  hooks.useEffect(() => {\n    if (data) {\n      play_audio(player_id, true, timestamp_ref.current, end_time_ref.current);\n      timestamp_ref.current = 0;\n    }\n  }, [data]);\n\n  return [\n    data,\n    status,\n    on_submit,\n    bits ? `${bits} ${full_text.current}` : full_text.current,\n  ] as const;\n};\n\nexport const usePlaySnippet = (player_id?: string) => {\n  const voice = hooks.useContext(EDITOR_STATE).value?.voice;\n  const voice_ref = useValueRef(voice);\n  const [data, set_data, data_ref] = useStateRef(\"\");\n\n  const [status, fetch_tts] = useRequestStatus(get_tts_data);\n  const on_submit = hooks.useCallback(\n    (snippet: TTS.Snippet, count?: number) => {\n      const {\n        text,\n        options: { prefix = \"\", default_count, suffix = \"\" },\n      } = snippet;\n      const full_text = `${prefix}${text.repeat(\n        count || default_count || 1\n      )}${suffix}`;\n      return fetch_tts(full_text, voice_ref.current).then(d => {\n        if (d === data_ref.current) {\n          if (data_ref.current) play_audio(player_id, false);\n        } else {\n          set_data(d);\n        }\n      });\n    },\n    []\n  );\n\n  hooks.useEffect(() => {\n    if (data) play_audio(player_id);\n  }, [data]);\n\n  return [data, status, on_submit] as const;\n};\n\nexport const useAudioPlayer = (player_id?: string) => {\n  const voice = hooks.useContext(EDITOR_STATE).value?.voice;\n  const voice_ref = useValueRef(voice);\n  const [data, set_data, data_ref] = useStateRef<string>(\"\");\n  hooks.useEffect(() => {\n    if (data) play_audio(player_id);\n  }, [data]);\n  const get_data = hooks.useCallback((text: string) => {\n    if (!text) {\n      return Promise.resolve();\n    }\n    return get_tts_data(text, voice_ref.current).then(d => {\n      if (d === data_ref.current) {\n        play_audio(player_id, false);\n      } else {\n        set_data(d);\n      }\n    });\n  }, []);\n\n  return [data, get_data] as const;\n};\n\nexport const useMessageFullText = (message: TTS.Message) => {\n  const {\n    text,\n    options: { max_length, speed, bits, speed_char },\n  } = message ?? { options: {} };\n  return hooks.useMemo(() => {\n    if (!text) {\n      return \"\";\n    }\n    let text_ = bits ? `${bits} ${text}` : text;\n    if (!speed || text_.length >= max_length - 1) {\n      return text_;\n    }\n    return `${text_}${get_speed_modifier(message)}`;\n  }, [text, max_length, speed, speed_char]);\n};\n","export * from \"./data\";\nexport * from \"./dom\";\nexport * from \"./editor\";\nexport * from \"./help\";\nexport * from \"./optimize\";\nexport * from \"./organizer\";\nexport * from \"./tts\";\n","import { OptimizeLevel } from \"~/model\";\nimport { match_case } from \"~/view/utils/common\";\n\ninterface TextTransform {\n  match: (value: string) => boolean;\n  transform: string | ((value: string) => string);\n}\n\nexport const WORD_CHARACTERS = \"a-zþﬆﬂ0-9􃎜'\";\n\nexport const PLAIN_TRANSFORMS = {\n  [OptimizeLevel.safe]: {\n    too: \"2\",\n    one: \"1\",\n    two: \"2\",\n    three: \"3\",\n    four: \"4\",\n    five: \"5\",\n    six: \"6\",\n    seven: \"7\",\n    eight: \"8\",\n    nine: \"9\",\n    ten: \"10\",\n    and: \"&\",\n    be: \"ⓑ\",\n    bee: \"ⓑ\",\n    at: \"@\",\n    no: \"№\",\n    i: \"ⓘ\",\n    bees: \"b's\",\n  },\n  [OptimizeLevel.normal]: {\n    are: \"ⓡ\",\n    r: \"ⓡ\",\n    you: \"ⓤ\",\n    u: \"ⓤ\",\n    see: \"ⓒ\",\n    why: \"ⓨ\",\n    y: \"ⓨ\",\n    before: \"b4\",\n    none: \"nun\",\n    know: \"№\",\n    speedy: \"speeⓓ\",\n    \"speedy's\": \"speeⓓ's\",\n    m8: \"􃎜8\",\n    mate: \"􃎜8\",\n    matey: \"􃎜80\",\n  },\n  [OptimizeLevel.max]: {\n    for: \"4\",\n    fore: \"4\",\n    to: \"2\",\n    a: \"ⓐ\",\n  },\n} as const;\n\nexport const TRANSFORMS: { [K in OptimizeLevel]: TextTransform[] } = {\n  [OptimizeLevel.safe]: [\n    {\n      match: v => /^\\w*ight$/i.test(v),\n      transform: v => v.replace(/ight$/i, match => match_case(\"ite\", match)),\n    },\n    {\n      match: v => /th/i.test(v),\n      transform: v => v.replace(/th/i, match => match_case(\"þ\", match)),\n    },\n    {\n      match: v => /st/i.test(v),\n      transform: v => v.replace(/st/i, match => match_case(\"ﬆ\", match)),\n    },\n    {\n      match: v => /fl/i.test(v),\n      transform: v => v.replace(/fl/i, match => match_case(\"ﬂ\", match)),\n    },\n    {\n      // replace any sequence of 3 or more of the same vowel with 2 of that vowel\n      match: v => new RegExp(\"([aeiouy])(\\\\1){2,}\", \"i\").test(v),\n      transform: v =>\n        v.replace(new RegExp(\"([aeiouy])(\\\\1){2,}\", \"gi\"), \"$1$1\"),\n    },\n  ],\n  [OptimizeLevel.normal]: [\n    {\n      match: v => /[aeiouy]'ve\\b/i.test(v),\n      transform: v =>\n        v.replace(/'ve\\b/i, match => match_case(\"'ve\", match, \"'\")),\n    },\n  ],\n  [OptimizeLevel.max]: [\n    {\n      match: v => /fore?$/i.test(v),\n      transform: v => v.replace(/fore?$/i, \"4\"),\n    },\n    {\n      match: v => /^fore?/i.test(v),\n      transform: v => v.replace(/^fore?/i, \"4\"),\n    },\n    {\n      match: v => /^fou?r\\w*/i.test(v),\n      transform: v => v.replace(/^fou?r/i, \"4\"),\n    },\n  ],\n};\n\nexport const SAFE_WHITESPACE_TRANSFORMS = [\n  {\n    before: \"[ &,@]\",\n    after: \"[ a-z0-9Ⓐ-ⓩ]\",\n    reversible: true,\n  },\n  {\n    before: \"[Ⓐ-ⓩ]\",\n    after: \"[ Ⓐ-ⓩa-z0-9þﬆﬂ]\",\n    reversible: true,\n  },\n  {\n    before: \"[ a-zⒶ-ⓩ]\",\n    after: \"[ 0-9]\",\n    reversible: true,\n  },\n  {\n    before: \".\",\n    after: \"[\\n\\r]\",\n    reversible: true,\n  },\n  {\n    before: \"[?!]\",\n    after: \"[ a-zⒶ-ⓩ]\",\n  },\n];\n\nexport const RESTORE_WHITESPACE_TRANSFORMS = [\n  {\n    before: /[Ⓐ-ⓩ]\\?$/i,\n    after: /^[^Ⓐ-ⓩ]/i,\n  },\n  {\n    before: /[$￡￥￦€₩₹]\\d+(\\.\\d+)?$/i,\n    after: /^[^Ⓐ-ⓩ]/i,\n  },\n  {\n    before: /'[a-z]+$/i,\n    after: /^[^Ⓐ-ⓩ]/i,\n  },\n];\n","import { OptimizeLevel, OptimizeTrigger } from \"~/model/types\";\nimport { match_case } from \"~/view/utils/common\";\nimport {\n  PLAIN_TRANSFORMS,\n  RESTORE_WHITESPACE_TRANSFORMS,\n  SAFE_WHITESPACE_TRANSFORMS,\n  TRANSFORMS,\n  WORD_CHARACTERS,\n} from \"~/view/utils/optimize-transforms\";\n\nconst WHITESPACE = \"[^\\\\S\\r\\n]\";\n\nconst space_can_be_removed = (before: string, after: string) => {\n  // prevent forming urls, which will be removed in speech\n  if (before.endsWith(\".\")) {\n    return false;\n  }\n  return (\n    SAFE_WHITESPACE_TRANSFORMS.some(\n      t =>\n        (new RegExp(`${t.before}$`, \"i\").test(before) &&\n          new RegExp(`^${t.after}`, \"i\").test(after)) ||\n        (!t.reversible\n          ? false\n          : new RegExp(`^${t.before}`, \"i\").test(after) &&\n            new RegExp(`${t.after}$`, \"i\").test(before))\n    ) &&\n    !RESTORE_WHITESPACE_TRANSFORMS.some(\n      t => t.before.test(before) && t.after.test(after)\n    )\n  );\n};\n\nconst optimize_word = (\n  word: string,\n  level: OptimizeLevel = OptimizeLevel.normal\n) => {\n  for (let i = OptimizeLevel.safe; i <= level; i++) {\n    const transforms = PLAIN_TRANSFORMS[i];\n    if (word.toLowerCase() in transforms) {\n      const after = transforms[word.toLowerCase()];\n      if (word === word.toLowerCase()) {\n        return after.toLowerCase();\n      }\n      if (word === word.toUpperCase()) {\n        return after.toUpperCase();\n      }\n      return word.replace(word, match => match_case(after, match));\n    }\n  }\n\n  let output = word;\n  for (let i = OptimizeLevel.safe; i <= level; i++) {\n    const transforms = TRANSFORMS[i];\n    transforms.forEach(t => {\n      if (t.match(output)) {\n        output =\n          typeof t.transform === \"string\"\n            ? t.transform\n            : t.transform?.(output) ?? output;\n      }\n    });\n  }\n\n  return output;\n};\n\nconst get_first_char = (text: string, index: number = 0) => {\n  return (index === 0 ? text : text.slice(index)).search(/\\S/);\n};\nconst get_last_char = (text: string, index: number = text.length) => {\n  const input = (index === text.length ? text : text.slice(0, index))\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n  const i = input.search(/\\S/);\n  return i === -1 ? i : text.length - i;\n};\n\nconst get_word_start = (text: string, index: number) => {\n  if (\n    index > text.length ||\n    index <= 0 ||\n    text[index - 1] === \" \" ||\n    text[index - 1] === \"\\n\"\n  ) {\n    return -1;\n  }\n  const i = text.slice(0, index).split(\"\").reverse().join(\"\").search(/\\s/);\n  if (i === -1) {\n    return 0;\n  }\n  return index - i;\n};\n\nconst parse_word = (text: string) => {\n  const index = text.search(new RegExp(`[^${WORD_CHARACTERS}]`, \"i\"));\n  if (index === -1) {\n    return text;\n  }\n  return text.slice(0, index);\n};\n\nconst parse_symbol = (text: string) => {\n  const index = text.search(new RegExp(`[${WORD_CHARACTERS}]`, \"i\"));\n  if (index === -1) {\n    return text;\n  }\n  return text.slice(0, index);\n};\n\nconst trim_duplicate_whitespace = (text: string) =>\n  text.replace(/\\s+(\\n)/g, \"$1\").replace(/(\\s)\\s+/g, \"$1\");\n\nexport const trim_excess_whitespace = (\n  text: string,\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  text = text.replace(new RegExp(WHITESPACE, \"gi\"), \" \");\n  let { selectionStart = -1, selectionEnd = -1 } = input_ref.current || {};\n  if (\n    selectionStart === -1 ||\n    selectionEnd === -1 ||\n    (selectionStart === selectionEnd &&\n      (selectionStart === 0 || selectionEnd === text.length))\n  ) {\n    const output = trim_duplicate_whitespace(text.trim());\n    if (selectionStart === -1 || selectionEnd === -1) {\n      return [output, -1, -1] as const;\n    }\n    if (selectionStart === 0) {\n      return [output, 0, 0] as const;\n    }\n    return [output, output.length, output.length] as const;\n  }\n\n  let start = trim_duplicate_whitespace(\n    text.slice(0, selectionStart).trimStart()\n  );\n  let middle = trim_duplicate_whitespace(\n    text.slice(selectionStart, selectionEnd)\n  );\n  let end = trim_duplicate_whitespace(text.slice(selectionEnd).trimEnd());\n\n  if (end.length === 0) {\n    middle = middle.trimEnd();\n    if (middle.length === 0) {\n      start = start.trimEnd();\n    }\n  }\n\n  if (start.length === 0) {\n    middle = middle.trimStart();\n    if (middle.length === 0) {\n      end = end.trimStart();\n    }\n  }\n\n  if (/\\s$/i.test(start) && /^\\s/i.test(middle)) {\n    if (middle[0] === \"\\n\") {\n      start = start.slice(0, -1);\n    } else {\n      middle = middle.slice(1);\n    }\n  }\n  if (/\\s$/i.test(middle) && /^\\s/i.test(end)) {\n    if (end[0] === \"\\n\") {\n      middle = middle.slice(0, -1);\n    } else {\n      end = end.slice(1);\n    }\n  }\n  if (selectionStart === selectionEnd) {\n    if (/\\s$/i.test(start)) {\n      if (/^\\s/i.test(end) || end.length === 0) {\n        if (end[0] === \"\\n\" || end.length === 0) {\n          start = start.slice(0, -1);\n        } else {\n          end = end.slice(1);\n        }\n      }\n    } else if (/^\\s/i.test(end) && start.length === 0) {\n      end = end.slice(1);\n    }\n  }\n\n  return [\n    `${start}${middle}${end}`,\n    start.length,\n    start.length + middle.length,\n  ] as const;\n};\n\nexport const optimize_whitespace = (\n  text: string,\n  input_ref: preact.RefObject<HTMLTextAreaElement>,\n  trigger: OptimizeTrigger\n) => {\n  let { selectionStart = -1, selectionEnd = -1 } = input_ref.current || {};\n  const ignore_cursor = trigger <= OptimizeTrigger.blur;\n  if (selectionStart !== selectionEnd && trigger !== OptimizeTrigger.manual) {\n    return [text, selectionStart, selectionEnd] as const;\n  }\n  let cursor_initial = selectionStart;\n\n  let input = text.replace(new RegExp(WHITESPACE, \"g\"), \" \");\n  const first_non_space = get_first_char(input);\n  const space_at_start = cursor_initial < first_non_space && !ignore_cursor;\n  const newline_at_start =\n    input\n      .slice(ignore_cursor ? 0 : cursor_initial, first_non_space)\n      .includes(\"\\n\") && !ignore_cursor;\n  input = input.trimStart();\n  cursor_initial = Math.max(cursor_initial - first_non_space, 0);\n  const last_non_space = get_last_char(input);\n  const space_at_end = cursor_initial > last_non_space && !ignore_cursor;\n  const newline_at_end =\n    input\n      .slice(last_non_space, ignore_cursor ? undefined : cursor_initial)\n      .includes(\"\\n\") && !ignore_cursor;\n  input = input.trimEnd();\n  cursor_initial = space_at_start ? 0 : Math.min(cursor_initial, input.length);\n\n  let start = trim_duplicate_whitespace(\n    input.slice(0, cursor_initial).trimStart()\n  );\n  let end = trim_duplicate_whitespace(input.slice(cursor_initial).trimEnd());\n  cursor_initial = start.length;\n  input = `${start}${end}`;\n\n  const cursor_space_left =\n    space_at_end || /\\s/.test(input[cursor_initial - 1]);\n  const cursor_newline_left = space_at_end\n    ? newline_at_end\n    : input[cursor_initial - 1] === \"\\n\";\n\n  const cursor_space_right = space_at_start || /\\s/.test(input[cursor_initial]);\n  const cursor_newline_right = space_at_start\n    ? newline_at_start\n    : input[cursor_initial] === \"\\n\";\n\n  let output = \"\";\n  let cursor_final = -1;\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    if (cursor_initial === i && cursor_final === -1) {\n      cursor_final = output.length;\n    }\n    if (char !== \" \" && char !== \"\\n\") {\n      if (space_at_start && output.length === 0) {\n        output += newline_at_start ? \"\\n\" : \" \";\n      }\n      output += char;\n      if (char === \".\" && input[i + 1] !== \"\\n\" && input[i + 1] !== \" \") {\n        output += \" \";\n      }\n      continue;\n    }\n    if (!ignore_cursor && i + 1 === cursor_initial && cursor_space_left) {\n      output += cursor_newline_left ? \"\\n\" : \" \";\n      cursor_final = output.length;\n    } else if (!ignore_cursor && i === cursor_initial && cursor_space_right) {\n      output += cursor_newline_right ? \"\\n\" : \" \";\n    } else {\n      const before = output;\n      const after = input.slice(i + 1);\n      if (char === \"\\n\") {\n        if (\n          (ignore_cursor || (i > 0 && i < input.length)) &&\n          before.slice(-1) !== \"\\n\"\n        ) {\n          output += char;\n        }\n      } else if (!space_can_be_removed(before, after)) {\n        output += char;\n      }\n    }\n  }\n  if (space_at_end) {\n    output += newline_at_end ? \"\\n\" : \" \";\n  }\n\n  if (cursor_final === -1 || space_at_end) {\n    cursor_final = output.length;\n  }\n  return [output, cursor_final, cursor_final] as const;\n};\n\nexport const optimize_message_words = (\n  text: string,\n  input_ref: preact.RefObject<HTMLTextAreaElement>,\n  trigger: OptimizeTrigger,\n  settings: TTS.EditorSettings\n) => {\n  const { optimize_words, optimize_level } = settings;\n  let { selectionStart = -1, selectionEnd = -1 } = input_ref.current || {};\n  const ignore_cursor = trigger <= OptimizeTrigger.blur;\n  const should_optimize_words = trigger <= optimize_words;\n  if (\n    !should_optimize_words ||\n    (selectionStart !== selectionEnd && trigger !== OptimizeTrigger.manual)\n  ) {\n    return [text, selectionStart, selectionEnd] as const;\n  }\n\n  let input = text;\n  const cursor_initial = selectionStart;\n\n  const cursor_word_start = get_word_start(input, cursor_initial);\n  const cursor_index_in_word =\n    cursor_word_start !== -1 ? cursor_initial - cursor_word_start : -1;\n\n  const words = input.split(/( |(?=\\n))/);\n\n  let output = \"\";\n  let cursor_final = cursor_initial === 0 ? 0 : -1;\n\n  let rec_input = \"\";\n\n  const add_word = (before, after) => {\n    rec_input += before;\n    output += after;\n  };\n  for (let word of words) {\n    let i = rec_input.length;\n    let o = output.length;\n    if (i === cursor_initial) {\n      cursor_final = o;\n    }\n    if (word.length === 0) {\n      continue;\n    }\n\n    if (i !== 0 && !/\\s$/.test(output) && !/^\\s/.test(word)) {\n      add_word(\" \", \" \");\n      i = rec_input.length;\n      o = output.length;\n      if (i === cursor_initial) {\n        cursor_final = o;\n      }\n    }\n    if (/^\\s+$/.test(word)) {\n      add_word(word, word);\n      continue;\n    } else if (word.startsWith(\"\\n\")) {\n      add_word(\"\\n\", \"\\n\");\n      i = rec_input.length;\n      o = output.length;\n      if (i === cursor_initial) {\n        cursor_final = o;\n      }\n      word = word.slice(1);\n    }\n\n    if (!new RegExp(`^[${WORD_CHARACTERS}]+$`, \"i\").test(word)) {\n      let str = word;\n      let cursor_in_this_word = cursor_word_start === i;\n      let cursor_index_in_this_word = cursor_index_in_word;\n      while (str.length > 0) {\n        const part = parse_word(str);\n        if (part.length) {\n          let new_part = part;\n          if (\n            !cursor_in_this_word ||\n            cursor_index_in_this_word > part.length ||\n            cursor_index_in_this_word === 0 ||\n            ignore_cursor\n          ) {\n            new_part = optimize_word(part, optimize_level);\n          }\n          if (cursor_in_this_word && cursor_index_in_this_word <= part.length) {\n            cursor_final =\n              o + Math.min(new_part.length, cursor_index_in_this_word);\n            cursor_in_this_word = false;\n          } else {\n            cursor_index_in_this_word -= part.length;\n          }\n          add_word(part, new_part);\n          i = rec_input.length;\n          o = output.length;\n          str = str.slice(part.length);\n        }\n        if (str.length === 0) {\n          continue;\n        }\n        const symbols = parse_symbol(str);\n        if (symbols.length) {\n          if (cursor_in_this_word) {\n            if (cursor_index_in_this_word < symbols.length) {\n              cursor_final = o + Math.min(symbols.length, cursor_index_in_word);\n            } else {\n              cursor_index_in_this_word -= symbols.length;\n            }\n          }\n          add_word(symbols, symbols);\n          i = rec_input.length;\n          o = output.length;\n          str = str.slice(symbols.length);\n        }\n      }\n    } else {\n      if (!ignore_cursor && cursor_word_start === i) {\n        add_word(word, word);\n        cursor_final = o + cursor_index_in_word;\n      } else {\n        const new_word = optimize_word(word, optimize_level);\n        if (cursor_word_start === i) {\n          cursor_final = o + Math.min(new_word.length, cursor_index_in_word);\n        }\n        add_word(word, new_word);\n      }\n    }\n  }\n\n  if (output.endsWith(\"  \")) {\n    output = output.slice(0, output.length - 1);\n  }\n  if (cursor_final === -1) {\n    cursor_final = output.length;\n  }\n  // if (space_at_start && )\n  // output = `${space_at_start ? \" \" : \"\"}${output}${space_at_end ? \" \" : \"\"}`\n  return [output, cursor_final, cursor_final] as const;\n};\n\nexport const optimize_selection = (\n  text: string,\n  input_ref: preact.RefObject<HTMLTextAreaElement>,\n  trigger: OptimizeTrigger,\n  settings: TTS.EditorSettings\n): readonly [string, number, number] => {\n  let { selectionStart = -1, selectionEnd = -1 } = input_ref.current || {};\n  const text_before = text.slice(0, selectionStart);\n  let input = text.slice(selectionStart, selectionEnd);\n  const text_after = text.slice(selectionEnd);\n\n  const [text_trimmed] = optimize_message_words(\n    input,\n    {\n      current: {\n        ...input_ref.current,\n        selectionStart: 0,\n        selectionEnd: input.length,\n      },\n    },\n    trigger,\n    settings\n  );\n  const [output] = optimize_whitespace(\n    text_trimmed,\n    {\n      current: {\n        ...input_ref.current,\n        selectionStart: 0,\n        selectionEnd: text_trimmed.length,\n      },\n    },\n    trigger\n  );\n\n  input = trim_duplicate_whitespace(input);\n  const first_non_space = get_first_char(input);\n  const space_at_start = /^\\s/i.test(input) && first_non_space > 0;\n  const newline_at_start = input.slice(0, first_non_space).includes(\"\\n\");\n\n  const last_non_space = get_last_char(input);\n  const space_at_end = /\\s$/i.test(input) && last_non_space > 0;\n  const newline_at_end = input.slice(last_non_space).includes(\"\\n\");\n\n  const space_before =\n    space_at_start &&\n    (text_before.length === 0 ||\n      (newline_at_start\n        ? text_before.slice(-1) !== \"\\n\"\n        : !space_can_be_removed(text_before, output)));\n  const newline_before = space_before && input[0] === \"\\n\";\n  const space_after =\n    space_at_end &&\n    (text_after.length === 0 ||\n      (newline_at_end\n        ? text_after[0] !== \"\\n\"\n        : !space_can_be_removed(text_trimmed, output)));\n  const newline_after = space_after && input.slice(-1) === \"\\n\";\n\n  const output_ = `${text_before}${\n    space_before ? (newline_before ? \"\\n\" : \" \") : \"\"\n  }${output}${space_after ? (newline_after ? \"\\n\" : \" \") : \"\"}`;\n  return [`${output_}${text_after}`, selectionStart, output_.length];\n};\n\nexport const optimize_message = (\n  text: string,\n  input_ref: preact.RefObject<HTMLTextAreaElement>,\n  trigger: OptimizeTrigger,\n  settings: TTS.EditorSettings\n): readonly [string, number, number] => {\n  const { optimize_words, trim_whitespace } = settings;\n  let { selectionStart = -1, selectionEnd = -1 } = input_ref.current || {};\n  const should_optimize_words = trigger <= optimize_words;\n  if (\n    !should_optimize_words ||\n    !text ||\n    (selectionStart !== selectionEnd && trigger !== OptimizeTrigger.manual)\n  ) {\n    if (text && trim_whitespace && trigger <= OptimizeTrigger.blur) {\n      return trim_excess_whitespace(text, input_ref);\n    }\n    return [text, selectionStart, selectionEnd] as const;\n  }\n\n  if (selectionStart !== selectionEnd) {\n    return optimize_selection(text, input_ref, trigger, settings);\n  }\n\n  let [text_trimmed, cursor_start, cursor_end] = optimize_message_words(\n    text,\n    input_ref,\n    trigger,\n    settings\n  );\n  return optimize_whitespace(\n    text_trimmed,\n    {\n      current: {\n        ...input_ref.current,\n        selectionStart: cursor_start,\n        selectionEnd: cursor_end,\n      },\n    },\n    trigger\n  );\n};\n","export * from \"./common\";\nexport * from \"./dom-helpers\";\nexport * from \"./filter-on-regex\";\nexport * from \"./hooks\";\nexport * from \"./optimize\";\nexport * from \"./optimize-transforms\";\n","import * as Preact from \"preact\";\nimport { PureComponent } from \"preact/compat\";\nimport * as hooks from \"preact/hooks\";\nimport { useEffect } from \"preact/hooks\";\nimport { do_confirm } from \"~/common\";\nimport * as storage from \"~/common\";\nimport {\n  ADD_SNIPPET_CALLBACK,\n  EDIT_MSG_TARGET,\n  EDITOR_SETTINGS,\n  EDITOR_STATE,\n  EDITOR_UNSAVED,\n  HELP_COMPLETED,\n  HELP_ITEM,\n  ImmutableContextValue,\n  INITIAL_STATE,\n  IS_OPTIMIZED,\n  LOADED_MESSAGE,\n  MESSAGE_CATEGORIES,\n  MESSAGES,\n  OPTIMIZE_MESSAGE_CALLBACK,\n  SNIPPETS,\n  UNCATEGORIZED_MESSAGES,\n  SNIPPETS_SECTIONS,\n  VOLUME_CTX,\n} from \"~/model\";\nimport {\n  get_uncategorized_messages,\n  useContextState,\n  useOptimizeMessage,\n  useStateRef,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst CONTEXTS = {\n  VOLUME_CTX: {\n    context: VOLUME_CTX,\n    initialValue: INITIAL_STATE.volume,\n  },\n  EDITOR_STATE: {\n    context: EDITOR_STATE,\n    initialValue: INITIAL_STATE.editor,\n  },\n  EDITOR_SETTINGS: {\n    context: EDITOR_SETTINGS,\n    initialValue: INITIAL_STATE.settings,\n  },\n  EDITOR_UNSAVED: {\n    context: EDITOR_UNSAVED,\n    initialValue: true,\n  },\n  EDIT_MSG_TARGET: {\n    context: EDIT_MSG_TARGET,\n    initialValue: undefined,\n  },\n  ADD_SNIPPET_CALLBACK: {\n    context: ADD_SNIPPET_CALLBACK,\n    initialValue: () => {},\n  },\n  OPTIMIZE_MESSAGE_CALLBACK: {\n    context: OPTIMIZE_MESSAGE_CALLBACK,\n    initialValue: () => {},\n  },\n  MESSAGES: {\n    context: MESSAGES,\n    initialValue: INITIAL_STATE.messages,\n  },\n  MESSAGE_CATEGORIES: {\n    context: MESSAGE_CATEGORIES,\n    initialValue: INITIAL_STATE.message_categories,\n  },\n  UNCATEGORIZED_MESSAGES: {\n    context: UNCATEGORIZED_MESSAGES,\n    initialValue: INITIAL_STATE.uncategorized_msgs,\n  },\n  SNIPPETS: {\n    context: SNIPPETS,\n    initialValue: INITIAL_STATE.snippets,\n  },\n  SNIPPETS_SECTIONS: {\n    context: SNIPPETS_SECTIONS,\n    initialValue: INITIAL_STATE.snippets_sections,\n  },\n  HELP_ITEM: {\n    context: HELP_ITEM,\n    initialValue: null,\n  },\n  HELP_COMPLETED: {\n    context: HELP_COMPLETED,\n    initialValue: INITIAL_STATE.help,\n  },\n} as const;\n\ntype Contexts = typeof CONTEXTS;\ntype ContextValue<K extends keyof Contexts> =\n  Contexts[K][\"context\"] extends Preact.Context<\n    ImmutableContextValue<infer T, infer S>\n  >\n    ? T\n    : any;\ntype ContextSetter<K extends keyof Contexts> =\n  Contexts[K][\"context\"] extends Preact.Context<\n    ImmutableContextValue<infer T, infer S>\n  >\n    ? S\n    : any;\n\nexport class WithGlobalContexts extends PureComponent {\n  constructor(props) {\n    super(props);\n    // @ts-expect-error:\n    this._state = {};\n    // @ts-expect-error:\n    this._setters = {};\n    // @ts-expect-error:\n    this._ctx_values = {};\n    Object.entries(CONTEXTS).forEach(([key, { context, initialValue }]) => {\n      this._state[key] = initialValue;\n      this._setters[key] = this.createSetter(key as keyof Contexts);\n      this._ctx_values[key] = new ImmutableContextValue(\n        this._state[key],\n        this._setters[key]\n      );\n    });\n  }\n  mounted: boolean = false;\n  _state: { [K in keyof Contexts]: ContextValue<K> };\n  _setters: { [K in keyof Contexts]: ContextSetter<K> };\n  _ctx_values: {\n    [K in keyof Contexts]: ImmutableContextValue<\n      ContextValue<K>,\n      ContextSetter<K>\n    >;\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSetter = <K extends keyof Contexts>(key: K): ContextSetter<K> =>\n    (s => {\n      const cur_value = this._state[key];\n      const new_value: ContextValue<K> =\n        typeof s === \"function\" ? s(cur_value) : s;\n      if (cur_value !== new_value) {\n        // @ts-expect-error:\n        this._state[key] = new_value;\n        // @ts-expect-error:\n        this._ctx_values[key] = new ImmutableContextValue(\n          new_value,\n          this._setters[key] as ContextSetter<K>\n        );\n        if (this.mounted) {\n          this.forceUpdate();\n        }\n      }\n    }) as ContextSetter<K>;\n\n  render() {\n    const { children } = this.props;\n    return (\n      <Preact.Fragment>\n        {Object.entries(CONTEXTS).reduce((prev, [key, spec]) => {\n          const { Provider } = spec.context;\n          return (\n            // @ts-expect-error:\n            <Provider context={spec.context} value={this._ctx_values[key]}>\n              {prev}\n            </Provider>\n          );\n        }, children)}\n      </Preact.Fragment>\n    );\n  }\n}\n\nexport const WithContextHooks: Preact.FunctionComponent = ({ children }) => {\n  const messages = hooks.useContext(MESSAGES).value;\n  const categories = hooks.useContext(MESSAGE_CATEGORIES).value;\n  const [uncategorized, set_uncat_msgs] = useContextState(\n    UNCATEGORIZED_MESSAGES\n  );\n  const snippets = hooks.useContext(SNIPPETS).value;\n  const sections = hooks.useContext(SNIPPETS_SECTIONS).value;\n  const volume = hooks.useContext(VOLUME_CTX).value;\n  const editor_state = hooks.useContext(EDITOR_STATE).value;\n  const editor_settings = hooks.useContext(EDITOR_SETTINGS).value;\n  const help_completed = hooks.useContext(HELP_COMPLETED).value;\n\n  const editor_unsaved = hooks.useContext(EDITOR_UNSAVED).value;\n  const [loaded_id, set_loaded_id, loaded_id_ref] = useStateRef(\n    INITIAL_STATE?.message ?? null\n  );\n  const editor_unsaved_ref = useValueRef(editor_unsaved);\n  const should_optimize = hooks.useRef<boolean>(false);\n  const load_message = hooks.useCallback(\n    (id: string | null, force?: boolean, passive?: boolean) => {\n      if (id !== null && typeof id !== \"string\") {\n        return false;\n      }\n      let discard = true;\n      if (editor_unsaved_ref.current && force !== true) {\n        discard = do_confirm(\"Are you sure you want to discard your changes?\");\n      }\n      if (discard) {\n        should_optimize.current = false;\n        const event: TTS.LoadMessageEvent = new CustomEvent(\"load-message\", {\n          detail: {\n            callback: () => set_loaded_id(id),\n            id: id,\n            prev_id: loaded_id_ref.current,\n            passive,\n          },\n        });\n        window.dispatchEvent(event);\n        return true;\n      }\n      return false;\n    },\n    []\n  );\n  const loaded_msg_ctx_value = hooks.useMemo(\n    () => new ImmutableContextValue(loaded_id, load_message),\n    [load_message, loaded_id]\n  );\n\n  const msgs_ref = useValueRef(messages);\n  const cats_ref = useValueRef(categories);\n  const uncat_ref = useValueRef(uncategorized);\n  const set_uncat_messages = hooks.useCallback(\n    (uncat: TTS.MessageCategory, new_categories?: TTS.MessageCategory[]) => {\n      const new_value = get_uncategorized_messages(\n        msgs_ref.current,\n        new_categories ?? cats_ref.current,\n        uncat\n      );\n      if (JSON.stringify(new_value) !== JSON.stringify(uncat_ref.current)) {\n        set_uncat_msgs(new_value);\n      }\n    },\n    [set_uncat_msgs]\n  );\n  const uncat_ctx_value = hooks.useMemo(\n    () => new ImmutableContextValue(uncategorized, set_uncat_messages),\n    [uncategorized, set_uncat_messages]\n  );\n\n  useEffect(() => {\n    storage.set_stored_state({\n      volume,\n      message: loaded_id,\n      editor: editor_state,\n      settings: editor_settings,\n    });\n  }, [volume, editor_state, loaded_id, editor_settings]);\n\n  useEffect(() => {\n    set_uncat_messages(uncat_ref.current);\n    storage.set_stored_messages(messages);\n  }, [messages]);\n\n  useEffect(() => {\n    set_uncat_messages(uncat_ref.current);\n    storage.set_stored_message_categories(categories);\n  }, [categories]);\n\n  useEffect(() => {\n    storage.set_stored_uncategorized_messages(uncategorized);\n  }, [uncategorized]);\n\n  useEffect(() => {\n    storage.set_stored_snippets(snippets);\n  }, [snippets]);\n\n  useEffect(() => {\n    storage.set_stored_snippets_sections(sections);\n  }, [sections]);\n\n  useEffect(() => {\n    storage.set_stored_help(help_completed);\n  }, [help_completed]);\n\n  const is_optimized = hooks.useRef(false);\n  const get_is_optimized = hooks.useCallback(() => is_optimized.current, []);\n  useEffect(() => {\n    if (editor_unsaved) {\n      should_optimize.current = true;\n    } else if (!should_optimize.current) {\n      setTimeout(() => {\n        should_optimize.current = true;\n      }, 1000);\n    }\n  }, [editor_unsaved]);\n  useOptimizeMessage(editor_settings, is_optimized, should_optimize);\n\n  return (\n    <UNCATEGORIZED_MESSAGES.Provider value={uncat_ctx_value}>\n      <IS_OPTIMIZED.Provider value={get_is_optimized}>\n        <LOADED_MESSAGE.Provider value={loaded_msg_ctx_value}>\n          {children}\n        </LOADED_MESSAGE.Provider>\n      </IS_OPTIMIZED.Provider>\n    </UNCATEGORIZED_MESSAGES.Provider>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\nimport { VOLUME_CTX } from \"~/model\";\nimport { maybeClassName, useContextState, useDebounce } from \"~/view/utils\";\n\nconst EMPTY_SRC =\n  \"data:audio/wav;base64,UklGRiUAAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQEAAACA\";\n\nexport const AudioPlayer: Preact.FunctionComponent<\n  {\n    data: string;\n  } & PropsOfElem<HTMLAudioElement>\n> = ({ id, data, className, ...props }) => {\n  const [volume, onChangeVolume] = useContextState(VOLUME_CTX);\n  const audio_ref = useRef<HTMLAudioElement>();\n  const set_volume_cb = useCallback(\n    e => {\n      if (e.target.volume !== volume) {\n        onChangeVolume?.(e.target.volume);\n      }\n    },\n    [onChangeVolume]\n  );\n  const [set_volume] = useDebounce(set_volume_cb);\n  useEffect(() => {\n    window.addEventListener(\"set-volume\", (e: CustomEvent) => {\n      if (audio_ref.current && e.detail != null) {\n        setTimeout(() => {\n          audio_ref.current.volume = e.detail;\n        }, 150);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      audio_ref.current &&\n      volume != null &&\n      volume !== audio_ref.current?.volume\n    ) {\n      const ev = new CustomEvent(\"set-volume\", {\n        detail: volume,\n        bubbles: true,\n      });\n      window.dispatchEvent(ev);\n    }\n  }, [volume]);\n\n  return (\n    <div className={`tts-player${maybeClassName(className)}`}>\n      <audio\n        ref={audio_ref}\n        id={id ? `${id}-audio` : \"audio\"}\n        controls={true}\n        onVolumeChange={set_volume}\n        {...props}\n      >\n        <source\n          id={id ? `${id}-source` : \"source\"}\n          type=\"audio/wav\"\n          src={data || EMPTY_SRC}\n        />\n      </audio>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { classNamesWithSuffix } from \"~/view/utils\";\n\nexport const Category: Preact.FunctionComponent<\n  {\n    title: string;\n    controls?: Preact.ComponentChildren;\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    toggleOnClickTitle?: boolean;\n  } & Omit<HTMLDivProps, \"title\" | \"controls\" | \"open\">\n> = ({\n  title,\n  controls,\n  open,\n  setOpen,\n  className,\n  onClick,\n  children,\n  toggleOnClickTitle = true,\n  ...props\n}) => {\n  const toggle = e => {\n    setOpen(!open);\n    // @ts-expect-error:\n    onClick?.(e);\n  };\n  const class_names = (suffix: string) =>\n    classNamesWithSuffix(suffix, \"category\", ...className.split(\" \"));\n  return (\n    <div className={class_names(\"\")} data-open={`${open}`}>\n      <div className={class_names(\"-header\")} {...props}>\n        <div\n          className={class_names(\"-title\")}\n          data-toggle={`${toggleOnClickTitle}`}\n          onClick={toggleOnClickTitle ? toggle : undefined}\n        >\n          <button\n            className={`${class_names(\"-expand\")} icon-button`}\n            onClick={toggleOnClickTitle ? undefined : toggle}\n            onMouseDown={\n              toggleOnClickTitle\n                ? undefined\n                : e => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                  }\n            }\n          >\n            {open ? (\n              <i className=\"fas fa-chevron-down\" />\n            ) : (\n              <i className=\"fas fa-chevron-right\" />\n            )}\n          </button>\n          <span>{title}</span>\n        </div>\n        {controls && <div className=\"category-header-controls\">{controls}</div>}\n      </div>\n      <div className={class_names(\"-content\")}>{children}</div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { forwardRef } from \"preact/compat\";\nimport { maybeClassName } from \"~/view/utils\";\n\nexport type CheckboxProps = { label?: Preact.ComponentChildren } & Omit<\n  HTMLInputProps,\n  \"ref\" | \"type\"\n>;\nexport const Checkbox: Preact.FunctionComponent<CheckboxProps> = forwardRef<\n  HTMLInputElement,\n  CheckboxProps\n>(({ label, className, children, ...props }, ref) => (\n  <label className={`checkbox${maybeClassName(className)}`}>\n    <input ref={ref} type=\"checkbox\" className=\"checkbox-input\" {...props} />\n    {(label || children) && (\n      <span className=\"checkbox-label\">{label || children}</span>\n    )}\n  </label>\n));\n","import * as Preact from \"preact\";\nimport { useCopyToClipboard, useTempAnimation } from \"~/view/utils\";\n\nexport const ClipboardButton: Preact.FunctionComponent<{\n  id?: string;\n  text: string;\n  disabled?: boolean;\n  className?: string;\n}> = ({ id, text, disabled, className }) => {\n  const [anim_active, trigger_anim, set_active] = useTempAnimation(2000);\n  const copy = useCopyToClipboard(text, id);\n  return (\n    <button\n      id={`tts-clipboard-button${id ? `-${id}` : \"\"}`}\n      className={`btn tts-clipboard-button${className ? ` ${className}` : \"\"}`}\n      data-success={`${anim_active}`}\n      disabled={disabled}\n      onMouseDown={() => set_active(false)}\n      onClick={() =>\n        copy()\n          .then(trigger_anim)\n          .catch(() => {\n            console.error(`Failed to copy text to clipboard.`);\n          })\n      }\n    >\n      <div className=\"tts-clipboard-button-inner\">\n        <i className=\"fas fa-copy\" />\n        Copy to Clipboard\n      </div>\n    </button>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\nimport { replace_item_in } from \"~/common\";\nimport { Checkbox } from \"~/view/components\";\nimport { useMemoRef, useValueRef } from \"~/view/utils\";\n\nexport const ExpandableChecklist = <T extends any>({\n  items,\n  onChange,\n  label,\n  allowCheckAll = true,\n  parent,\n}: Preact.RenderableProps<ExpandableChecklistProps<T>>) => {\n  const parent_ref = useValueRef(parent);\n  const on_change = useCallback(\n    (n_items: ExpandableChecklistItem<T>[]) =>\n      onChange(n_items, parent_ref.current),\n    [onChange]\n  );\n\n  const [\n    check_all_ref,\n    all_selected,\n    on_check,\n    on_check_all,\n    on_change_nested,\n  ] = useChecklist(items, on_change, allowCheckAll);\n\n  return (\n    <details className=\"expandable-checklist\">\n      <summary className=\"expandable-checklist-label\">\n        {allowCheckAll && (\n          <Checkbox\n            ref={check_all_ref}\n            checked={all_selected}\n            onInput={() => on_check_all()}\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          />\n        )}\n        <span className=\"checkbox-label\">{label}</span>\n      </summary>\n      <ul className=\"expandable-checklist-items\">\n        {items.map(item => {\n          const { Render, key, selected, data } = item;\n          return (\n            <li key={key} className=\"expandable-checklist-item\">\n              {Array.isArray(selected) ? (\n                <ExpandableChecklist\n                  key={key}\n                  items={selected}\n                  label={<Render data={data} />}\n                  onChange={on_change_nested}\n                  parent={item}\n                />\n              ) : (\n                <Checkbox checked={selected} onInput={() => on_check(item)}>\n                  {<Render data={data} />}\n                </Checkbox>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </details>\n  );\n};\n\nconst all_are_selected = <T extends any>(\n  items: ExpandableChecklistItem<T>[]\n): boolean =>\n  items.every(i =>\n    Array.isArray(i.selected) ? all_are_selected(i.selected) : i.selected\n  );\n\nconst none_are_selected = <T extends any>(\n  items: ExpandableChecklistItem<T>[]\n): boolean =>\n  items.every(i =>\n    Array.isArray(i.selected) ? none_are_selected(i.selected) : !i.selected\n  );\n\nconst check_all_recursive = <T extends any>(\n  items: ExpandableChecklistItem<T>[],\n  checked: boolean\n): ExpandableChecklistItem<T>[] =>\n  // @ts-expect-error:\n  items.map(i => ({\n    ...i,\n    selected: Array.isArray(i.selected)\n      ? check_all_recursive(\n          i.selected as ExpandableChecklistItem<any>[],\n          checked\n        )\n      : checked,\n  }));\n\nconst useChecklist = <T extends any, N extends T[]>(\n  items: ExpandableChecklistItem<T>[],\n  onChange: (items: ExpandableChecklistItem<T>[]) => void,\n  allowCheckAll: boolean\n) => {\n  const check_all_ref = useRef<HTMLInputElement>();\n  const items_ref = useValueRef(items);\n\n  const all_selected = useMemoRef(\n    () => (allowCheckAll ? all_are_selected(items) : false),\n    [items, allowCheckAll]\n  );\n\n  const none_selected = useMemoRef(\n    () => (allowCheckAll ? none_are_selected(items) : false),\n    [items, allowCheckAll]\n  );\n\n  useEffect(() => {\n    if (check_all_ref.current) {\n      check_all_ref.current.indeterminate =\n        !all_selected.current && !none_selected.current;\n    }\n  }, [all_selected.current, none_selected.current]);\n\n  const on_check = useCallback(\n    (item: ExpandableChecklistItem<T>) =>\n      !Array.isArray(item.selected)\n        ? onChange(\n            // @ts-expect-error:\n            replace_item_in(items_ref.current, i => i.key === item.key, {\n              ...item,\n              selected: !item.selected,\n            })\n          )\n        : undefined,\n    [onChange]\n  );\n\n  const on_check_all = useCallback(\n    () =>\n      onChange(\n        check_all_recursive(\n          items_ref.current,\n          !none_selected.current ? !all_selected.current : true\n        )\n      ),\n    [onChange]\n  );\n\n  const on_change_nested = useCallback(\n    (\n      n_items: ExpandableChecklistItem<any>[],\n      parent: ExpandableChecklistItem<T>\n    ) => {\n      return parent\n        ? onChange(\n            replace_item_in(items_ref.current, i => i.key === parent.key, {\n              ...parent,\n              // @ts-expect-error:\n              selected: n_items,\n            })\n          )\n        : onChange(n_items);\n    },\n\n    [onChange]\n  );\n\n  return [\n    check_all_ref,\n    !none_selected.current,\n    on_check,\n    on_check_all,\n    on_change_nested,\n  ] as const;\n};\n","import * as Preact from \"preact\";\nimport { createPortal } from \"preact/compat\";\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport { do_confirm } from \"~/common\";\nimport { ImmutableContextValue, MODAL_DIRTY } from \"~/model\";\nimport {\n  getFirstFocusable,\n  maybeClassName,\n  useStateRef,\n  useValueRef,\n} from \"~/view/utils\";\n\nexport const Modal: Preact.FunctionComponent<\n  {\n    dismiss?: () => void;\n    closeOnClickBackdrop?: boolean;\n    backdropData?: object;\n  } & HTMLDivProps\n> = ({\n  className,\n  id,\n  dismiss,\n  closeOnClickBackdrop = true,\n  children,\n  backdropData,\n  ...props\n}) => {\n  const modal_ref = useRef<HTMLDivElement>();\n  const mounted = useRef(false);\n  const silent = useRef(false);\n  const on_focus = useCallback(e => {\n    if (\n      mounted.current &&\n      (!(e.target instanceof Node) || !modal_ref.current?.contains(e.target))\n    ) {\n      e.stopPropagation();\n      if (!silent.current) {\n        silent.current = true;\n        getFirstFocusable(modal_ref.current)?.focus();\n        silent.current = false;\n      }\n    }\n  }, []);\n\n  useLayoutEffect(() => {\n    mounted.current = true;\n    getFirstFocusable(modal_ref.current)?.focus();\n    window.addEventListener(\"focus\", on_focus, { capture: true });\n    return () => {\n      window.removeEventListener(\"focus\", on_focus, { capture: true });\n      mounted.current = false;\n    };\n  }, []);\n\n  const listener = useCallback(e => {\n    if (e.key === \"Escape\") {\n      e.stopPropagation();\n      e.preventDefault();\n      dismiss();\n    }\n  }, []);\n  useEffect(() => {\n    const root = document.getElementById(\"app\");\n    root?.setAttribute(\"data-modal-open\", \"true\");\n    const capture = document.querySelectorAll(\".modal-backdrop\").length > 1;\n    if (closeOnClickBackdrop) {\n      window.addEventListener(\"keydown\", listener, { capture });\n    }\n    return () => {\n      window.removeEventListener(\"keydown\", listener, { capture });\n      if (document.querySelectorAll(\".modal-backdrop\").length === 1) {\n        root?.removeAttribute(\"data-modal-open\");\n      }\n    };\n  }, [listener]);\n\n  return (\n    <div\n      className=\"modal-backdrop\"\n      onClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        if (closeOnClickBackdrop) {\n          dismiss();\n        }\n      }}\n      {...backdropData}\n    >\n      <div\n        id={id}\n        ref={modal_ref}\n        className={`modal${maybeClassName(className)}`}\n        onClick={e => {\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }}\n        {...props}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport const ModalHeader: Preact.FunctionComponent<{\n  dismiss: () => void;\n  showCloseButton?: boolean;\n}> = ({ children, dismiss, showCloseButton = true }) => {\n  const has_children = useMemo(\n    () =>\n      !!children &&\n      (!Array.isArray(children) ||\n        children.some(c => c != null && c !== false && c !== \"\")),\n    [children]\n  );\n  if (!has_children && !showCloseButton) {\n    return null;\n  }\n  return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{children}</div>\n      {showCloseButton && (\n        <button className=\"icon-button modal-close\" onClick={dismiss}>\n          <i className=\"fas fa-times\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport const useModal = (\n  container_selector: string = \"#modal-container\",\n  dismiss_message?: string\n) => {\n  const container = useValueRef(document.querySelector(container_selector));\n  const [dirty, set_dirty, dirty_ref] = useStateRef<boolean>(false);\n  const [open, set_open, open_ref] = useStateRef<boolean>(false);\n  const modal_dirty_ctx = useMemo(\n    () => new ImmutableContextValue(dirty, set_dirty),\n    [dirty, set_dirty]\n  );\n\n  const toggle_modal = useCallback((should_open: boolean) => {\n    if (should_open || !dirty_ref.current) {\n      set_open(should_open);\n      return true;\n    } else if (do_confirm(dismiss_message ?? \"Discard changes?\")) {\n      set_dirty(false);\n      set_open(false);\n      return true;\n    }\n    return false;\n  }, []);\n\n  const content = useCallback(\n    (props: Preact.RenderableProps<{}>) =>\n      open_ref.current && container.current\n        ? createPortal(\n            <MODAL_DIRTY.Provider value={modal_dirty_ctx}>\n              {props.children}\n            </MODAL_DIRTY.Provider>,\n            container.current\n          )\n        : null,\n    []\n  );\n\n  return [content, toggle_modal, open] as const;\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo } from \"preact/hooks\";\nimport { replace_item_in } from \"~/common\";\nimport { Category } from \"~/view/components\";\nimport {\n  classNamesWithSuffix,\n  useDragReorder,\n  useDragToOpen,\n  useStateIfMounted,\n  useStateRef,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst prevent_default = e => e.preventDefault();\n\nconst OrganizerSectionControls = <T extends any>({\n  index,\n  target,\n  grabbed,\n  onDragEnter,\n  disabled,\n}: Preact.RenderableProps<{\n  index: number;\n  grabbed: OrganizerGrabbedItem<T | OrganizerSectionSpec<T>> | null;\n  target: OrganizerIndex | null;\n  onDragEnter: (section: number) => (e) => void;\n  disabled?: boolean;\n}>) => {\n  const drag_index =\n    grabbed?.type !== \"section\" || index >= grabbed.section_index\n      ? index\n      : index + 1;\n  return disabled ? null : (\n    <Preact.Fragment>\n      {index === 0 && grabbed?.type === \"section\" && (\n        <div\n          data-type=\"section\"\n          data-before=\"true\"\n          data-active={`${\n            target?.section === 0 && grabbed?.section_index !== 0\n          }`}\n          className=\"organizer-reorder-area\"\n          onDragOver={prevent_default}\n          onDragEnter={onDragEnter(0)}\n        />\n      )}\n      <div className=\"icon-button organizer-section-reorder-button\">\n        <i className=\"fas fa-grip-lines\" />\n      </div>\n      <div\n        data-type=\"section\"\n        data-active={`${\n          target?.section === drag_index &&\n          grabbed?.section_index !== drag_index\n        }`}\n        className=\"organizer-reorder-area\"\n        onDragEnter={onDragEnter(drag_index)}\n        onDragOver={prevent_default}\n      />\n    </Preact.Fragment>\n  );\n};\n\nconst OrganizerItem = <T extends any>({\n  className,\n  reorderEnabled,\n  index,\n  item,\n  sectionIndex,\n  grabbed,\n  setGrabbed,\n  target,\n  onDragEnter,\n  children,\n}: Preact.RenderableProps<{\n  className: string;\n  reorderEnabled: boolean;\n  item: T;\n  index: number;\n  sectionIndex: number;\n  grabbed: OrganizerGrabbedItem<T | OrganizerSectionSpec<T>> | null;\n  setGrabbed: (item: OrganizerGrabbedItem<T> | null) => void;\n  target: OrganizerIndex | null;\n  onDragEnter: (section: number, item: number) => (e) => void;\n}>) => {\n  const grabbed_is_item = grabbed?.type === \"item\";\n  const drag_index =\n    grabbed_is_item &&\n    sectionIndex === grabbed.section_index &&\n    index >= grabbed.item_index\n      ? index\n      : index + 1;\n  const will_move =\n    grabbed_is_item &&\n    (sectionIndex !== grabbed.section_index ||\n      (index !== grabbed.item_index && drag_index !== grabbed.item_index));\n  return (\n    <div\n      className={className}\n      draggable={reorderEnabled}\n      {...(reorderEnabled\n        ? {\n            onMouseDown: e => {\n              e.stopPropagation();\n              setGrabbed({\n                type: \"item\",\n                value: item,\n                item_index: index,\n                section_index: sectionIndex,\n              });\n            },\n            \"data-grabbed\": `${\n              grabbed_is_item &&\n              grabbed.section_index === sectionIndex &&\n              grabbed.item_index == index\n            }`,\n          }\n        : {})}\n    >\n      {reorderEnabled && index === 0 && grabbed?.type === \"item\" && (\n        <div\n          data-type=\"item\"\n          data-before=\"true\"\n          data-active={`${\n            grabbed_is_item &&\n            (sectionIndex !== grabbed.section_index ||\n              grabbed.item_index !== 0) &&\n            target?.section === sectionIndex &&\n            target?.item === 0\n          }`}\n          className=\"organizer-reorder-area\"\n          onDragEnter={onDragEnter(sectionIndex, 0)}\n          onDragOver={prevent_default}\n        />\n      )}\n      {children}\n      {reorderEnabled && (\n        <div\n          data-type=\"item\"\n          data-active={`${\n            will_move &&\n            target?.section === sectionIndex &&\n            target?.item === drag_index\n          }`}\n          className=\"organizer-reorder-area\"\n          onDragEnter={onDragEnter(sectionIndex, drag_index)}\n          onDragOver={prevent_default}\n        />\n      )}\n    </div>\n  );\n};\n\nconst OrganizerBase = <T extends any>({\n  RenderHeader,\n  RenderSectionHeaderControls,\n  RenderSectionExtras,\n  RenderItem,\n  getSectionHeaderProps,\n  getItemKey,\n  sections,\n  updateSections,\n  reorderEnabled,\n  setReorderEnabled,\n  cancel,\n  save,\n  openSections,\n  setOpen,\n  className,\n}: Preact.RenderableProps<OrganizerBaseProps<T>>): Preact.VNode | null => {\n  const sections_ref = useValueRef(sections);\n  const update_section = useCallback(\n    (name: string, value: OrganizerSectionSpec<T>) => {\n      updateSections(\n        replace_item_in(sections_ref.current, c => c.name === name, value)\n      );\n      setOpen(name, value.open);\n    },\n    [updateSections]\n  );\n\n  const class_names = useCallback(\n    (suffix: string) => classNamesWithSuffix(suffix, \"organizer\", className),\n    [className]\n  );\n\n  const [\n    grabbed,\n    set_grabbed,\n    target_index,\n    get_section_props,\n    all_closed,\n    on_drag_over_section,\n    on_drag_over_item,\n    on_drop,\n  ] = useDragReorder(sections_ref, updateSections);\n\n  const [on_drag_enter_section, on_drag_leave_section] = useDragToOpen(\n    openSections,\n    setOpen,\n    grabbed\n  );\n\n  return (\n    <div\n      className={class_names(\"\")}\n      onDropCapture={on_drop}\n      data-reorder={`${reorderEnabled}`}\n    >\n      <RenderHeader\n        className={class_names(\"-header\")}\n        buttons={\n          reorderEnabled ? (\n            <Preact.Fragment>\n              <button className=\"btn\" onClick={cancel}>\n                Cancel\n              </button>\n              <button className=\"btn btn-primary\" onClick={save}>\n                Save\n              </button>\n            </Preact.Fragment>\n          ) : (\n            <button\n              className=\"icon-button organizer-reorder-button\"\n              onClick={() => setReorderEnabled(true)}\n              title=\"Organize this list\"\n              data-help=\"organize\"\n            >\n              <i class=\"fas fa-sort\" />\n            </button>\n          )\n        }\n        reorderEnabled={reorderEnabled}\n      />\n      <div\n        className={class_names(\"-list\")}\n        data-reorder={`${reorderEnabled}`}\n        data-item-grabbed={`${!!grabbed}`}\n        data-grabbed-type={grabbed?.type}\n        data-target-is-section={`${\n          grabbed?.type === \"item\" && target_index?.item == null\n        }`}\n      >\n        {sections.map((s, i) => {\n          const force_open = reorderEnabled\n            ? openSections[s.name] && !s.open\n            : false;\n          const ext_props = getSectionHeaderProps(s);\n          return (\n            <div\n              key={s.name}\n              className={class_names(\"-section-container\")}\n              {...(grabbed?.type === \"item\"\n                ? {\n                    onDragEnterCapture: on_drag_enter_section(s, i),\n                    onDragLeaveCapture: on_drag_leave_section(s, i),\n                    onDragOverCapture: prevent_default,\n                  }\n                : {})}\n            >\n              <Category\n                className={class_names(\"-section\")}\n                title={s.name}\n                open={\n                  (grabbed?.type === \"section\" &&\n                    grabbed?.section_index === i) ||\n                  all_closed\n                    ? false\n                    : force_open || s.open\n                }\n                setOpen={\n                  grabbed\n                    ? () => {}\n                    : force_open\n                    ? () => setOpen(s.name, false)\n                    : () => update_section(s.name, { ...s, open: !s.open })\n                }\n                toggleOnClickTitle={!reorderEnabled}\n                controls={\n                  reorderEnabled ? (\n                    <OrganizerSectionControls\n                      index={i}\n                      target={target_index}\n                      grabbed={grabbed}\n                      onDragEnter={on_drag_over_section}\n                      disabled={\n                        grabbed?.type === \"section\" &&\n                        ext_props?.draggable === false\n                      }\n                    />\n                  ) : (\n                    <RenderSectionHeaderControls section={s} index={i} />\n                  )\n                }\n                {...(reorderEnabled ? get_section_props(s, i) : {})}\n                draggable={reorderEnabled}\n                {...ext_props}\n              >\n                {s.data.map((item, j) => {\n                  const key = getItemKey(s, item, j);\n                  return (\n                    <OrganizerItem\n                      className={class_names(\"-section-item\")}\n                      reorderEnabled={reorderEnabled}\n                      item={item}\n                      index={j}\n                      sectionIndex={i}\n                      grabbed={grabbed}\n                      setGrabbed={set_grabbed}\n                      target={target_index}\n                      onDragEnter={on_drag_over_item}\n                    >\n                      <RenderItem\n                        key={key}\n                        data={item}\n                        reorderEnabled={reorderEnabled}\n                        buttons={\n                          reorderEnabled ? (\n                            <button className=\"btn icon-button\">\n                              <i class=\"fas fa-grip-lines\" />\n                            </button>\n                          ) : null\n                        }\n                      />\n                    </OrganizerItem>\n                  );\n                })}\n                {RenderSectionExtras && (\n                  <RenderSectionExtras section={s} id={s.name} />\n                )}\n              </Category>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport const Organizer = <T extends any>(\n  props: Preact.RenderableProps<OrganizerProps<T>>\n): Preact.VNode | null => {\n  const { sections, updateSections, reorderEnabled, setReorderEnabled } = props;\n  const [state, set_state] = useStateIfMounted(sections);\n  const opened = useMemo(() => {\n    let opened_: { [key: string]: boolean } = {};\n    sections.forEach(s => {\n      opened_[s.name] = s.open;\n    });\n    return opened_;\n  }, [sections]);\n  const [vis_open, set_vis_open, vis_open_ref] = useStateRef(opened);\n  const set_section_open = useCallback((name: string, open: boolean) => {\n    set_vis_open({ ...vis_open_ref.current, [name]: open });\n  }, []);\n\n  const cancel = useCallback(() => {\n    set_state(sections);\n    setReorderEnabled(false);\n  }, [sections]);\n\n  const save = useCallback(() => {\n    updateSections(state);\n    setReorderEnabled(false);\n  }, [state, updateSections]);\n\n  useEffect(() => {\n    set_state(sections);\n    set_vis_open(opened);\n  }, [sections]);\n\n  return (\n    <OrganizerBase\n      {...props}\n      sections={reorderEnabled ? state : sections}\n      updateSections={reorderEnabled ? set_state : updateSections}\n      setOpen={set_section_open}\n      openSections={vis_open}\n      cancel={cancel}\n      save={save}\n    />\n  );\n};\n","import * as Preact from \"preact\";\n\nexport const StatusIndicator: Preact.FunctionComponent<{\n  status: TTS.RequestStatus;\n}> = ({ status }) => (\n  <div className=\"tts-submit-status\">\n    {status.pending ? (\n      <i className=\"fas fa-circle-notch\" />\n    ) : status.success ? (\n      <i className=\"fas fa-check-circle\" />\n    ) : status.error ? (\n      <i className=\"fas fa-exclamation-circle\" />\n    ) : null}\n  </div>\n);\n","import * as Preact from \"preact\";\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport { comparator, replace_item_in } from \"~/common\";\nimport { createNamedContext } from \"~/model\";\nimport {\n  useDebounce,\n  useStateIfMounted,\n  useValueRef,\n  filter_options_with_score,\n} from \"~/view/utils\";\n\nexport const SEARCH_BAR = createNamedContext<string>(\"\", \"SearchBarState\");\n\nexport const SearchBar: Preact.FunctionComponent = () => {\n  const { value, setValue } = useContext(SEARCH_BAR);\n  const input_ref = useRef<HTMLInputElement>();\n  const btn_ref = useRef<HTMLButtonElement>();\n  const [text, set_text] = useStateIfMounted(value);\n  const [active, set_active] = useStateIfMounted(!!value);\n  const [update_value, cancel_update] = useDebounce(setValue, 150);\n  const on_change = useCallback(\n    e => {\n      const new_text = e.currentTarget.value;\n      set_text(new_text);\n      update_value(new_text);\n    },\n    [update_value]\n  );\n\n  const on_clear = useCallback(() => {\n    cancel_update();\n    set_text(\"\");\n    setValue(\"\");\n    set_active(false);\n    input_ref.current?.blur();\n    btn_ref.current?.blur();\n  }, [cancel_update]);\n\n  return (\n    <div className=\"search-bar\" data-active={`${active}`}>\n      <button\n        className=\"icon-button search-bar-toggle\"\n        onClick={() => {\n          set_active(true);\n          input_ref.current?.focus();\n        }}\n      >\n        <i class=\"fas fa-search\" />\n      </button>\n      <input\n        ref={input_ref}\n        tabIndex={active ? 0 : -1}\n        className=\"search-bar-input\"\n        value={text}\n        onInput={on_change}\n        onBlur={() => {\n          if (!text) {\n            on_clear();\n          }\n        }}\n        onKeyDown={e => {\n          if (e.key === \"Escape\") {\n            e.preventDefault();\n            on_clear();\n          }\n        }}\n      />\n      <button\n        ref={btn_ref}\n        tabIndex={active ? 0 : -1}\n        className=\"icon-button search-bar-close\"\n        onClick={on_clear}\n        onFocus={() => {\n          if (!active) {\n            btn_ref.current?.blur();\n          }\n        }}\n      >\n        <i class=\"fas fa-times\" />\n      </button>\n    </div>\n  );\n};\n\nexport const useOrganizerSearch = <T extends { id: string }>(\n  items: T[],\n  sections: OrganizerSectionSpec<string>[],\n  uncategorized: OrganizerSectionSpec<string> | undefined,\n  inputs: string[] | null,\n  test_item: (item: T, regex: RegExp) => boolean\n) => {\n  const uncat_open = useValueRef(uncategorized?.open ?? true);\n  const open_all = useRef<boolean>(true);\n  useMemo(() => {\n    open_all.current = true;\n  }, [inputs]);\n\n  const items_results_raw = useMemo<ScoredMatch<T>[] | null>(() => {\n    if (!inputs || inputs.length === 0) {\n      return null;\n    }\n    const [first, ...results] = inputs.map(text =>\n      filter_options_with_score(text, items, test_item)\n    );\n\n    return results\n      .reduce(\n        (output, list) =>\n          !list\n            ? output\n            : list.reduce((cur_output, msg) => {\n                return !msg\n                  ? cur_output\n                  : replace_item_in(\n                      cur_output,\n                      m => m.opt.id === msg.opt.id,\n                      prev_value =>\n                        prev_value\n                          ? {\n                              ...prev_value,\n                              score: msg.score + (prev_value?.score ?? 0),\n                            }\n                          : msg,\n                      \"end\"\n                    );\n              }, output),\n        first\n      )\n      .sort(comparator(\"score\", \"desc\"));\n  }, [inputs, items]);\n\n  const sections_results = useMemo<\n    OrganizerSectionSpec<string>[] | null\n  >(() => {\n    if (!inputs || inputs.length === 0) {\n      return null;\n    }\n    const matches_in_cats = sections\n      .map(c => {\n        const items = c.data\n          .map(id => items_results_raw.find(o => o.opt.id === id))\n          .filter(_ => !!_);\n        const score = items.reduce(\n          (score, item) => score + (item?.score ?? 0),\n          0\n        );\n        return items.length === 0\n          ? null\n          : {\n              score,\n              opt: {\n                ...c,\n                open: open_all.current ? true : c.open,\n                data: items.map(m => m.opt.id),\n              },\n            };\n      })\n      .filter(_ => !!_);\n    const matched_cats = filter_options_with_score(\n      inputs[0],\n      sections,\n      (opt, regex) => regex.test(opt.name)\n    );\n\n    let results = matches_in_cats.reduce(\n      (results, item) =>\n        !item\n          ? results\n          : replace_item_in(\n              results,\n              c => c.opt.name === item.opt.name,\n              prev_value =>\n                prev_value\n                  ? {\n                      ...prev_value,\n                      score: prev_value.score + item.score,\n                    }\n                  : item,\n              \"end\"\n            ),\n      matched_cats\n    );\n\n    if (uncategorized) {\n      const uncat_items = items_results_raw.filter(\n        i => !results.some(c => c.opt.data.includes(i.opt.id))\n      );\n      if (uncat_items.length > 0) {\n      }\n      results = results.concat([\n        {\n          score: uncat_items.reduce(\n            (score, msg) => score + (msg?.score ?? 0),\n            0\n          ),\n          opt: {\n            name: uncategorized.name,\n            open: open_all.current ? true : uncat_open.current,\n            data: uncat_items.map(m => m.opt.id),\n          },\n        },\n      ]);\n    }\n\n    return results.sort(comparator(\"score\", \"desc\")).map(({ opt }) => opt);\n  }, [items_results_raw, inputs, sections, uncategorized]);\n\n  const items_results = useMemo<T[] | null>(\n    () => (items_results_raw ? items_results_raw.map(({ opt }) => opt) : null),\n    [items_results_raw]\n  );\n\n  useEffect(() => {\n    open_all.current = false;\n  }, [inputs]);\n\n  return [items_results, sections_results] as const;\n};\n","export * from \"./AudioPlayer\";\nexport * from \"./Category\";\nexport * from \"./Checkbox\";\nexport * from \"./ClipboardButton\";\nexport * from \"./ExpandableChecklist\";\nexport * from \"./Modal\";\nexport * from \"./Organizer\";\nexport * from \"./StatusIndicator\";\nexport * from \"./SearchBar\";\n","import * as Preact from \"preact\";\nimport { useStateIfMounted } from \"~/view/utils\";\nimport { useContext, useEffect } from \"preact/hooks\";\nimport { EDITOR_SETTINGS } from \"~/model\";\nimport { DEFAULT_BITS_STRING } from \"~/common\";\n\nexport const BitsInput: Preact.FunctionComponent<{\n  bits: string;\n  setBits: (bits: string) => void;\n}> = ({ bits, setBits }) => {\n  const default_str =\n    useContext(EDITOR_SETTINGS).value?.bits_string ?? DEFAULT_BITS_STRING;\n  const [enabled, set_enabled] = useStateIfMounted(!!bits);\n  const [value, set_value] = useStateIfMounted(bits || default_str);\n\n  useEffect(() => {\n    const on_reset = () => set_value(DEFAULT_BITS_STRING);\n    window.addEventListener(\"reset-message\", on_reset);\n    return () => window.removeEventListener(\"reset-message\", on_reset);\n  }, []);\n\n  useEffect(() => {\n    if (enabled && bits && bits !== value) {\n      set_value(bits);\n    } else if (enabled && !bits) {\n      set_enabled(false);\n    }\n  }, [bits]);\n\n  useEffect(() => {\n    if (enabled && value && value !== bits) {\n      setBits(value);\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (enabled && value && value !== bits) {\n      setBits(value);\n    } else if (!enabled) {\n      setBits(\"\");\n    }\n  }, [enabled]);\n\n  return (\n    <div className=\"tts-textarea-bits\" data-help=\"use-bits\">\n      <label className=\"tts-textarea-bits-checkbox checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={enabled}\n          onInput={e => set_enabled((e.target as HTMLInputElement).checked)}\n        />\n        Use Bits\n      </label>\n      <input\n        className=\"tts-textarea-bits-string\"\n        value={value}\n        disabled={!enabled}\n        onChange={\n          enabled\n            ? e => {\n                const str = (e.target as HTMLInputElement).value.trim();\n                if (str) {\n                  set_value(str);\n                }\n              }\n            : undefined\n        }\n        onBlur={\n          enabled\n            ? e => {\n                if (!(e.target as HTMLInputElement).value.trim()) {\n                  set_value(default_str);\n                }\n              }\n            : undefined\n        }\n      />\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport { DEFAULT_SPEED_CHAR, DEFAULT_VOICE, do_confirm } from \"~/common\";\nimport {\n  ADD_SNIPPET_CALLBACK,\n  EDITOR_STATE,\n  EDITOR_UNSAVED,\n  LOADED_MESSAGE,\n  OptimizeTrigger,\n  EditorHistory,\n  HELP_ITEM,\n} from \"~/model\";\nimport {\n  AudioPlayer,\n  ClipboardButton,\n  EditorHeader,\n  EditorMain,\n  SaveMessage,\n  StatusIndicator,\n  useHistoryListeners,\n  useModal,\n} from \"~/view/components\";\nimport {\n  ensure_number,\n  useContextState,\n  useInsertSnippet,\n  useOptimizeMessageTrigger,\n  usePlayMessage,\n  useStateObject,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst empty_message = (length: number, voice: string): TTS.Message => ({\n  id: \"\",\n  text: \"\",\n  name: \"\",\n  options: {\n    bits: \"\",\n    max_length: length,\n    speed: false,\n    speed_char: undefined,\n    voice: voice ?? DEFAULT_VOICE,\n  },\n});\n\nexport const Editor: Preact.FunctionComponent<{\n  message?: TTS.Message;\n  updateMessages: (id: string | null, value: TTS.Message) => boolean;\n}> = ({ message, updateMessages }) => {\n  const [editor_state, set_editor_state] = useContextState(EDITOR_STATE);\n  const [is_unsaved, set_unsaved] = useContextState(EDITOR_UNSAVED);\n  const set_loaded_message = useContext(LOADED_MESSAGE).setValue;\n  const set_add_snippet_callback = useContext(ADD_SNIPPET_CALLBACK).setValue;\n  const help_item = useContext(HELP_ITEM).value;\n\n  const input_ref = useRef<HTMLTextAreaElement>();\n  const [state, set_state] = useStateObject(editor_state);\n  const state_ref = useValueRef(state);\n  const {\n    text,\n    speed,\n    max_length: max_len,\n    bits,\n    pause_duration,\n    speed_char,\n    voice,\n  } = state;\n  const max_length = useMemo(() => ensure_number(max_len, 255), [max_len]);\n  const pause_duration_ref = useValueRef(pause_duration);\n  const voice_ref = useValueRef(voice);\n\n  const get_current_cursor = useCallback(\n    () => ({\n      start: input_ref.current?.selectionStart ?? -1,\n      end: input_ref.current?.selectionEnd ?? -1,\n    }),\n    []\n  );\n  const push_current_state = useCallback((keep?: boolean) => {\n    EditorHistory.push({\n      keep,\n      state: state_ref.current,\n      cursor: get_current_cursor(),\n    });\n  }, []);\n  const cursor_from_history = useRef<TTS.EditorHistory[\"cursor\"] | null>(null);\n  useEffect(() => {\n    EditorHistory.initialize(\n      {\n        state: editor_state,\n        cursor: {\n          start: input_ref.current.selectionStart,\n          end: input_ref.current.selectionEnd,\n        },\n      },\n      (new_state: TTS.EditorHistory, use_cursor_before: boolean) => {\n        const next_cursor = use_cursor_before\n          ? new_state.cursor_before ?? new_state.cursor\n          : new_state.cursor;\n        if (new_state.state !== state_ref.current) {\n          new_state.state.pause_duration = pause_duration_ref.current;\n          set_state(new_state.state);\n          cursor_from_history.current = next_cursor;\n        } else {\n          input_ref.current.selectionStart = next_cursor.start;\n          input_ref.current.selectionEnd = next_cursor.end;\n        }\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    if (cursor_from_history.current) {\n      input_ref.current.selectionStart = cursor_from_history.current.start;\n      input_ref.current.selectionEnd = cursor_from_history.current.end;\n      cursor_from_history.current = null;\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const trimmed_text =\n      bits && `${text} ${bits}`.length > max_length\n        ? text.slice(0, max_length - bits.length - 1)\n        : text;\n    set_editor_state({\n      max_length: max_length,\n      speed,\n      text: trimmed_text,\n      bits,\n      pause_duration,\n      speed_char,\n      voice,\n    });\n  }, [max_length, speed, text, bits, pause_duration, speed_char, voice]);\n\n  const new_message = useMemo<TTS.Message>(\n    () => ({\n      id: message?.id,\n      text:\n        bits && `${text} ${bits}`.length > max_length\n          ? text.slice(0, max_length - bits.length - 1)\n          : text,\n      name: message?.name,\n      options: {\n        max_length,\n        speed,\n        bits,\n        speed_char,\n        voice,\n      },\n    }),\n\n    [max_length, speed, text, message?.name, bits, speed_char, voice]\n  );\n\n  const [data, status, submit_message_, message_text] =\n    usePlayMessage(new_message);\n  const should_start_at_timestamp = useRef<boolean>(false);\n  const should_submit = useRef<boolean>(false);\n  const submit_message = useCallback(async () => {\n    let cursor;\n    if (should_start_at_timestamp.current) {\n      should_start_at_timestamp.current = false;\n      cursor =\n        new_cursor_start.current > 0\n          ? new_cursor_start.current\n          : input_ref.current.selectionStart;\n    }\n    submit_message_(cursor);\n  }, [submit_message_]);\n\n  const text_ref = useValueRef(text);\n  const last_update = useRef<string>();\n  const new_cursor_start = useRef(-1);\n  const new_cursor_end = useRef(-1);\n  const before_optimize = useCallback(\n    (\n      new_text: string,\n      cursor_start: number,\n      cursor_end: number,\n      trigger: OptimizeTrigger\n    ) => {\n      if (new_text !== text_ref.current) {\n        push_current_state(trigger <= OptimizeTrigger.submit);\n      } else {\n        EditorHistory.keep();\n      }\n    },\n    []\n  );\n  const after_optimize = useCallback(\n    (\n      new_text: string,\n      cursor_start: number,\n      cursor_end: number,\n      trigger: OptimizeTrigger\n    ) => {\n      if (new_text !== text_ref.current) {\n        new_cursor_start.current = cursor_start;\n        new_cursor_end.current = cursor_end;\n        last_update.current = new_text;\n        should_submit.current = trigger === OptimizeTrigger.submit;\n        set_state({ text: new_text });\n      } else if (trigger === OptimizeTrigger.submit) {\n        should_submit.current = false;\n        EditorHistory.keep();\n        submit_message();\n      }\n    },\n    []\n  );\n\n  const on_text_change = useCallback(\n    async (new_text: string) => {\n      if (should_submit.current) {\n        should_submit.current = false;\n        EditorHistory.keep();\n        submit_message();\n      }\n      if (new_text === last_update.current) {\n        if (new_cursor_start.current !== -1 && new_cursor_end.current !== -1) {\n          if (input_ref.current) {\n            input_ref.current.selectionStart = new_cursor_start.current;\n            input_ref.current.selectionEnd = new_cursor_end.current;\n          }\n          new_cursor_start.current = -1;\n          new_cursor_end.current = -1;\n        }\n        push_current_state();\n        last_update.current = \"\";\n      }\n    },\n    [submit_message]\n  );\n\n  useEffect(() => {\n    on_text_change(text);\n  }, [text]);\n\n  const optimize_message = useOptimizeMessageTrigger(\n    input_ref,\n    before_optimize,\n    after_optimize\n  );\n\n  const on_submit = useCallback(\n    (msg_text: string, start_at_cursor?: boolean) => {\n      should_start_at_timestamp.current = start_at_cursor;\n      optimize_message(OptimizeTrigger.submit);\n    },\n    [optimize_message]\n  );\n\n  const first_render = useRef(true);\n  const load_message = useCallback((msg?: TTS.Message) => {\n    msg = msg ?? empty_message(length_ref.current, voice_ref.current);\n    set_state({\n      text: msg?.text ?? \"\",\n      speed: msg.options?.speed,\n      max_length: msg.options?.max_length,\n      bits: msg.options?.bits ?? \"\",\n      speed_char:\n        msg.options?.speed_char ??\n        (msg.options?.speed ? DEFAULT_SPEED_CHAR : undefined),\n      voice: msg.options?.voice ?? state_ref.current?.voice ?? DEFAULT_VOICE,\n    });\n    EditorHistory.reset({\n      state: {\n        text: msg.text,\n        speed: msg.options?.speed ?? false,\n        max_length: msg.options?.max_length ?? length_ref.current,\n        bits: msg.options?.bits ?? \"\",\n        pause_duration: state_ref.current?.pause_duration ?? 1,\n        speed_char:\n          msg.options?.speed_char ??\n          (msg.options?.speed ? DEFAULT_SPEED_CHAR : undefined),\n        voice: msg.options?.voice ?? state_ref.current?.voice ?? DEFAULT_VOICE,\n      },\n      cursor: get_current_cursor(),\n    });\n  }, []);\n  useEffect(() => {\n    if (first_render.current) {\n      first_render.current = false;\n      return;\n    }\n    if (message) {\n      load_message(message);\n    }\n  }, [message]);\n\n  const msg_ref = useValueRef(message);\n  useEffect(() => {\n    const on_load_message = (e: TTS.LoadMessageEvent) => {\n      if (e.detail.id === e.detail.prev_id && !e.detail.passive) {\n        load_message(msg_ref.current);\n      }\n      if (\n        e.detail.passive &&\n        !(e.detail.id === null && e.detail.prev_id !== null)\n      ) {\n        first_render.current = true;\n      }\n      e.detail.callback();\n    };\n    window.addEventListener(\"load-message\", on_load_message, { capture: true });\n    return () => {\n      window.removeEventListener(\"load-message\", on_load_message, {\n        capture: true,\n      });\n    };\n  }, []);\n\n  const length_ref = useValueRef(max_length);\n  const reset = useCallback(() => {\n    if (\n      is_unsaved &&\n      !do_confirm(\"Discard unsaved changes to the current message?\")\n    ) {\n      return;\n    }\n    set_loaded_message(null, true);\n    const new_state = {\n      text: \"\",\n      bits: \"\",\n      speed: false,\n      max_length: length_ref.current,\n      pause_duration: pause_duration_ref.current,\n      speed_char: state_ref.current?.speed_char,\n      voice: voice_ref.current,\n    };\n    set_state(new_state);\n    set_unsaved(false);\n    EditorHistory.reset({\n      state: new_state,\n      cursor: get_current_cursor(),\n    });\n    window.dispatchEvent(new CustomEvent(\"reset-message\"));\n  }, [is_unsaved]);\n\n  const [listeners, on_add_snippet] = useHistoryListeners(input_ref);\n\n  const insert_snippet = useInsertSnippet(text, max_length, input_ref);\n  useEffect(() => {\n    set_add_snippet_callback(() => (value: string, flag?: \"start\" | \"end\") => {\n      const new_text = insert_snippet(value, flag);\n      on_add_snippet(new_text, flag);\n      set_state({ text: new_text });\n    });\n  }, []);\n\n  const set_max_length = useCallback(\n    (len: number) => set_state({ max_length: len }),\n    [set_state]\n  );\n\n  const set_voice = useCallback(\n    (val: string) => set_state({ voice: val }),\n    [set_state]\n  );\n\n  const is_intro = help_item === \"intro-editor\";\n\n  const content = (\n    <div className=\"tts-editor\" data-help-intro-highlight={is_intro}>\n      <EditorHeader\n        maxLength={max_length}\n        setMaxLength={set_max_length}\n        voice={voice}\n        setVoice={set_voice}\n        reset={reset}\n        message={new_message}\n      />\n      <EditorMain\n        inputRef={input_ref}\n        text={text}\n        onSubmit={on_submit}\n        speed={speed}\n        speedChar={speed_char}\n        status={status}\n        bits={bits}\n        setState={set_state}\n        listeners={listeners}\n      />\n      <div className=\"row\">\n        <AudioPlayer data={data} />\n        <StatusIndicator status={status} />\n      </div>\n      {status.error && (\n        <div className=\"error\">{JSON.stringify(status.error, null, 2)}</div>\n      )}\n      <div className=\"row tts-main-bottom\">\n        <SaveMessage\n          disabled={!is_unsaved}\n          message={new_message}\n          updateMessages={updateMessages}\n        />\n        <ClipboardButton text={message_text} disabled={!text} />\n      </div>\n    </div>\n  );\n\n  const [ModalContainer, toggle_modal] = useModal(\n    \"#modal-container .modal-backdrop[data-intro-key]\"\n  );\n  useEffect(() => {\n    toggle_modal(is_intro);\n  }, [is_intro]);\n\n  return (\n    <Preact.Fragment>\n      {content}\n      {is_intro ? <ModalContainer>{content}</ModalContainer> : null}\n    </Preact.Fragment>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useEffect, useRef } from \"preact/hooks\";\nimport { VOICE_NAMES } from \"~/common\";\nimport { OPTIMIZE_MESSAGE_CALLBACK, OptimizeTrigger } from \"~/model\";\nimport { ensure_number, useDebounce, useStateIfMounted } from \"~/view/utils\";\n\nexport const EditorHeader: Preact.FunctionComponent<{\n  reset: () => void;\n  maxLength: number;\n  setMaxLength: (value: number) => void;\n  voice: string;\n  setVoice: (value: string) => void;\n  message: TTS.Message;\n}> = ({ maxLength, setMaxLength, voice, setVoice, reset, message }) => {\n  const optimize_message = useContext(OPTIMIZE_MESSAGE_CALLBACK).value;\n  const refocus_target = useRef<HTMLElement | null>();\n\n  const [value, set_value] = useStateIfMounted(maxLength);\n  const [set_max_length] = useDebounce(setMaxLength, 75);\n  useEffect(() => {\n    if (maxLength !== value) {\n      set_value(maxLength);\n    }\n  }, [maxLength]);\n\n  return (\n    <Preact.Fragment>\n      <div className=\"tts-header\">\n        <div className=\"tts-header-top tts-col-header\">\n          <h4>Editor: {message.name || \"New Message\"}</h4>\n          <div className=\"tts-header-controls\">\n            <button\n              className=\"btn btn-with-icon icon-only btn-negative tts-options-reset\"\n              title=\"Clear the editor and start a new message\"\n              onClick={reset}\n              data-help=\"reset-editor\"\n            >\n              <i className=\"fas fa-undo\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"tts-options\">\n          <div className=\"tts-options-item tts-options-char-limit\">\n            <label\n              for=\"tts-options-char-limit\"\n              className=\"tts-options-item-label\"\n            >\n              Character Limit: {value}\n            </label>\n            <input\n              id=\"tts-options-char-limit\"\n              className=\"tts-options-item-control\"\n              type=\"range\"\n              min={255}\n              max={500}\n              onInput={e => {\n                const new_value = ensure_number(\n                  (e.target as HTMLInputElement).valueAsNumber,\n                  255\n                );\n                set_value(new_value);\n                set_max_length(new_value);\n              }}\n              value={value}\n            />\n          </div>\n          <div\n            className=\"tts-options-item tts-options-voice\"\n            title=\"Select a TTS voice\"\n          >\n            <div className=\"tts-options-item-label\">TTS Voice</div>\n            <div className=\"tts-options-item-control\">\n              <select\n                data-help=\"editor-voice\"\n                value={voice}\n                onChange={e => setVoice((e.target as HTMLSelectElement).value)}\n              >\n                {VOICE_NAMES.map(name => (\n                  <option value={name} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div\n            className=\"tts-options-item tts-options-trigger\"\n            title=\"Manually trigger message optimization. This will eliminate unneeded characters (such as replacing 'you' with 'u') to maximize the amount of text you can fit within the character limit.\"\n          >\n            <button\n              className=\"btn btn-large\"\n              onFocus={e => {\n                refocus_target.current = e.relatedTarget as HTMLElement;\n              }}\n              onClick={() =>\n                optimize_message(OptimizeTrigger.manual, refocus_target.current)\n              }\n              data-help=\"optimize-manual\"\n            >\n              Optimize Message\n            </button>\n          </div>\n        </div>\n      </div>\n    </Preact.Fragment>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { DEFAULT_SPEED_CHAR, SPEED_CHARS } from \"~/common\";\nimport {\n  EDITOR_SETTINGS,\n  EDITOR_STATE,\n  OPTIMIZE_MESSAGE_CALLBACK,\n  OptimizeTrigger,\n} from \"~/model\";\nimport { BitsInput, PauseAddControl } from \"~/view/components\";\nimport { useDebounce } from \"~/view/utils\";\n\nexport const EditorMain: Preact.FunctionComponent<{\n  text: string;\n  setState: <T extends TTS.EditorState>(\n    new_state: Partial<T> | ((prev_state: T) => T)\n  ) => void;\n  onSubmit: (text?: string, start_at_cursor?: boolean) => void;\n  inputRef: Preact.RefObject<HTMLTextAreaElement>;\n  speed: boolean;\n  speedChar: string;\n  bits: string;\n  status: TTS.RequestStatus;\n  listeners: EventListenersOf<HTMLTextAreaElement>;\n}> = ({\n  text,\n  setState,\n  onSubmit,\n  speed,\n  speedChar,\n  bits,\n  status,\n  inputRef,\n  listeners,\n}) => {\n  const { max_length, pause_duration, voice } = useContext(EDITOR_STATE).value;\n  const bits_length = bits ? bits.length + 1 : 0;\n  const on_change_text = useCallback(\n    (text: string) => setState({ text }),\n    [setState]\n  );\n  const on_change_bits = useCallback(\n    (bits: string) => setState({ bits }),\n    [setState]\n  );\n  const on_change_speed = useCallback(\n    (char: string) =>\n      setState({\n        speed: !!char,\n        speed_char: char || speedChar,\n      }),\n    [setState, speedChar]\n  );\n  const on_change_pause_duration = useCallback(\n    (duration: number) => setState({ pause_duration: duration }),\n    [setState]\n  );\n  return (\n    <p className=\"tts-textarea-container\">\n      <TTSTextArea\n        inputRef={inputRef}\n        id=\"tts-main-input\"\n        value={text}\n        onChangeText={on_change_text}\n        bitsString={bits}\n        maxLength={max_length - bits_length}\n        speed={speed}\n        speedChar={speedChar}\n        {...listeners}\n      />\n      <div className=\"tts-textarea-bottom\">\n        <div className=\"tts-textarea-length\">\n          Length: <span>{text.length + bits_length}</span>\n          {\" / \"}\n          <span>{max_length}</span>\n        </div>\n        <div>\n          <label\n            className=\"checkbox\"\n            data-tutorial=\"speed-overview\"\n            data-help=\"speed-overview\"\n          >\n            <select\n              value={speed ? speedChar : \"\"}\n              onInput={e =>\n                on_change_speed((e.target as HTMLSelectElement).value)\n              }\n            >\n              <option value=\"\" selected={!speed}>\n                Speed Modifier: Off\n              </option>\n              {SPEED_CHARS.map(c => (\n                <option key={c} value={c} selected={speed && speedChar === c}>\n                  Speed Modifier: {c}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n        <BitsInput bits={bits} setBits={on_change_bits} />\n        <PauseAddControl\n          speedModified={speed}\n          text={text}\n          duration={pause_duration}\n          onChangeDuration={on_change_pause_duration}\n          voice={voice}\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"tts-textarea-submit\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={status.pending || !text}\n            data-help=\"submit-button\"\n            type=\"submit\"\n            onClick={e => {\n              e.preventDefault();\n              onSubmit(text, e.shiftKey);\n            }}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </p>\n  );\n};\n\nexport const TTSTextArea: Preact.FunctionComponent<\n  {\n    value: string;\n    onChangeText: (text: string) => void;\n    inputRef: Preact.RefObject<HTMLTextAreaElement>;\n    speed: boolean;\n    speedChar: string;\n    maxLength: number;\n    bitsString: string;\n  } & Omit<HTMLTextAreaProps, \"value\">\n> = ({\n  value,\n  onChangeText,\n  speed,\n  speedChar = DEFAULT_SPEED_CHAR,\n  id,\n  maxLength,\n  bitsString,\n  inputRef,\n  onMouseUp,\n  onKeyUp,\n  onChange,\n}) => {\n  const settings = useContext(EDITOR_SETTINGS).value;\n  const optimize_text = useContext(OPTIMIZE_MESSAGE_CALLBACK).value;\n  const preview_ref = useRef<HTMLDivElement>();\n  const [optimize, cancel_optimize] = useDebounce(optimize_text, 300);\n  const [optimize_delayed, cancel_delayed_optimize] = useDebounce(\n    optimize_text,\n    5000\n  );\n  useEffect(() => {\n    if (settings.optimize_words === OptimizeTrigger.stop) {\n      optimize_delayed(OptimizeTrigger.stop);\n    } else if (settings.optimize_words >= OptimizeTrigger.edit) {\n      optimize(OptimizeTrigger.edit);\n    }\n    return () => {\n      cancel_optimize();\n      cancel_delayed_optimize();\n    };\n  }, [value]);\n\n  const update_cursor_pos = useCallback(() => {\n    preview_ref.current?.setAttribute(\n      \"data-cursor\",\n      `${inputRef?.current?.selectionStart}`\n    );\n  }, []);\n\n  let end = \"\";\n  const max_len = parseInt(`${maxLength}`);\n  if (speed && max_len !== value.length) {\n    const count = Math.max(0, max_len - value.length - 1);\n    end = speedChar.repeat(count).slice(0, count);\n  }\n  if (bitsString) {\n    end += ` ${bitsString}`;\n  }\n  return (\n    <div className=\"tts-textarea tts-text\">\n      <textarea\n        id={id}\n        ref={inputRef}\n        className=\"tts-textarea-input\"\n        value={value}\n        rows={12}\n        maxLength={maxLength}\n        onInput={e => {\n          onChange?.bind(e.target)?.(e);\n          onChangeText((e.target as HTMLTextAreaElement).value);\n        }}\n        onBlur={() => optimize(OptimizeTrigger.blur)}\n        onFocus={cancel_optimize}\n        onKeyDown={e => {\n          if (\n            (e.key === \"z\" || e.key === \"Z\") &&\n            (e.ctrlKey || e.metaKey) &&\n            !e.altKey\n          ) {\n            e.preventDefault();\n          } else if (\n            (e.key === \"c\" || e.key === \"C\") &&\n            (e.ctrlKey || e.metaKey) &&\n            !e.altKey &&\n            !e.shiftKey &&\n            inputRef.current?.selectionStart === 0 &&\n            inputRef.current?.selectionEnd === value.length\n          ) {\n            e.preventDefault();\n            e.stopPropagation();\n            document.getElementById(\"tts-clipboard-button\")?.click();\n            return;\n          }\n          update_cursor_pos();\n        }}\n        onKeyUp={function (e) {\n          onKeyUp?.bind(e.target)?.(e);\n          update_cursor_pos();\n        }}\n        onClick={update_cursor_pos}\n        onSelect={update_cursor_pos}\n        onMouseUp={onMouseUp}\n      />\n      <div className=\"tts-textarea-preview\" ref={preview_ref}>\n        <span>{value.slice(0, maxLength)}</span>\n        <span className=\"tts-textarea-preview-over-limit\">\n          {value.slice(maxLength)}\n        </span>{\" \"}\n        <span>{end}</span>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { PAUSE_CHAR_DURATION, PAUSE_CHAR_SPEED_MODIFIED } from \"~/common\";\nimport { Modal, useModal, ModalHeader } from \"~/view/components\";\nimport { ensure_number, useStateIfMounted } from \"~/view/utils\";\nimport { ADD_SNIPPET_CALLBACK } from \"~/model\";\n\nexport const generate_unmodified_pause = (duration: number, voice: string) =>\n  \"/ \".repeat(\n    Math.max(1, Math.round(duration / PAUSE_CHAR_DURATION[voice].normal))\n  );\nexport const generate_modified_pause = (duration: number, voice: string) =>\n  PAUSE_CHAR_SPEED_MODIFIED.repeat(\n    Math.max(1, Math.round(duration / PAUSE_CHAR_DURATION[voice].speed))\n  );\n\nexport const generate_pause = (\n  duration: number,\n  voice: string,\n  preserve_speed = false\n) =>\n  preserve_speed\n    ? generate_modified_pause(duration, voice)\n    : generate_unmodified_pause(duration, voice);\n\nexport const PauseAddControl: Preact.FunctionComponent<{\n  text: string;\n  speedModified: boolean;\n  duration: number;\n  onChangeDuration: (d: number) => void;\n  voice: string;\n}> = ({ text, speedModified, duration, onChangeDuration, voice }) => {\n  const [ModalContainer, toggle_modal] = useModal();\n  const [preserve, set_preserve] = useStateIfMounted(speedModified);\n  const input_ref = useRef<HTMLInputElement>();\n  const on_add_pause = useContext(ADD_SNIPPET_CALLBACK).value;\n\n  const dismiss = () => toggle_modal(false);\n  const add_pause = useCallback(() => {\n    const str = generate_pause(duration, voice, preserve);\n    return `${!preserve && !text.endsWith(\" \") ? \" \" : \"\"}${str}`;\n  }, [duration, preserve, text, on_add_pause, voice]);\n\n  const on_right_click = useCallback(\n    e => {\n      e.preventDefault();\n      on_add_pause(add_pause(), \"end\");\n    },\n    [add_pause]\n  );\n\n  useEffect(() => {\n    if (open) {\n      const focused = document.activeElement as HTMLElement;\n      input_ref.current?.focus();\n      return () => {\n        input_ref.current?.blur();\n        focused?.focus();\n      };\n    }\n  }, [open]);\n\n  useEffect(() => {\n    if (speedModified !== preserve) {\n      set_preserve(speedModified);\n    }\n  }, [speedModified]);\n\n  return (\n    <div className=\"tts-pause-control\">\n      <button\n        className=\"btn\"\n        onClick={e => {\n          if (e?.button === 2) {\n            on_right_click(e);\n          } else {\n            toggle_modal(true);\n          }\n        }}\n        onContextMenu={on_right_click}\n        data-help=\"pause-add\"\n      >\n        Add Pause\n      </button>\n      <ModalContainer>\n        <Modal className=\"modal tts-pause-modal\" dismiss={dismiss}>\n          <ModalHeader dismiss={dismiss}>\n            <h3>Add a Pause</h3>\n          </ModalHeader>\n\n          <div className=\"modal-body\">\n            <div className=\"row\">\n              <label className=\"tts-pause-modal-duration\">\n                <span>Pause Duration</span>\n                <span>\n                  <input\n                    type=\"number\"\n                    value={duration}\n                    min={0.1}\n                    max={10}\n                    step={0.1}\n                    onInput={e =>\n                      onChangeDuration(\n                        ensure_number(\n                          (e.target as HTMLInputElement).valueAsNumber,\n                          1\n                        )\n                      )\n                    }\n                  />\n                  seconds\n                </span>\n              </label>\n\n              <label\n                className=\"tts-pause-modal-checkbox\"\n                data-help=\"pause-speed\"\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={preserve}\n                  onInput={e =>\n                    set_preserve((e.target as HTMLInputElement).checked)\n                  }\n                />\n                Preserve Speed Modifiers\n              </label>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button className=\"btn\" onClick={dismiss}>\n              Cancel\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                on_add_pause(add_pause(), \"end\");\n                dismiss();\n              }}\n            >\n              Add\n            </button>\n          </div>\n        </Modal>\n      </ModalContainer>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useEffect, useRef } from \"preact/hooks\";\nimport { generate_id } from \"~/common\";\nimport { MESSAGES } from \"~/model\";\nimport {\n  MessageModalBase,\n  useCategoryField,\n  useModal,\n} from \"~/view/components\";\nimport { useLoadedMessage, useStateIfMounted } from \"~/view/utils\";\n\nexport const SaveMessage: Preact.FunctionComponent<{\n  message: TTS.Message;\n  updateMessages: (id: string | null, value: TTS.Message) => boolean;\n  disabled?: boolean;\n}> = ({ message, updateMessages, disabled }) => {\n  const [ModalContainer, toggle_modal] = useModal();\n\n  return (\n    <button\n      className=\"btn\"\n      disabled={!message.text || disabled}\n      onClick={() => toggle_modal(true)}\n    >\n      <i className=\"fas fa-save\" />\n      Save Message\n      <ModalContainer>\n        <SaveMessageModal\n          message={message}\n          updateMessages={updateMessages}\n          dismiss={() => toggle_modal(false)}\n        />\n      </ModalContainer>\n    </button>\n  );\n};\n\nexport const SaveMessageModal: Preact.FunctionComponent<{\n  message: TTS.Message;\n  updateMessages: (\n    id: string | null,\n    value: TTS.Message,\n    category: string | undefined\n  ) => boolean;\n  dismiss: () => void;\n}> = ({ message, updateMessages, dismiss }) => {\n  const messages = useContext(MESSAGES).value;\n  const [loaded_message, loaded_id] = useLoadedMessage(messages);\n  const [category, set_category, initial_category] = useCategoryField(message);\n\n  const { name } = message;\n  const [value, set_value] = useStateIfMounted(name);\n  const new_name = value?.trim();\n\n  const saved = useRef(false);\n  useEffect(() => {\n    if (name !== value) {\n      saved.current = false;\n    }\n  }, [value, name]);\n\n  return (\n    <MessageModalBase\n      message={message}\n      name={value}\n      setName={set_value}\n      category={category}\n      setCategory={set_category}\n      dismiss={dismiss}\n      isNew={!loaded_message}\n    >\n      <button className=\"btn\" onClick={dismiss}>\n        Cancel\n      </button>\n      {!!loaded_message && (\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => {\n            if (saved.current) {\n              return;\n            }\n            saved.current = true;\n            if (\n              updateMessages(\n                null,\n                {\n                  ...message,\n                  id: generate_id(new_name),\n                  name: new_name,\n                },\n                category || undefined\n              )\n            ) {\n              dismiss();\n            } else {\n              saved.current = false;\n            }\n          }}\n          disabled={\n            !new_name || (new_name === name && category === initial_category)\n          }\n        >\n          Save As New...\n        </button>\n      )}\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          if (saved.current) {\n            return;\n          }\n          saved.current = true;\n          if (\n            updateMessages(\n              loaded_id,\n              {\n                ...message,\n                id: !!loaded_message ? message.id : generate_id(new_name),\n                name: new_name,\n              },\n              category || undefined\n            )\n          ) {\n            dismiss();\n          } else {\n            saved.current = false;\n          }\n        }}\n        disabled={!new_name}\n      >\n        Save {!!loaded_message ? \"Changes\" : \"New\"}\n      </button>\n    </MessageModalBase>\n  );\n};\n","import {\n  useContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport { EDITOR_STATE, EditorHistory } from \"~/model\";\nimport { useStateRef, useValueRef } from \"~/view/utils\";\n\nconst TERMINATION_CHARS = /[ \\-*&!@.,;':+=]/;\ntype TextAction = \"type\" | \"backspace\" | \"delete\" | \"replace\" | \"snippet\";\n\nexport const useHistoryListeners = (\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  const editor_state = useContext(EDITOR_STATE).value;\n  const state_ref = useValueRef(editor_state);\n  const { max_length, speed, bits, speed_char, voice } = editor_state;\n\n  const prev_cursor_pos = useRef(input_ref.current?.selectionStart ?? -1);\n  const prev_action = useRef<TextAction | undefined>();\n  const last_prop_changed = useRef<\n    | \"max_length\"\n    | \"speed\"\n    | \"bits\"\n    | \"text\"\n    | \"speed_char\"\n    | \"voice\"\n    | undefined\n  >();\n\n  const get_current_cursor = useCallback(\n    (elem: HTMLTextAreaElement) => ({\n      start: elem?.selectionStart,\n      end: elem?.selectionEnd,\n    }),\n    []\n  );\n  const cursor_start = useRef(get_current_cursor(input_ref.current));\n\n  const first_render = useRef(true);\n  useEffect(() => {\n    if (first_render.current) {\n      first_render.current = false;\n      return;\n    }\n    const state = EditorHistory.getCurrentState()?.state;\n    if (!state) {\n      return;\n    }\n    const changed = Object.entries({\n      max_length: max_length !== state.max_length,\n      speed: speed !== state.speed,\n      bits: bits !== state.bits,\n      speed_char: speed_char !== state.speed_char,\n      voice: voice !== state.voice,\n    })\n      .filter(([, v]) => !!v)\n      .map(([prop]) => prop);\n    if (changed.length === 0) {\n      return;\n    }\n    EditorHistory.push(\n      {\n        state: state_ref.current,\n        cursor: get_current_cursor(input_ref.current),\n      },\n      changed.length === 1 && changed[0] === last_prop_changed.current\n    );\n    // @ts-expect-error:\n    last_prop_changed.current = changed.length > 1 ? undefined : changed[0];\n    prev_action.current = undefined;\n  }, [max_length, speed, bits, speed_char, voice]);\n\n  const onChange = useCallback(e => {\n    let action: TextAction,\n      edge_char,\n      pos_changed = false;\n    const cursor = e.target.selectionStart;\n    const before = state_ref.current.text;\n    const after = e.target.value;\n    if (before === after) {\n      prev_cursor_pos.current = cursor;\n      return;\n    }\n\n    const before_pre = before.slice(0, prev_cursor_pos.current);\n    const after_pre = after.slice(0, cursor);\n    const before_post = before.slice(prev_cursor_pos.current);\n    const after_post = after.slice(cursor);\n\n    const new_state: TTS.EditorHistory = {\n      state: {\n        ...state_ref.current,\n        text: after,\n      },\n      cursor: {\n        start: cursor,\n        end: e.target.selectionEnd,\n      },\n    };\n\n    if (before_pre === after_pre) {\n      edge_char = after_post[0];\n      action = \"delete\";\n      pos_changed = cursor !== prev_cursor_pos.current;\n    } else if (before_post !== after_post) {\n      action = \"replace\";\n      pos_changed = true;\n    } else {\n      action = before_pre.length > after_pre.length ? \"backspace\" : \"type\";\n      edge_char = after_pre.slice(-1);\n      pos_changed =\n        cursor - prev_cursor_pos.current !== (action === \"backspace\" ? -1 : 1);\n    }\n\n    const action_changed = action !== prev_action.current;\n    const replace = !(\n      pos_changed ||\n      action_changed ||\n      TERMINATION_CHARS.test(edge_char)\n    );\n\n    const { cursor_before: old_cursor_before, cursor: old_cursor } =\n      EditorHistory.getCurrentState();\n    let cursor_before = replace ? old_cursor_before : cursor_start.current;\n    if (\n      !cursor_start.current ||\n      cursor_start.current.start == null ||\n      cursor_start.current.end == null\n    ) {\n      cursor_before = old_cursor;\n    }\n    EditorHistory.push({ ...new_state, cursor_before }, replace);\n\n    prev_cursor_pos.current = cursor;\n    prev_action.current = action;\n    last_prop_changed.current = \"text\";\n  }, []);\n\n  const update_cursor_pos = useCallback(e => {\n    cursor_start.current = get_current_cursor(e.target);\n  }, []);\n\n  const insert_held = useRef(false);\n  const snippet_ended = useRef(false);\n  const on_add_snippet = useCallback(\n    (new_text: string, flag?: \"start\" | \"end\") => {\n      if (new_text === state_ref.current.text && flag !== \"end\") {\n        prev_cursor_pos.current = input_ref.current.selectionStart;\n        return;\n      }\n\n      if (flag === \"start\") {\n        insert_held.current = true;\n      } else if (flag === \"end\") {\n        if (new_text === state_ref.current.text) {\n          EditorHistory.push({\n            keep: true,\n            state: { ...state_ref.current },\n            cursor: {\n              start: input_ref.current.selectionStart,\n              end: input_ref.current.selectionEnd,\n            },\n          });\n        } else {\n          insert_held.current = false;\n          snippet_ended.current = true;\n        }\n      }\n      last_prop_changed.current = \"text\";\n      prev_action.current = \"snippet\";\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (\n      prev_action.current !== \"snippet\" ||\n      insert_held.current ||\n      !snippet_ended.current\n    ) {\n      return;\n    }\n    snippet_ended.current = false;\n    EditorHistory.push({\n      state: { ...state_ref.current },\n      cursor: {\n        start: input_ref.current.selectionStart,\n        end: input_ref.current.selectionEnd,\n      },\n      keep: true,\n    });\n  }, [editor_state.text]);\n\n  return [\n    useMemo<EventListenersOf<HTMLTextAreaElement>>(\n      () => ({\n        onChange,\n        onKeyDown: update_cursor_pos,\n        onKeyUp: update_cursor_pos,\n        onClick: update_cursor_pos,\n        onSelect: update_cursor_pos,\n        onMouseUp: update_cursor_pos,\n      }),\n      [onChange, update_cursor_pos]\n    ),\n    on_add_snippet,\n  ] as const;\n};\n\nconst ctrl_z_listener = e => {\n  if (\n    (e.key === \"z\" || e.key === \"Z\") &&\n    (e.ctrlKey || e.metaKey) &&\n    !e.altKey\n  ) {\n    e.preventDefault();\n    if (e.shiftKey) {\n      EditorHistory.redo();\n    } else {\n      EditorHistory.undo();\n    }\n  }\n};\n\nexport const useCtrlZListener = (\n  modal_container: preact.RefObject<HTMLDivElement>\n) => {\n  const [enabled, set_enabled, enabled_ref] = useStateRef<boolean>(true);\n  useEffect(() => {\n    if (modal_container.current) {\n      const observer = new MutationObserver(e => {\n        const enable = (e[0].target as HTMLDivElement)?.childElementCount === 0;\n        if (enable !== enabled_ref.current) {\n          set_enabled(enable);\n        }\n      });\n      observer.observe(modal_container.current, { childList: true });\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [modal_container.current]);\n  useEffect(() => {\n    if (enabled) {\n      window.addEventListener(\"keydown\", ctrl_z_listener);\n    }\n    return () => {\n      if (!enabled_ref.current) {\n        window.removeEventListener(\"keydown\", ctrl_z_listener);\n      }\n    };\n  }, [enabled]);\n};\n","export * from \"./BitsInput\";\nexport * from \"./Editor\";\nexport * from \"./Header\";\nexport * from \"./Main\";\nexport * from \"./PauseAddControl\";\nexport * from \"./SaveControl\";\nexport * from \"./utils\";\n","import * as Preact from \"preact\";\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport {\n  EDITOR_SETTINGS,\n  MESSAGE_CATEGORIES,\n  MESSAGES,\n  SNIPPETS,\n  SNIPPETS_SECTIONS,\n  UNCATEGORIZED_MESSAGES,\n} from \"~/model\";\nimport {\n  ExpandableChecklist,\n  export_message_categories,\n  export_messages,\n  export_snippets,\n  export_snippets_sections,\n  generate_file,\n  ResetStorage,\n  Snippet,\n} from \"~/view/components\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const ExportForm: Preact.FunctionComponent<{ dismiss: () => void }> = ({\n  dismiss,\n}) => {\n  const settings = useContext(EDITOR_SETTINGS).value;\n  const messages = useContext(MESSAGES).value;\n  const categories = useContext(MESSAGE_CATEGORIES).value;\n  const uncat_msgs = useContext(UNCATEGORIZED_MESSAGES).value;\n  const snippets = useContext(SNIPPETS).value;\n  const sections = useContext(SNIPPETS_SECTIONS).value;\n  const link_ref = useRef<HTMLAnchorElement>();\n\n  const [exp_messages, set_exp_messages] = useStateIfMounted(messages);\n  const [exp_snippets, set_exp_snippets] = useStateIfMounted(snippets);\n  const [exp_settings, set_exp_settings] = useStateIfMounted(false);\n\n  const [exp_data, set_exp_data] = useStateIfMounted<string | undefined>(\n    undefined\n  );\n  const [filename, set_filename] = useStateIfMounted(\"\");\n\n  const on_submit = useCallback(() => {\n    if (!exp_messages && !exp_snippets && !exp_settings) {\n      return;\n    }\n    const export_data: TTS.ExportData = { __type: \"export-data\" };\n    if (exp_messages.length > 0) {\n      export_data.messages = export_messages(exp_messages);\n      export_data.messageCategories = export_message_categories(\n        categories\n          .concat(uncat_msgs)\n          .map(c => ({\n            ...c,\n            data: c.data.filter(id => exp_messages.some(m => m.id === id)),\n          }))\n          .filter(c => c.data.length > 0)\n      );\n      if (exp_snippets.length === 0 && !exp_settings) {\n        set_filename(`tts-data-messages`);\n        set_exp_data(generate_file(export_data));\n        return;\n      }\n    }\n    if (exp_snippets.length > 0) {\n      export_data.snippets = export_snippets(exp_snippets);\n      export_data.snippetsSections = export_snippets_sections(\n        sections\n          .map(s => ({\n            ...s,\n            data: s.data.filter(id => exp_snippets.some(sn => sn.id === id)),\n          }))\n          .filter(s => s.data.length > 0)\n      );\n      if (exp_messages.length === 0 && !exp_settings) {\n        set_filename(`tts-data-snippets`);\n        set_exp_data(generate_file(export_data));\n        return;\n      }\n    }\n    if (exp_settings) {\n      export_data.settings = { ...settings, __type: \"settings\" };\n      if (exp_messages.length === 0 && exp_snippets.length === 0) {\n        set_filename(`tts-data-settings`);\n        set_exp_data(generate_file(export_data.settings));\n        return;\n      }\n    }\n    set_filename(`tts-data`);\n    set_exp_data(generate_file(export_data));\n  }, [\n    messages,\n    uncat_msgs,\n    snippets,\n    settings,\n    exp_messages,\n    exp_snippets,\n    exp_settings,\n  ]);\n\n  useEffect(() => {\n    if (exp_data && filename) {\n      link_ref.current?.click();\n    }\n  }, [exp_data]);\n\n  const [reset_page, set_page] = useStateIfMounted(false);\n\n  const disabled = !(exp_messages || exp_snippets || exp_settings);\n\n  return reset_page ? (\n    <ResetStorage onCancel={() => set_page(false)} />\n  ) : (\n    <Preact.Fragment>\n      <div className=\"modal-body modal-scroll-content tts-export-export\">\n        <div className=\"tts-export-export-form\" data-help=\"export-details\">\n          <h4>What data would you like to export?</h4>\n          <ul>\n            <li>\n              <ExportMessageTree\n                categories={categories}\n                messages={messages}\n                selection={exp_messages}\n                setSelection={set_exp_messages}\n                uncategorizedMessages={uncat_msgs}\n              />\n            </li>\n            <li>\n              <ExportSnippetsTree\n                sections={sections}\n                snippets={snippets}\n                selection={exp_snippets}\n                setSelection={set_exp_snippets}\n              />\n            </li>\n            <li>\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={exp_settings}\n                  onInput={() => set_exp_settings(!exp_settings)}\n                />\n                <span className=\"checkbox-label\">Settings</span>\n              </label>\n            </li>\n          </ul>\n          <div className=\"row\">\n            <button\n              className=\"btn btn-primary btn-large\"\n              onClick={disabled ? undefined : on_submit}\n              disabled={disabled}\n            >\n              Export\n            </button>\n          </div>\n          {exp_data && filename ? (\n            <div className=\"row\">\n              <a\n                href={`data:application/json;charset=utf-8,${encodeURIComponent(\n                  exp_data\n                )}`}\n                download={`${filename}.json`}\n                ref={link_ref}\n              >\n                Click here if the download doesn't start automatically.\n              </a>\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"modal-footer tts-export-footer\">\n        <button\n          className=\"btn btn-negative\"\n          onClick={() => set_page(true)}\n          data-help=\"import-export-reset\"\n        >\n          Reset Storage\n        </button>\n        <button className=\"btn btn-primary\" onClick={dismiss}>\n          Done\n        </button>\n      </div>\n    </Preact.Fragment>\n  );\n};\n\nconst RenderLabel = <T extends { name: string }>({ data }: { data: T }) => (\n  <Preact.Fragment>{data.name}</Preact.Fragment>\n);\n\nexport const ExportMessageTree: Preact.FunctionComponent<{\n  categories: TTS.MessageCategory[];\n  uncategorizedMessages: TTS.MessageCategory;\n  messages: TTS.Message[];\n  selection: TTS.Message[];\n  setSelection: (items: TTS.Message[]) => void;\n}> = ({\n  categories,\n  messages,\n  selection,\n  setSelection,\n  uncategorizedMessages,\n}) => {\n  const checklist_items_initial = useMemo<\n    ExpandableChecklistItem<TTS.MessageCategoryPopulated>[]\n  >(() => {\n    const cats = categories.map(c => ({\n      // @ts-expect-error:\n      data: c as TTS.MessageCategoryPopulated,\n      key: c.name,\n      selected: c.data.map(\n        id =>\n          ({\n            data: messages.find(m => m.id === id),\n            key: id,\n            selected: !!selection.find(msg => msg.id === id),\n            Render: RenderLabel,\n          } as ExpandableChecklistItem<TTS.Message>)\n      ),\n      Render: RenderLabel,\n    }));\n\n    const uncat = messages.filter(\n      m => !categories.find(c => c.data.includes(m.id))\n    );\n    if (uncat.length > 0) {\n      const uncat_sorted = uncategorizedMessages.data\n        .filter(id => uncat.find(m => m.id === id))\n        .map(id => messages.find(m => m.id === id))\n        .concat(uncat.filter(m => !uncategorizedMessages.data.includes(m.id)));\n\n      return cats.concat({\n        data: {\n          ...uncategorizedMessages,\n          data: uncat_sorted,\n        },\n        key: uncategorizedMessages.name,\n        selected: uncat_sorted.map(m => ({\n          data: m,\n          key: m.id,\n          selected: !!selection.find(msg => msg.id == m.id),\n          Render: RenderLabel,\n        })),\n        Render: RenderLabel,\n      });\n    }\n    return cats;\n  }, []);\n\n  const [checklist_items, set_checklist_items] = useStateIfMounted(\n    checklist_items_initial\n  );\n\n  const first_render = useRef(true);\n  useEffect(() => {\n    if (first_render.current) {\n      first_render.current = false;\n      return;\n    }\n    setSelection(\n      checklist_items.reduce(\n        (items, c) =>\n          items.concat(c.selected.filter(i => i.selected).map(i => i.data)),\n        [] as TTS.Message[]\n      )\n    );\n  }, [checklist_items]);\n\n  return (\n    <ExpandableChecklist\n      items={checklist_items}\n      label=\"Messages\"\n      onChange={set_checklist_items}\n    />\n  );\n};\n\nexport const ExportSnippetsTree: Preact.FunctionComponent<{\n  sections: TTS.SnippetsSection[];\n  snippets: TTS.Snippet[];\n  selection: TTS.Snippet[];\n  setSelection: (items: TTS.Snippet[]) => void;\n}> = ({ snippets, sections, selection, setSelection }) => {\n  const checklist_items_initial = useMemo<\n    ExpandableChecklistItem<TTS.SnippetsSectionPopulated>[]\n  >(\n    () =>\n      sections.map(s => ({\n        // @ts-expect-error:\n        data: s as TTS.SnippetsSectionPopulated,\n        key: s.name,\n        selected: s.data.map(\n          id =>\n            ({\n              data: snippets.find(m => m.id === id),\n              key: id,\n              selected: !!selection.find(snip => snip.id === id),\n              Render: Snippet,\n            } as ExpandableChecklistItem<TTS.Snippet>)\n        ),\n        Render: RenderLabel,\n      })),\n    []\n  );\n\n  const [checklist_items, set_checklist_items] = useStateIfMounted(\n    checklist_items_initial\n  );\n\n  const first_render = useRef(true);\n  useEffect(() => {\n    if (first_render.current) {\n      first_render.current = false;\n      return;\n    }\n    setSelection(\n      checklist_items.reduce(\n        (items, c) =>\n          items.concat(c.selected.filter(i => i.selected).map(i => i.data)),\n        [] as TTS.Snippet[]\n      )\n    );\n  }, [checklist_items]);\n\n  return (\n    <ExpandableChecklist\n      items={checklist_items}\n      label=\"Snippets\"\n      onChange={set_checklist_items}\n    />\n  );\n};\n","import * as Preact from \"preact\";\nimport { useMemo } from \"preact/hooks\";\nimport { export_messages, generate_file } from \"~/view/components\";\n\nexport const ExportMessage: Preact.FunctionComponent<{ message: TTS.Message }> =\n  ({ message }) => {\n    const filename = useMemo(\n      () =>\n        `tts-message-${message.name\n          ?.split(\" \")\n          .map(p =>\n            p.length > 0\n              ? `${p[0].toUpperCase()}${p.slice(1).toLowerCase()}`\n              : \"\"\n          )\n          .join(\"\")\n          .replace(/\\W/gi, \"\")}.json`,\n      [message]\n    );\n\n    const data = useMemo(\n      () => generate_file(export_messages([message])[0]),\n      [message]\n    );\n\n    return (\n      <a\n        className=\"btn btn-large btn-with-icon\"\n        href={`data:application/json;charset=utf-8,${encodeURIComponent(data)}`}\n        download={filename}\n        data-help=\"messages-export\"\n      >\n        <i class=\"fas fa-share-square\" />\n        Export\n      </a>\n    );\n  };\n","import * as Preact from \"preact\";\nimport { useContext, useMemo } from \"preact/hooks\";\nimport { MESSAGES } from \"~/model\";\nimport {\n  export_message_category,\n  export_messages,\n  generate_file,\n} from \"~/view/components\";\n\nexport const ExportMessageCategory: Preact.FunctionComponent<{\n  category: TTS.MessageCategory;\n}> = ({ category }) => {\n  const messages = useContext(MESSAGES).value;\n  const filename = useMemo(\n    () =>\n      `tts-message-category-${category.name\n        ?.split(\" \")\n        .map(p =>\n          p.length > 0 ? `${p[0].toUpperCase()}${p.slice(1).toLowerCase()}` : \"\"\n        )\n        .join(\"\")\n        .replace(/\\W/gi, \"\")}.json`,\n    [category]\n  );\n  const data = useMemo(() => {\n    const cat: TTS.ExportedMessageCategory = {\n      ...export_message_category(category),\n      data: export_messages(messages.filter(m => category.data.includes(m.id))),\n    };\n    return generate_file(cat);\n  }, [category, messages]);\n\n  return (\n    <a\n      className=\"btn btn-with-icon\"\n      href={`data:application/json;charset=utf-8,${encodeURIComponent(data)}`}\n      download={filename}\n      data-help=\"export-message-category\"\n    >\n      <i class=\"fas fa-share-square\" />\n      Export\n    </a>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useMemo } from \"preact/hooks\";\nimport { export_snippet, generate_file } from \"~/view/components\";\n\nexport const ExportSnippet: Preact.FunctionComponent<{ snippet: TTS.Snippet }> =\n  ({ snippet }) => {\n    const filename = useMemo(\n      () =>\n        `tts-snippet-${`${snippet.options.prefix}${snippet.text}${snippet.options.suffix}`.replace(\n          /\\W/gi,\n          \"\"\n        )}.json`,\n      [snippet]\n    );\n\n    const data = useMemo(\n      () => generate_file(export_snippet(snippet)),\n      [snippet]\n    );\n\n    return (\n      <a\n        className=\"btn btn-with-icon\"\n        href={`data:application/json;charset=utf-8,${encodeURIComponent(data)}`}\n        download={filename}\n        data-help=\"export-snippet\"\n      >\n        <i class=\"fas fa-share-square\" />\n        Export\n      </a>\n    );\n  };\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport {\n  EDITOR_SETTINGS,\n  MESSAGE_CATEGORIES,\n  MESSAGES,\n  MODAL_DIRTY,\n  SNIPPETS,\n  SNIPPETS_SECTIONS,\n  UNCATEGORIZED_MESSAGES,\n} from \"~/model\";\nimport {\n  import_data,\n  ImportDuplicateMessages,\n  ImportDuplicateSnippets,\n  ImportRenameMessages,\n  ImportUncategorizedSnippets,\n} from \"~/view/components\";\nimport {\n  get_uncategorized_messages,\n  useContextState,\n  useDragAndDrop,\n  useStateIfMounted,\n  useStateRef,\n  useUploadFiles,\n} from \"~/view/utils\";\n\nexport const ImportForm: Preact.FunctionComponent<{\n  dismiss: () => void;\n  data?: TTS.AnyExportData;\n  setData: (data: TTS.AnyExportData | null) => void;\n}> = ({ dismiss, data, setData }) => {\n  const [, set_dirty] = useContextState(MODAL_DIRTY);\n  const [settings, set_settings] = useContextState(EDITOR_SETTINGS);\n  const [categories, set_categories] = useContextState(MESSAGE_CATEGORIES);\n  const [uncat_msgs, set_uncat_msgs] = useContextState(UNCATEGORIZED_MESSAGES);\n  const [messages, set_messages] = useContextState(MESSAGES);\n  const [snippets, set_snippets] = useContextState(SNIPPETS);\n  const [snippets_sections, set_snippets_sections] =\n    useContextState(SNIPPETS_SECTIONS);\n  const [step, set_step, step_ref] = useStateRef<number>(0);\n  const parsed_data = useMemo(\n    () =>\n      data\n        ? import_data(\n            data,\n            settings,\n            messages,\n            snippets,\n            categories,\n            uncat_msgs,\n            snippets_sections\n          )\n        : null,\n    [data]\n  );\n\n  const [messages_dupes_result, set_messages_dupes_result] =\n    useStateIfMounted<TTS.Message[]>(undefined);\n  const [messages_final_result, set_messages_final_result] =\n    useStateIfMounted<TTS.Message[]>(undefined);\n  const [snippets_dupes_result, set_snippets_dupes_result] =\n    useStateIfMounted<TTS.Snippet[]>(undefined);\n  const [snippets_final_result, set_snippets_final_result] =\n    useStateIfMounted<TTS.Snippet[]>(undefined);\n  const [sections_final_result, set_sections_final_result] =\n    useStateIfMounted<TTS.SnippetsSection[]>(undefined);\n\n  const next_step = useCallback(() => set_step(step_ref.current + 1), []);\n  const prev_step = useCallback(() => {\n    if (step_ref.current === 0) {\n      setData(undefined);\n      set_messages_dupes_result(undefined);\n      set_messages_final_result(undefined);\n      set_snippets_dupes_result(undefined);\n      set_snippets_final_result(undefined);\n    } else {\n      set_step(step_ref.current - 1);\n    }\n  }, []);\n\n  const [\n    settings_result,\n    messages_result_initial,\n    snippets_result_initial,\n    categories_result_initial,\n    sections_result_initial,\n    uncat_result,\n    dup_messages = [],\n    rename_messages = [],\n    dup_snippets = [],\n    uncategorized_snippets = [],\n  ] = parsed_data ?? [];\n\n  const [success, set_success] = useStateIfMounted(false);\n  useEffect(() => {\n    set_dirty(!!parsed_data && !success);\n  }, [success, parsed_data]);\n\n  const on_finish = useCallback(() => {\n    if (settings_result) {\n      set_settings(settings_result);\n    }\n    if (messages_final_result) {\n      set_messages(messages_final_result);\n    }\n    if (snippets_final_result) {\n      set_snippets(snippets_final_result);\n    }\n    let categories_final: TTS.MessageCategory[] | undefined;\n    if (categories_result_initial) {\n      categories_final = categories_result_initial\n        .map(c => ({\n          ...c,\n          data: c.data.filter(id =>\n            (messages_final_result ?? messages).some(m => m.id === id)\n          ),\n        }))\n        .filter(\n          c => categories.some(ca => ca.name === c.name) || c.data.length > 0\n        );\n      set_categories(categories_final);\n    }\n    if (uncat_result) {\n      set_uncat_msgs(\n        get_uncategorized_messages(\n          messages_final_result ?? messages,\n          categories_final ?? categories,\n          uncat_result\n        )\n      );\n    }\n    let sections_final: TTS.SnippetsSection[] | undefined;\n    if (sections_final_result) {\n      sections_final = sections_final_result\n        .map(s => ({\n          ...s,\n          data: s.data.filter(id =>\n            (snippets_final_result ?? snippets).some(sn => sn.id === id)\n          ),\n        }))\n        .filter(\n          c =>\n            snippets_sections.some(ca => ca.name === c.name) ||\n            c.data.length > 0\n        );\n      set_snippets_sections(sections_final);\n    }\n\n    set_success(true);\n  }, [\n    settings_result,\n    messages_final_result,\n    snippets_final_result,\n    sections_final_result,\n    snippets_sections,\n    categories_result_initial,\n    categories,\n    messages,\n  ]);\n\n  useEffect(() => {\n    if (!parsed_data) {\n      return;\n    }\n\n    if (\n      dup_messages.length === 0 &&\n      rename_messages.length === 0 &&\n      dup_snippets.length === 0 &&\n      uncategorized_snippets.length === 0\n    ) {\n      if (settings_result) {\n        set_settings(settings_result);\n      }\n      if (messages_result_initial) {\n        set_messages(messages_result_initial);\n      }\n      if (snippets_result_initial) {\n        set_snippets(snippets_result_initial);\n      }\n      if (categories_result_initial) {\n        set_categories(categories_result_initial);\n      }\n      if (sections_result_initial) {\n        set_snippets_sections(sections_result_initial);\n      }\n      if (uncat_result) {\n        set_uncat_msgs(\n          get_uncategorized_messages(\n            messages_result_initial ?? messages,\n            categories_result_initial ?? categories,\n            uncat_result\n          ),\n          categories_result_initial ?? categories\n        );\n      }\n      set_success(true);\n    }\n\n    if (messages_result_initial) {\n      set_messages_dupes_result(messages_result_initial);\n      set_messages_final_result(messages_result_initial);\n    } else if (dup_messages.length !== 0 && rename_messages.length !== 0) {\n      set_messages_dupes_result(messages);\n      set_messages_final_result(messages);\n    } else if (dup_messages.length === 0 && rename_messages.length > 0) {\n      set_messages_dupes_result(messages);\n    }\n\n    if (sections_result_initial) {\n      set_sections_final_result(sections_result_initial);\n    }\n\n    if (snippets_result_initial) {\n      set_snippets_dupes_result(snippets_result_initial);\n      set_snippets_final_result(snippets_result_initial);\n    } else if (\n      dup_snippets.length !== 0 ||\n      uncategorized_snippets.length !== 0\n    ) {\n      set_snippets_dupes_result(snippets);\n      set_snippets_final_result(snippets);\n    } else if (dup_snippets.length === 0 && uncategorized_snippets.length > 0) {\n      set_snippets_dupes_result(snippets);\n    }\n  }, [parsed_data]);\n\n  const steps = useMemo(() => {\n    const arr = [];\n    if (dup_messages.length !== 0) {\n      arr.push(\n        <ImportDuplicateMessages\n          current={step === arr.length}\n          duplicates={dup_messages}\n          messages={messages_result_initial ?? messages}\n          updateMessages={set_messages_dupes_result}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    if (rename_messages.length !== 0) {\n      arr.push(\n        <ImportRenameMessages\n          current={step === arr.length}\n          messages={messages_dupes_result}\n          updateMessages={set_messages_final_result}\n          duplicates={rename_messages}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    if (dup_snippets.length !== 0) {\n      arr.push(\n        <ImportDuplicateSnippets\n          sections={sections_result_initial ?? snippets_sections}\n          current={step === arr.length}\n          snippets={snippets_result_initial ?? snippets}\n          updateSnippets={set_snippets_dupes_result}\n          duplicates={dup_snippets}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    if (uncategorized_snippets.length !== 0) {\n      arr.push(\n        <ImportUncategorizedSnippets\n          current={step === arr.length}\n          sections={sections_result_initial}\n          updateSections={set_sections_final_result}\n          snippets={snippets_dupes_result}\n          updateSnippets={set_snippets_final_result}\n          uncategorized={uncategorized_snippets}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    return arr;\n  }, [\n    step,\n    dup_messages,\n    rename_messages,\n    dup_snippets,\n    uncategorized_snippets,\n    messages_result_initial,\n    messages_dupes_result,\n    snippets_result_initial,\n    snippets_dupes_result,\n  ]);\n\n  useEffect(() => {\n    if (step > 0 && step === steps.length) {\n      on_finish();\n    }\n  }, [step]);\n\n  if (!parsed_data) {\n    return (\n      <div className=\"modal-body tts-import-file\" data-help=\"import-details\">\n        <ImportFileInput onChange={setData} />\n      </div>\n    );\n  }\n\n  if (success) {\n    return (\n      <Preact.Fragment>\n        <div className=\"modal-body tts-import-file\">\n          <div className=\"tts-import-success\">\n            <h4>Import Successful!</h4>\n            <i className=\"far fa-check-circle\" />\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button\n            className=\"btn btn-large\"\n            onClick={() => {\n              setData(undefined);\n              set_messages_dupes_result(undefined);\n              set_messages_final_result(undefined);\n              set_snippets_dupes_result(undefined);\n              set_snippets_final_result(undefined);\n              set_step(0);\n              set_success(false);\n            }}\n          >\n            Import More\n          </button>\n          <button className=\"btn btn-primary btn-large\" onClick={dismiss}>\n            Finish\n          </button>\n        </div>\n      </Preact.Fragment>\n    );\n  }\n\n  return <Preact.Fragment>{steps}</Preact.Fragment>;\n};\n\nconst ImportFileInput: Preact.FunctionComponent<{\n  onChange: (data: TTS.AnyExportData) => void;\n}> = ({ onChange }) => {\n  const input_ref = useRef<HTMLInputElement>();\n  const form_ref = useRef<HTMLFormElement>();\n\n  const [error, set_error] = useStateIfMounted<string | undefined>(undefined);\n\n  const upload_file = useUploadFiles(onChange, set_error, form_ref);\n  const [dragged, drag_listeners] = useDragAndDrop(upload_file);\n\n  return (\n    <form ref={form_ref}>\n      <div\n        data-dragged={`${dragged}`}\n        className=\"tts-import-input\"\n        onClick={() => input_ref.current?.click()}\n        {...drag_listeners}\n      >\n        <div className=\"tts-import-input-main\">\n          <i className=\"fas fa-file-upload\" />\n          <div className=\"tts-import-input-text\">\n            <span>Drag & Drop</span>\n            <span>OR</span>\n            <span>Click to Browse</span>\n          </div>\n        </div>\n        {error && <div className=\"tts-import-input-error\">{error}</div>}\n      </div>\n      <input\n        ref={input_ref}\n        id=\"tts-import-input\"\n        className=\"invisible\"\n        type=\"file\"\n        tabIndex={-1}\n        multiple={true}\n        onChange={e => {\n          // @ts-expect-error:\n          upload_file(e.target.files);\n        }}\n        accept=\"application/json\"\n      />\n    </form>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { replace_item_in } from \"~/common\";\nimport { is_duplicate_message } from \"~/view/components\";\nimport { useMessageFullText, useStateRef, useStateWithRef } from \"~/view/utils\";\n\ninterface DuplicateMessageRow {\n  old_message: TTS.Message;\n  new_message: TTS.Message;\n  selected: \"old\" | \"new\" | undefined;\n}\n\nexport const ImportDuplicateMessages: Preact.FunctionComponent<{\n  current: boolean;\n  messages: TTS.Message[];\n  updateMessages: (messages: TTS.Message[]) => void;\n  duplicates: TTS.Message[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  current,\n  messages,\n  updateMessages,\n  duplicates,\n  nextStep,\n  prevStep,\n}) => {\n  const result_ref = useRef<DuplicateMessageRow[]>();\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    \"old\" | \"new\" | undefined\n  >(undefined);\n\n  const items = useMemo<DuplicateMessageRow[]>(\n    () =>\n      duplicates\n        .map(d => {\n          const orig = messages?.find(m => is_duplicate_message(m, d));\n          if (!orig) {\n            return null;\n          }\n          const existing_row = result_ref.current?.find(\n            r =>\n              r.new_message.name === d.name && r.old_message.name === orig.name\n          );\n          return {\n            old_message: orig,\n            new_message: d,\n            selected: select_all_ref.current ?? existing_row?.selected,\n          };\n        })\n        .filter(a => !!a),\n    [messages, duplicates]\n  );\n\n  const [result, set_result] = useStateWithRef(items, result_ref);\n\n  useEffect(() => {\n    if (!select_all) {\n      return;\n    }\n    set_result(result.map(r => ({ ...r, selected: select_all })));\n  }, [select_all]);\n\n  const on_select = useCallback(\n    (row: DuplicateMessageRow, selected: \"old\" | \"new\") => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          r =>\n            r.new_message.name === row.new_message.name &&\n            r.old_message.name === row.old_message.name,\n          {\n            ...row,\n            selected,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(() => result.every(r => !!r.selected), [result]);\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!finished) {\n        return;\n      }\n      let output = messages;\n      for (let row of result) {\n        if (row.selected === \"new\") {\n          output = replace_item_in(\n            output,\n            m => m.name === row.old_message.name,\n            row.new_message\n          );\n        }\n      }\n      updateMessages(output);\n      nextStep();\n    },\n    [finished, result]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts\">\n        <p>\n          Some of the messages you imported were identical to existing messages,\n          but with different names. Choose the name you want to keep.\n        </p>\n        <form\n          id=\"duplicate-message-form\"\n          onSubmit={on_submit}\n          className=\"tts-import-compare modal-scroll-content\"\n        >\n          <div className=\"tts-import-compare-row\">\n            <div className=\"tts-import-compare-row-top\">\n              <div className=\"tts-import-compare-side\">\n                <label\n                  className=\"tts-import-compare-header\"\n                  data-static={items.length === 1}\n                >\n                  <div className=\"tts-import-compare-header-label\">\n                    Keep Original Name\n                  </div>\n                  {items.length > 1 && (\n                    <span className=\"tts-import-compare-header-input\">\n                      <input\n                        type=\"radio\"\n                        value=\"old\"\n                        name=\"select_all\"\n                        checked={select_all === \"old\"}\n                        onChange={() => set_select_all(\"old\")}\n                      />\n                      Select All\n                    </span>\n                  )}\n                </label>\n              </div>\n              <div\n                className=\"tts-import-compare-side\"\n                data-static={items.length === 1}\n              >\n                <label className=\"tts-import-compare-header\">\n                  <div className=\"tts-import-compare-header-label\">\n                    Use Imported Name\n                  </div>\n                  {items.length > 1 && (\n                    <span className=\"tts-import-compare-header-input\">\n                      <input\n                        type=\"radio\"\n                        value=\"new\"\n                        name=\"select_all\"\n                        checked={select_all === \"new\"}\n                        onChange={() => set_select_all(\"new\")}\n                      />\n                      Select All\n                    </span>\n                  )}\n                </label>\n              </div>\n            </div>\n          </div>\n          {result.map((row, i) => (\n            <ImportMessageCompareItem key={i} row={row} onSelect={on_select} />\n          ))}\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          className=\"btn btn-primary btn-large\"\n          form=\"duplicate-message-form\"\n          disabled={!finished}\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportMessageCompareItem: Preact.FunctionComponent<{\n  row: DuplicateMessageRow;\n  onSelect: (row: DuplicateMessageRow, selected: \"old\" | \"new\") => void;\n}> = ({ row, onSelect }) => {\n  const { old_message, new_message, selected } = row;\n  const text = useMessageFullText(old_message);\n\n  return (\n    <div className=\"tts-import-compare-row\">\n      <div className=\"tts-import-compare-row-top\">\n        <div\n          className=\"tts-import-compare-side\"\n          data-selected={`${selected === \"old\"}`}\n        >\n          <label className=\"btn btn-with-icon btn-large\">\n            <input\n              type=\"radio\"\n              value={old_message.name}\n              checked={selected === \"old\"}\n              onChange={() => onSelect(row, \"old\")}\n              className=\"tts-import-compare-message-old\"\n            />\n            <div className=\"tts-import-compare-message-name\">\n              {old_message.name}\n            </div>\n          </label>\n        </div>\n        <div\n          className=\"tts-import-compare-side\"\n          data-selected={`${selected === \"new\"}`}\n        >\n          <label className=\"btn btn-with-icon btn-large\">\n            <input\n              type=\"radio\"\n              value={new_message.name}\n              checked={selected === \"new\"}\n              onChange={() => onSelect(row, \"new\")}\n              className=\"tts-import-compare-message-new\"\n            />\n            <div className=\"tts-import-compare-message-name\">\n              {new_message.name}\n            </div>\n          </label>\n        </div>\n      </div>\n      <div className=\"tts-import-compare-row-bottom\">\n        <div className=\"tts-import-compare-message-text tts-text\">{text}</div>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { deep_equals, replace_item_in } from \"~/common\";\nimport { is_duplicate_snippet, Snippet } from \"~/view/components\";\nimport { useStateRef, useStateWithRef } from \"~/view/utils\";\n\ninterface DuplicateSnippet {\n  old_section: TTS.SnippetsSection;\n  new_section: TTS.SnippetsSection;\n  old_snippet: TTS.Snippet;\n  new_snippet: TTS.Snippet;\n  selected: \"old\" | \"new\" | undefined;\n}\n\nexport const ImportDuplicateSnippets: Preact.FunctionComponent<{\n  current: boolean;\n  snippets: TTS.Snippet[];\n  sections: TTS.SnippetsSection[];\n  updateSnippets: (snippets: TTS.Snippet[]) => void;\n  duplicates: TTS.Snippet[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  current,\n  snippets,\n  sections,\n  updateSnippets,\n  duplicates,\n  nextStep,\n  prevStep,\n}) => {\n  const result_ref = useRef<DuplicateSnippet[]>();\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    \"old\" | \"new\" | undefined\n  >(undefined);\n\n  const items = useMemo<DuplicateSnippet[]>(\n    () =>\n      duplicates\n        .map(snip => {\n          const orig_snip = snippets.find(s => is_duplicate_snippet(s, snip));\n          if (!orig_snip) {\n            return null;\n          }\n          const existing_row = result_ref.current?.find(r =>\n            deep_equals(r.new_snippet, snip)\n          );\n          return {\n            old_section: sections.find(s => s.data.includes(orig_snip.id)),\n            new_section: sections.find(s => s.data.includes(snip.id)),\n            old_snippet: orig_snip,\n            new_snippet: snip,\n            selected: select_all_ref.current ?? existing_row?.selected,\n          };\n        })\n        .filter(r => !!r),\n    [snippets, duplicates, sections]\n  );\n\n  const [result, set_result] = useStateWithRef(items, result_ref);\n\n  useEffect(() => {\n    if (!select_all) {\n      return;\n    }\n    set_result(result.map(s => ({ ...s, selected: select_all })));\n  }, [select_all]);\n\n  const on_select = useCallback(\n    (row: DuplicateSnippet, selected: \"old\" | \"new\") => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          r => deep_equals(r.new_snippet, row.new_snippet),\n          {\n            ...row,\n            selected,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(() => result.every(s => !!s.selected), [result]);\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!finished) {\n        return;\n      }\n      let output = snippets;\n      for (let row of result) {\n        if (row.selected === \"new\") {\n          if (!row.new_section) {\n            row.new_snippet.id = row.old_snippet.id;\n          }\n          output = replace_item_in(\n            output,\n            s => s.id === row.old_snippet.id,\n            row.new_snippet\n          );\n        }\n      }\n\n      updateSnippets(output);\n      nextStep();\n    },\n    [finished, result, snippets]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts tts-import-snippets-duplicates\">\n        <p>\n          Some of the snippets you imported had the same content, but with\n          different options. Choose the version you want to keep.\n        </p>\n        <form\n          id=\"duplicate-snippet-form\"\n          onSubmit={on_submit}\n          className=\"tts-import-compare tts-import-compare-snippets modal-scroll-content\"\n        >\n          <table cellSpacing={0}>\n            <thead>\n              <tr className=\"tts-import-compare-row\">\n                <th className=\"tts-import-compare-side\">\n                  <label\n                    className=\"tts-import-compare-header\"\n                    data-static={items.length === 1}\n                  >\n                    <div className=\"tts-import-compare-header-label\">\n                      Keep Original Snippet\n                    </div>\n                    {items.length > 1 && (\n                      <span className=\"tts-import-compare-header-input\">\n                        <input\n                          type=\"radio\"\n                          value=\"old\"\n                          name=\"select_all\"\n                          checked={select_all === \"old\"}\n                          onChange={() => set_select_all(\"old\")}\n                        />\n                        Select All\n                      </span>\n                    )}\n                  </label>\n                </th>\n                <th\n                  className=\"tts-import-compare-side\"\n                  data-static={items.length === 1}\n                >\n                  <label className=\"tts-import-compare-header\">\n                    <div className=\"tts-import-compare-header-label\">\n                      Use Imported Snippet\n                    </div>\n                    {items.length > 1 && (\n                      <span className=\"tts-import-compare-header-input\">\n                        <input\n                          type=\"radio\"\n                          value=\"new\"\n                          name=\"select_all\"\n                          checked={select_all === \"new\"}\n                          onChange={() => set_select_all(\"new\")}\n                        />\n                        Select All\n                      </span>\n                    )}\n                  </label>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.map((s, i) => (\n                <ImportSnippetCompareItem\n                  key={i}\n                  row={s}\n                  onSelect={on_select}\n                />\n              ))}\n            </tbody>\n          </table>\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          disabled={!finished}\n          className=\"btn btn-primary btn-large\"\n          form=\"duplicate-snippet-form\"\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportSnippetCompareItem: Preact.FunctionComponent<{\n  row: DuplicateSnippet;\n  onSelect: (row: DuplicateSnippet, selected: \"old\" | \"new\") => void;\n}> = ({ row, onSelect }) => {\n  const { old_snippet, new_snippet, selected } = row;\n\n  return (\n    <tr className=\"tts-import-compare-row\">\n      <td\n        className=\"tts-import-compare-side\"\n        data-selected={`${selected === \"old\"}`}\n      >\n        <label className=\"btn btn-with-icon btn-large\">\n          <input\n            type=\"radio\"\n            checked={selected === \"old\"}\n            onChange={() => onSelect(row, \"old\")}\n            className=\"tts-import-compare-snippet-old\"\n          />\n          <div className=\"tts-import-compare-snippet\">\n            <Snippet data={old_snippet} showRepeats={true} />\n          </div>\n        </label>\n      </td>\n      <td\n        className=\"tts-import-compare-side\"\n        data-selected={`${selected === \"new\"}`}\n      >\n        <label className=\"btn btn-with-icon btn-large\">\n          <input\n            type=\"radio\"\n            checked={selected === \"new\"}\n            onChange={() => onSelect(row, \"new\")}\n            className=\"tts-import-compare-snippet-new\"\n          />\n          <div className=\"tts-import-compare-snippet\">\n            <Snippet data={new_snippet} showRepeats={true} />\n          </div>\n        </label>\n      </td>\n    </tr>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useEffect } from \"preact/hooks\";\nimport { ImportExportModal, useModal } from \"~/view/components\";\n\nexport const ImportExport: Preact.FunctionComponent<{\n  importData: TTS.AnyExportData;\n  setImportData: (data: TTS.AnyExportData | null) => void;\n}> = ({ importData, setImportData }) => {\n  const [ModalContainer, toggle_modal] = useModal();\n\n  useEffect(() => {\n    if (importData) {\n      toggle_modal(true);\n    }\n  }, [importData]);\n\n  return (\n    <Preact.Fragment>\n      <button\n        className=\"header-button tts-export-button\"\n        onClick={() => toggle_modal(true)}\n        title=\"Import/Export\"\n        data-help=\"import-export-overview\"\n      >\n        <i className=\"fas fa-share-square\" />\n      </button>\n      <ModalContainer>\n        <ImportExportModal\n          importData={importData}\n          setImportData={setImportData}\n          dismiss={() => {\n            if (toggle_modal(false)) {\n              setImportData(null);\n            }\n          }}\n        />\n      </ModalContainer>\n    </Preact.Fragment>\n  );\n};\n","import * as Preact from \"preact\";\nimport { ExportForm, ImportForm, Modal } from \"~/view/components\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const ImportExportModal: Preact.FunctionComponent<{\n  dismiss: () => void;\n  importData?: any;\n  exportData?: any;\n  setImportData: (data: TTS.AnyExportData | null) => void;\n}> = ({ importData, setImportData, dismiss }) => {\n  const [tab, set_tab] = useStateIfMounted<\"import\" | \"export\">(\n    importData ? \"import\" : \"export\"\n  );\n\n  return (\n    <Modal id=\"tts-export-modal\" className=\"tts-export-modal\" dismiss={dismiss}>\n      <div className=\"modal-header modal-header-tabs\">\n        <button\n          className=\"modal-header-tab\"\n          data-active={`${tab === \"import\"}`}\n          onClick={() => set_tab(\"import\")}\n        >\n          Import\n        </button>\n        <button\n          className=\"modal-header-tab\"\n          data-active={`${tab === \"export\"}`}\n          onClick={() => set_tab(\"export\")}\n        >\n          Export\n        </button>\n        <button className=\"icon-button modal-close\" onClick={dismiss}>\n          <i className=\"fas fa-times\" />\n        </button>\n      </div>\n      {tab === \"export\" ? (\n        <ExportForm dismiss={dismiss} />\n      ) : (\n        <ImportForm\n          data={importData}\n          setData={setImportData}\n          dismiss={dismiss}\n        />\n      )}\n    </Modal>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { replace_item_in } from \"~/common\";\nimport {\n  useDebounce,\n  useStateIfMounted,\n  useStateRef,\n  useStateWithRef,\n  useValueRef,\n} from \"~/view/utils\";\n\ninterface RenameMessageRow {\n  message: TTS.Message;\n  name: string;\n  discard: boolean;\n  invalid: boolean;\n}\n\nexport const ImportRenameMessages: Preact.FunctionComponent<{\n  current: boolean;\n  messages: TTS.Message[];\n  updateMessages: (messages: TTS.Message[]) => void;\n  duplicates: TTS.Message[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  messages,\n  updateMessages,\n  duplicates: _duplicates,\n  nextStep,\n  prevStep,\n  current,\n}) => {\n  const result_ref = useRef<RenameMessageRow[]>();\n  const messages_ref = useValueRef(messages);\n  const is_invalid = useCallback(\n    (name: string, message: TTS.Message) =>\n      name === message.name ||\n      !!messages_ref.current.find(m => m.name === name) ||\n      !!result_ref.current?.find(\n        m => m.name === name && !m.discard && m.message.name !== message.name\n      ),\n    []\n  );\n\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    boolean | undefined\n  >(undefined);\n\n  const duplicates = useMemo<RenameMessageRow[]>(\n    () =>\n      _duplicates\n        ?.filter(d => messages?.find(m => m.name === d.name))\n        .map(d => {\n          const existing_row = result_ref.current?.find(\n            r => r.message.name === d.name\n          );\n          return {\n            message: d,\n            name: \"\",\n            discard: select_all_ref.current ?? false,\n            ...(existing_row ?? {}),\n            invalid: existing_row\n              ? is_invalid(existing_row.name, existing_row.message)\n              : false,\n          };\n        }),\n    [_duplicates, messages]\n  );\n\n  const [result, set_result] = useStateWithRef(duplicates, result_ref);\n  useEffect(() => {\n    set_result(duplicates);\n  }, [duplicates]);\n\n  useEffect(() => {\n    if (select_all == null) {\n      return;\n    }\n    set_result(result.map(r => ({ ...r, discard: select_all })));\n  }, [select_all]);\n\n  const on_change_name = useCallback((row: RenameMessageRow, name: string) => {\n    set_result(\n      replace_item_in(\n        result_ref.current,\n        m => m.message.name === row.message.name,\n        {\n          ...row,\n          name,\n          invalid: is_invalid(name, row.message),\n        }\n      )\n    );\n  }, []);\n\n  const on_change_discard = useCallback(\n    (row: RenameMessageRow, discard: boolean) => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          m => m.message.name === row.message.name,\n          {\n            ...row,\n            discard,\n            invalid: is_invalid(row.name, row.message),\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(\n    () =>\n      result.every(\n        r => (r.name && r.name !== r.message.name && !r.invalid) || r.discard\n      ),\n    [result]\n  );\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!e.target.checkValidity() || !finished) {\n        e.target.reportValidity();\n        return;\n      }\n      const output = messages.concat(\n        result\n          .filter(r => !r.discard && !r.invalid)\n          .map(r => ({ ...r.message, name: r.name }))\n      );\n      updateMessages(output);\n      nextStep();\n    },\n    [result, finished]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts\">\n        <p>\n          Some of the messages you imported had identical names to existing\n          messages but different content. Rename or discard these messages.\n        </p>\n        <form\n          id=\"import-rename-form\"\n          className=\"tts-import-rename modal-scroll-content\"\n          onSubmit={on_submit}\n        >\n          <table cellSpacing={0}>\n            <thead>\n              <tr className=\"tts-import-rename-row\">\n                <th className=\"tts-import-rename-message\">Message</th>\n                <th className=\"tts-import-rename-name\">New Name</th>\n                <th className=\"tts-import-rename-discard\">\n                  <label>\n                    Discard\n                    <input\n                      type=\"checkbox\"\n                      checked={select_all}\n                      onChange={() => set_select_all(!select_all)}\n                    />\n                  </label>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.map(r => (\n                <ImportMessageRenameItem\n                  key={r.message.id}\n                  {...r}\n                  onChangeName={on_change_name}\n                  onChangeDiscard={on_change_discard}\n                />\n              ))}\n            </tbody>\n          </table>\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          disabled={!finished}\n          className=\"btn btn-primary btn-large\"\n          form=\"import-rename-form\"\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportMessageRenameItem: Preact.FunctionComponent<\n  RenameMessageRow & {\n    onChangeName: (row: RenameMessageRow, name: string) => void;\n    onChangeDiscard: (row: RenameMessageRow, discard: boolean) => void;\n  }\n> = ({ onChangeName, onChangeDiscard, ...row }) => {\n  const { message, name, discard, invalid } = row;\n  const [value, set_value] = useStateIfMounted(name ?? message?.name);\n  const [on_change_name] = useDebounce(onChangeName, 80);\n  useEffect(() => {\n    on_change_name(row, value);\n  }, [value]);\n  useEffect(() => {\n    if (name !== value) {\n      set_value(name);\n    }\n  }, [name]);\n\n  return (\n    <tr className=\"tts-import-rename-row\">\n      <td className=\"tts-import-rename-message\">\n        <div className=\"tts-import-compare-message-text tts-text\">\n          {message.text}\n        </div>\n      </td>\n      <td className=\"tts-import-rename-name\">\n        <p>\n          <div>Previous Name:</div>\n          <strong>{message.name}</strong>\n        </p>\n        <div>New Name:</div>\n        <input\n          type=\"text\"\n          value={value}\n          // @ts-expect-error:\n          defaultValue={message.name}\n          required={!discard}\n          // @ts-expect-error:\n          onChange={e => set_value(e.target.value)}\n          disabled={discard}\n          data-invalid={`${!discard && invalid}`}\n        />\n      </td>\n      <td className=\"tts-import-rename-discard\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={discard}\n            onInput={() => onChangeDiscard(row, !discard)}\n          />\n        </label>\n      </td>\n    </tr>\n  );\n};\n","import * as Preact from \"preact\";\nimport { Snippet } from \"~/view/components\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport {\n  useDebounce,\n  useStateIfMounted,\n  useStateRef,\n  useStateWithRef,\n  useValueRef,\n} from \"~/view/utils\";\nimport { add_item_to, deep_equals, replace_item_in } from \"~/common\";\n\ninterface UncategorizedSnippetRow {\n  selected?: TTS.SnippetsSection;\n  snippet: TTS.Snippet;\n  discard?: boolean;\n}\n\nexport const ImportUncategorizedSnippets: Preact.FunctionComponent<{\n  current: boolean;\n  sections: TTS.SnippetsSection[];\n  updateSections: (snippets: TTS.SnippetsSection[]) => void;\n  snippets: TTS.Snippet[];\n  updateSnippets: (snippets: TTS.Snippet[]) => void;\n  uncategorized: TTS.Snippet[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  uncategorized,\n  sections,\n  updateSections,\n  snippets,\n  updateSnippets,\n  nextStep,\n  prevStep,\n  current,\n}) => {\n  const result_ref = useRef<UncategorizedSnippetRow[]>();\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    boolean | undefined\n  >(undefined);\n\n  const items = useMemo<UncategorizedSnippetRow[]>(\n    () =>\n      uncategorized.map(s => ({\n        snippet: s,\n        selected: undefined,\n        discard: false,\n      })),\n    [uncategorized]\n  );\n\n  const [result, set_result] = useStateWithRef(items, result_ref);\n\n  useEffect(() => {\n    if (select_all == null) {\n      return;\n    }\n    set_result(\n      result.map(s => ({\n        ...s,\n        discard: select_all,\n      }))\n    );\n  }, [select_all]);\n\n  const on_select_section = useCallback(\n    (row: UncategorizedSnippetRow, selected?: TTS.SnippetsSection) => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          s => deep_equals(s.snippet, row.snippet),\n          {\n            ...row,\n            selected,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const on_change_discard = useCallback(\n    (row: UncategorizedSnippetRow, discard: boolean) => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          s => deep_equals(s.snippet, row.snippet),\n          {\n            ...row,\n            discard,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(\n    () => result.every(s => !!s.selected || s.discard),\n    [result]\n  );\n\n  const list = useMemo(\n    () =>\n      sections?.concat(\n        result\n          .filter(\n            r =>\n              !!r.selected &&\n              !sections.find(sec => sec.name === r.selected?.name)\n          )\n          .map(r => r.selected)\n      ),\n    [sections, result]\n  );\n\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!finished) {\n        return;\n      }\n      let output = list ?? [];\n      let snippets_output = snippets ?? [];\n      if (select_all_ref.current === true) {\n        nextStep();\n        return;\n      }\n\n      for (let row of result) {\n        if (!row.selected || row.discard) {\n          continue;\n        }\n        if (!snippets_output.some(s => s.id === row.snippet.id)) {\n          snippets_output.push(row.snippet);\n        }\n        const section =\n          output.find(s => s.name === row.selected.name) ?? row.selected;\n        output = replace_item_in(\n          output,\n          s => s.name === row.selected.name,\n          {\n            ...section,\n            data: add_item_to(section.data, row.snippet.id),\n          },\n          \"end\"\n        );\n      }\n      updateSections(output);\n      updateSnippets(\n        snippets_output.filter(sn => output.some(s => s.data.includes(sn.id)))\n      );\n      nextStep();\n    },\n    [finished, result, sections, snippets]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts tts-import-snippets-uncategorized\">\n        <p>\n          Some of the snippets you imported were not part of a group. Choose or\n          create a group to add each snippet to.\n        </p>\n        <form\n          id=\"uncategorized-snippet-form\"\n          onSubmit={on_submit}\n          className=\"tts-import-rename tts-import-categorize-snippets modal-scroll-content\"\n        >\n          <table cellSpacing={0}>\n            <thead>\n              <tr className=\"tts-import-compare-row\">\n                <th className=\"tts-import-snippet-col\">Snippet</th>\n                <th className=\"tts-import-snippet-select-section\">Section</th>\n                <th className=\"tts-import-rename-discard\">\n                  <label>\n                    Discard\n                    <input\n                      type=\"checkbox\"\n                      checked={select_all}\n                      onChange={() => set_select_all(!select_all)}\n                    />\n                  </label>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.map((s, i) => (\n                <ImportSnippetCategorizeItem\n                  key={i}\n                  row={s}\n                  sections={list}\n                  onChangeDiscard={on_change_discard}\n                  onSelect={on_select_section}\n                />\n              ))}\n            </tbody>\n          </table>\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          disabled={!finished}\n          className=\"btn btn-primary btn-large\"\n          form=\"uncategorized-snippet-form\"\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportSnippetCategorizeItem: Preact.FunctionComponent<{\n  row: UncategorizedSnippetRow;\n  sections: TTS.SnippetsSection[];\n  onSelect: (\n    row: UncategorizedSnippetRow,\n    selected: TTS.SnippetsSection\n  ) => void;\n  onChangeDiscard: (row: UncategorizedSnippetRow, discard: boolean) => void;\n}> = ({ row, sections, onSelect, onChangeDiscard }) => {\n  const { snippet, selected, discard } = row;\n  const row_ref = useValueRef(row);\n\n  const [value, set_value] = useStateIfMounted(selected?.name ?? \"\");\n  const on_change = useCallback(\n    (name: string) => {\n      if (!name.trim()) {\n        onSelect(row_ref.current, undefined);\n        return;\n      }\n      const section: TTS.SnippetsSection = sections.find(\n        s => s.name === name\n      ) ?? {\n        name,\n        open: false,\n        data: [],\n      };\n      onSelect(row_ref.current, section);\n    },\n    [onSelect, sections]\n  );\n  const [on_change_debounced] = useDebounce(on_change, 100);\n\n  useEffect(() => {\n    on_change_debounced(value);\n  }, [value]);\n\n  return (\n    <tr className=\"tts-import-compare-row\">\n      <td className=\"tts-import-categorize-snippet\">\n        <Snippet data={snippet} showRepeats={true} />\n      </td>\n      <td className=\"tts-import-categorize-section\">\n        <label className=\"tts-import-categorize-section-input\">\n          <input\n            id=\"categorize-input\"\n            value={value}\n            // @ts-expect-error\n            onChange={e => set_value(e.target.value)}\n            list=\"categories-list\"\n            disabled={discard}\n            autocomplete=\"off\"\n          />\n          <datalist id=\"categories-list\">\n            {sections?.map(s => (\n              <option key={s.name} value={s.name}>\n                {s.name}\n              </option>\n            ))}\n          </datalist>\n        </label>\n      </td>\n      <td className=\"tts-import-rename-discard\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={discard}\n            onInput={() => onChangeDiscard(row, !discard)}\n          />\n        </label>\n      </td>\n    </tr>\n  );\n};\n","import { deep_equals, generate_id } from \"~/common\";\nimport {\n  conform_to_schema,\n  MESSAGE_CATEGORY_SCHEMA,\n  MESSAGE_SCHEMA,\n  SETTINGS_SCHEMA,\n  SNIPPET_SCHEMA,\n  SNIPPET_SECTION_SCHEMA,\n} from \"~/model\";\nimport { get_uncategorized_messages, snippet_to_string } from \"~/view/utils\";\n\nconst MAX_TYPE_CHECK_DEPTH = 6;\nexport const MESSAGE_DUPE_PROPS: readonly (keyof TTS.MessageOptions)[] = [\n  \"speed\",\n  \"max_length\",\n] as const;\nexport const SNIPPET_DUPE_PROPS: readonly (keyof TTS.SnippetOptions)[] = [\n  \"prefix\",\n  \"suffix\",\n];\n\nexport const export_messages = (\n  data: TTS.Message[]\n): TTS.ExportData[\"messages\"] => {\n  return data.map(m => ({\n    ...conform_to_schema(m, MESSAGE_SCHEMA),\n    __type: \"message\",\n  }));\n};\n\nexport const export_message_category = (\n  data: TTS.MessageCategory\n): TTS.ExportedMessageCategory => {\n  return {\n    ...conform_to_schema(data, MESSAGE_CATEGORY_SCHEMA),\n    __type: \"message-category\",\n  };\n};\n\nexport const export_message_categories = (\n  data: TTS.MessageCategory[]\n): TTS.ExportData[\"messageCategories\"] => data.map(export_message_category);\n\nexport const export_snippet = (data: TTS.Snippet) => ({\n  ...conform_to_schema(data, SNIPPET_SCHEMA),\n  __type: \"snippet\" as const,\n});\n\nexport const export_snippets = (\n  data: TTS.Snippet[]\n): TTS.ExportData[\"snippets\"] => {\n  return data.map(export_snippet);\n};\n\nexport const export_snippets_section = (data: TTS.SnippetsSection) => ({\n  ...conform_to_schema(data, SNIPPET_SECTION_SCHEMA),\n  __type: \"snippets-section\" as const,\n});\n\nexport const export_snippets_sections = (\n  data: TTS.SnippetsSection[]\n): TTS.ExportData[\"snippetsSections\"] => {\n  return data.map(export_snippets_section);\n};\n\nexport const generate_file = (data: object) => JSON.stringify(data, null, \"  \");\n\nexport const is_duplicate_message = (a: TTS.Message, b: TTS.Message) =>\n  a.text === b.text && MESSAGE_DUPE_PROPS.every(k => a[k] === b[k]);\n\nexport const is_duplicate_snippet = (a: TTS.Snippet, b: TTS.Snippet) =>\n  a.text === b.text &&\n  SNIPPET_DUPE_PROPS.every(k => a.options[k] === b.options[k]);\n\nexport const import_data = (\n  data: TTS.AnyExportData,\n  settings: TTS.EditorSettings,\n  messages: TTS.Message[],\n  snippets: TTS.Snippet[],\n  categories: TTS.MessageCategory[],\n  uncategorized_msgs: TTS.MessageCategory,\n  snippets_sections: TTS.SnippetsSection[]\n) => {\n  let new_messages: TTS.Message[] = [];\n  let new_categories: TTS.MessageCategory[] = [];\n  let new_snippets: TTS.Snippet[] = [];\n  let new_snippets_sections: TTS.SnippetsSection[] = [];\n  let new_uncategorized_msgs: TTS.MessageCategory = {\n    ...uncategorized_msgs,\n    data: [...uncategorized_msgs.data],\n  };\n\n  const dup_messages: TTS.Message[] = [];\n  const rename_messages: TTS.Message[] = [];\n  const merge_categories: TTS.MessageCategory[] = [];\n  const dup_snippets: TTS.Snippet[] = [];\n  const merge_snippet_sections: TTS.SnippetsSection[] = [];\n\n  const process_message = (msg: TTS.Message) => {\n    const dupe =\n      messages.find(m => is_duplicate_message(m, msg)) ||\n      new_messages.find(m => is_duplicate_message(m, msg));\n    const name_taken =\n      messages.find(m => m.name === msg.name) ||\n      new_messages.find(m => m.name === msg.name);\n    if (dupe) {\n      if (dupe.name !== msg.name && !name_taken) {\n        dup_messages.push(msg);\n      }\n      return msg.id;\n    }\n\n    if (\n      messages.find(m => m.id === msg.id) ||\n      new_messages.find(m => m.id === msg.id)\n    ) {\n      msg = {\n        ...msg,\n        id: generate_id(msg.name),\n      };\n    }\n    if (name_taken) {\n      rename_messages.push(msg);\n    } else {\n      new_messages.push(msg);\n    }\n    return msg.id;\n  };\n\n  const process_message_category = (\n    cat: TTS.MessageCategory | TTS.MessageCategoryPopulated\n  ) => {\n    const all_cats = categories.concat(new_categories);\n\n    if (cat.name === uncategorized_msgs.name) {\n      const category = {\n        ...uncategorized_msgs,\n        data: [...uncategorized_msgs.data],\n      };\n      cat.data.forEach(m => {\n        let id: string = m;\n        if (typeof m !== \"string\") {\n          const { __type, ...msg } = m;\n          id = process_message(msg);\n        }\n        if (\n          !all_cats.find(c => c.data.includes(id)) &&\n          !uncategorized_msgs.data.includes(id)\n        ) {\n          category.data.push(id);\n        }\n      });\n      new_uncategorized_msgs = category;\n\n      return;\n    }\n\n    const existing = new_categories.find(c => c.name == cat.name);\n\n    const category = existing ??\n      categories.find(c => c.name === cat.name) ?? {\n        ...cat,\n        data: [],\n      };\n\n    cat.data.forEach(m => {\n      let id: string = m;\n      if (typeof m !== \"string\") {\n        const { __type, ...msg } = m;\n        id = process_message(msg);\n      }\n      if (!all_cats.find(c => c.data.includes(id))) {\n        category.data.push(id);\n      }\n    });\n\n    if (!existing) {\n      new_categories.push(category);\n    }\n    return category;\n  };\n\n  const process_snippet = (snip: TTS.Snippet) => {\n    const dupe =\n      snippets.find(s => is_duplicate_snippet(s, snip)) ||\n      new_snippets.find(s => is_duplicate_snippet(s, snip));\n    const exact =\n      !!dupe &&\n      deep_equals(\n        { ...snip, id: \"\" },\n        conform_to_schema({ ...dupe, id: \"\" }, SNIPPET_SCHEMA)\n      );\n\n    if (dupe) {\n      if (!exact && !dup_snippets.some(s => is_duplicate_snippet(snip, s))) {\n        dup_snippets.push(snip);\n      }\n      return snip.id;\n    }\n\n    if (\n      snippets.some(s => s.id === snip.id) ||\n      new_snippets.some(s => s.id === snip.id) /*||\n      dup_snippets.some(s => s.id === snip.id)*/\n    ) {\n      snip = {\n        ...snip,\n        id: generate_id(snippet_to_string(snip)),\n      };\n    }\n\n    new_snippets.push(snip);\n    return snip.id;\n  };\n\n  const process_snippets_section = (\n    sec: TTS.SnippetsSection | TTS.SnippetsSectionPopulated\n  ) => {\n    const all_sects = snippets_sections.concat(new_snippets_sections);\n\n    const existing = new_snippets_sections.find(s => s.name === sec.name);\n    const section = existing ??\n      snippets_sections.find(s => s.name === sec.name) ?? {\n        ...sec,\n        data: [],\n      };\n\n    sec.data.forEach(s => {\n      let id: string = s;\n      if (typeof s !== \"string\") {\n        const { __type, ...snip } = s;\n        id = process_snippet(snip);\n      }\n      if (!all_sects.find(s => s.data.includes(id))) {\n        section.data.push(id);\n      }\n    });\n\n    if (!existing) {\n      new_snippets_sections.push(section);\n    }\n    return section;\n  };\n\n  let settings_result: TTS.EditorSettings | undefined;\n  let messages_result: TTS.Message[] | undefined;\n  let categories_result: TTS.MessageCategory[] | undefined;\n  let uncategorized_msgs_result: TTS.MessageCategory | undefined;\n  let snippets_result: TTS.Snippet[] | undefined;\n  let snippets_sections_result: TTS.SnippetsSection[] | undefined;\n  if (!Array.isArray(data)) {\n    if (data.__type === \"export-data\") {\n      const {\n        settings: new_settings,\n        messages: imp_messages,\n        messageCategories: imp_categories,\n        snippets: imp_snippets,\n        snippetsSections: imp_sections,\n      } = data;\n\n      if (new_settings) {\n        const { __type, ...new_settings_ } = new_settings;\n        settings_result = { ...settings, ...new_settings_ };\n      }\n      imp_messages?.forEach(({ __type, ...m }) => {\n        if (__type === \"message\") {\n          process_message(m);\n        }\n      });\n      imp_categories?.forEach(({ __type, ...c }) => {\n        if (__type === \"message-category\") {\n          process_message_category(c as TTS.MessageCategory);\n        }\n      });\n      imp_sections?.forEach(({ __type, ...s }) => {\n        if (__type === \"snippets-section\") {\n          process_snippets_section(s as TTS.SnippetsSection);\n        }\n      });\n      imp_snippets?.forEach(({ __type, ...s }) => {\n        if (__type === \"snippet\") {\n          process_snippet(s);\n        }\n      });\n    } else if (data.__type === \"settings\") {\n      const { __type, ...new_settings } = data;\n      settings_result = { ...settings, ...new_settings };\n    } else if (data.__type === \"message\") {\n      const { __type, ...new_message } = data;\n      process_message(new_message);\n    } else if (data.__type === \"message-category\") {\n      const { __type, ...new_category } = data;\n      // @ts-expect-error:\n      process_message_category(new_category);\n    } else if (data.__type === \"snippets-section\") {\n      const { __type, ...new_section } = data;\n      process_snippets_section(new_section as TTS.SnippetsSection);\n    } else if (data.__type === \"snippet\") {\n      const { __type, ...new_snippet } = data;\n      process_snippet(new_snippet);\n    }\n  } else {\n    data.forEach(({ __type, ...d }) => {\n      if (__type === \"message\") {\n        process_message(d as TTS.Message);\n      } else if (__type === \"message-category\") {\n        process_message_category(d as TTS.MessageCategory);\n      } else if (__type === \"snippets-section\") {\n        process_snippets_section(d as TTS.SnippetsSection);\n      } else if (__type === \"snippet\") {\n        process_snippet(d as TTS.Snippet);\n      } else if (__type === \"settings\") {\n        settings_result = { ...settings, ...d };\n      }\n    });\n  }\n\n  if (new_messages.length > 0) {\n    messages_result = messages.concat(new_messages);\n  }\n\n  new_categories = new_categories\n    .map(c => ({\n      ...c,\n      data: c.data.filter(m =>\n        (messages_result ?? messages)\n          .concat(dup_messages)\n          .concat(rename_messages)\n          .find(\n            msg =>\n              msg.id === (typeof m === \"string\" ? m : (m as TTS.Message).id)\n          )\n      ),\n    }))\n    .filter(nc => {\n      if (nc.data.length === 0 || categories.find(c => c.name === nc.name)) {\n        if (nc.data.length > 0) {\n          merge_categories.push(nc);\n        }\n        return false;\n      }\n      return true;\n    });\n  if (merge_categories.length > 0) {\n    categories_result = categories.map(c => {\n      const new_data = merge_categories.find(nc => nc.name === c.name);\n      if (!new_data) {\n        return c;\n      }\n      return {\n        ...c,\n        data: c.data.concat(\n          new_data.data\n            .map(m => (typeof m === \"string\" ? m : (m as TTS.Message).id))\n            .filter(m => !c.data.includes(m))\n        ),\n      };\n    });\n  }\n  if (new_categories.length > 0) {\n    categories_result = (categories_result ?? categories).concat(\n      new_categories.map(c => ({\n        ...c,\n        data: c.data.map(m =>\n          typeof m === \"string\" ? m : (m as TTS.Message).id\n        ),\n      }))\n    );\n  }\n\n  uncategorized_msgs_result = {\n    ...uncategorized_msgs,\n    data: get_uncategorized_messages(\n      messages_result ?? messages,\n      categories_result ?? categories,\n      new_uncategorized_msgs\n    ).data,\n  };\n\n  const uncategorized_snippets = new_snippets.filter(\n    sn =>\n      !snippets_sections\n        .concat(new_snippets_sections)\n        .concat(merge_snippet_sections)\n        .some(s =>\n          s.data.some(\n            snip =>\n              sn.id ===\n              (typeof snip === \"string\" ? snip : (snip as TTS.Snippet).id)\n          )\n        )\n  );\n  new_snippets = new_snippets.filter(\n    s => !uncategorized_snippets.some(sn => sn.id === s.id)\n  );\n\n  if (new_snippets.length > 0) {\n    snippets_result = snippets.concat(new_snippets);\n  }\n  new_snippets_sections = new_snippets_sections\n    .map(s => ({\n      ...s,\n      data: s.data.filter(sn =>\n        (snippets_result ?? snippets)\n          .concat(dup_snippets)\n          .find(\n            snip =>\n              snip.id === (typeof sn === \"string\" ? sn : (sn as TTS.Snippet).id)\n          )\n      ),\n    }))\n    .filter(ns => {\n      if (\n        ns.data.length === 0 ||\n        snippets_sections.find(s => s.name === ns.name)\n      ) {\n        if (ns.data.length > 0) {\n          merge_snippet_sections.push(ns);\n        }\n        return false;\n      }\n      return true;\n    });\n\n  if (merge_snippet_sections.length > 0) {\n    snippets_sections_result = snippets_sections.map(s => {\n      const new_data = merge_snippet_sections.find(ns => ns.name === s.name);\n      if (!new_data) {\n        return s;\n      }\n      return {\n        ...s,\n        data: s.data.concat(\n          new_data.data\n            .map(sn => (typeof sn === \"string\" ? sn : (sn as TTS.Snippet).id))\n            .filter(sn => !s.data.includes(sn))\n        ),\n      };\n    });\n  }\n  if (new_snippets_sections.length > 0) {\n    snippets_sections_result = (\n      snippets_sections_result ?? snippets_sections\n    ).concat(\n      new_snippets_sections.map(s => ({\n        ...s,\n        data: s.data.map(sn =>\n          typeof sn === \"string\" ? sn : (sn as TTS.Snippet).id\n        ),\n      }))\n    );\n  }\n\n  return [\n    settings_result,\n    messages_result,\n    snippets_result,\n    categories_result,\n    snippets_sections_result,\n    uncategorized_msgs_result,\n    dup_messages,\n    rename_messages,\n    dup_snippets,\n    uncategorized_snippets,\n  ] as const;\n};\n\n// ensure the data has a shape that we expect\nexport const validate_import_data = (\n  data: object | object[],\n  depth: number = 0,\n  expected_type?: string\n): TTS.AnyExportData | null => {\n  if (depth > MAX_TYPE_CHECK_DEPTH) {\n    return null;\n  }\n  if (Array.isArray(data)) {\n    const validated = data\n      .map(d => validate_import_data(d, depth + 1, expected_type))\n      .filter(d => !!d);\n    // if (validated.length > 0 && validated.every((v) => !!v)) {\n    return validated as\n      | TTS.ExportData[\"messages\"]\n      | TTS.ExportData[\"snippets\"]\n      | TTS.ExportData[\"messageCategories\"]\n      | TTS.ExportData[\"snippetsSections\"];\n    // }\n    // return null;\n  }\n\n  if (\n    !(\"__type\" in data) ||\n    typeof data[\"__type\"] !== \"string\" ||\n    (!!expected_type && data[\"__type\"] !== expected_type)\n  ) {\n    return null;\n  }\n\n  if (data[\"__type\"] === \"export-data\") {\n    if (\n      !data[\"snippets\"] &&\n      !data[\"messages\"] &&\n      !data[\"settings\"] &&\n      !data[\"messageCategories\"]\n    ) {\n      return null;\n    }\n    const output: TTS.ExportData = { __type: \"export-data\" };\n    if (data[\"settings\"]) {\n      output.settings = validate_import_data(\n        data[\"settings\"],\n        depth + 1\n      ) as TTS.ExportData[\"settings\"];\n    }\n    if (data[\"messages\"]) {\n      output.messages = validate_import_data(\n        data[\"messages\"],\n        depth + 1,\n        \"message\"\n      ) as TTS.ExportData[\"messages\"];\n    }\n    if (data[\"messageCategories\"]) {\n      const v_categories = validate_import_data(\n        data[\"messageCategories\"],\n        depth + 1,\n        \"message-category\"\n      ) as TTS.ExportData[\"messageCategories\"];\n      if (v_categories) {\n        output.messageCategories = v_categories;\n      }\n    }\n    if (data[\"snippets\"]) {\n      output.snippets = validate_import_data(\n        data[\"snippets\"],\n        depth + 1,\n        \"snippet\"\n      ) as TTS.ExportData[\"snippets\"];\n    }\n    if (data[\"snippetsSections\"]) {\n      output.snippetsSections = validate_import_data(\n        data[\"snippetsSections\"],\n        depth + 1,\n        \"snippets-section\"\n      ) as TTS.ExportData[\"snippetsSections\"];\n    }\n    return output;\n  }\n\n  if (data[\"__type\"] === \"settings\") {\n    return { __type: \"settings\", ...conform_to_schema(data, SETTINGS_SCHEMA) };\n  }\n\n  if (data[\"__type\"] === \"message\") {\n    if (!data[\"id\"] && data[\"name\"]) {\n      data[\"id\"] = generate_id(data[\"name\"]);\n    }\n    return { __type: \"message\", ...conform_to_schema(data, MESSAGE_SCHEMA) };\n  }\n\n  if (data[\"__type\"] === \"message-category\") {\n    const { data: msgs, ...category } = data as TTS.ExportedMessageCategory;\n    // if category.data contains a mix of ids and messages, throw it out\n    // @ts-expect-error:\n    const data_type = msgs.reduce((cur, d) => {\n      const this_type = typeof d === \"string\" ? \"string\" : \"message\";\n      return !cur || cur === this_type ? this_type : \"\";\n    }, \"\");\n    if (data_type === \"string\") {\n      return {\n        __type: \"message-category\",\n        ...conform_to_schema(data, MESSAGE_CATEGORY_SCHEMA),\n      };\n    }\n    if (data_type === \"message\") {\n      return {\n        __type: \"message-category\",\n        ...conform_to_schema(\n          { ...category, data: [] },\n          MESSAGE_CATEGORY_SCHEMA\n        ),\n        data: (msgs as TTS.ExportedMessage[])\n          .filter(m => !!m)\n          .map(m => validate_import_data(m, depth + 1, \"message\")),\n      } as TTS.ExportedMessageCategory;\n    }\n  }\n\n  if (data[\"__type\"] === \"snippet\") {\n    return { __type: \"snippet\", ...conform_to_schema(data, SNIPPET_SCHEMA) };\n  }\n\n  if (data[\"__type\"] === \"snippets-section\") {\n    const { data: snippets, ...section } = data as TTS.ExportedSnippetsSection;\n    // if category.data contains a mix of ids and messages, throw it out\n    // @ts-expect-error:\n    const data_type = snippets.reduce((cur, d) => {\n      const this_type = typeof d === \"string\" ? \"string\" : \"snippet\";\n      return !cur || cur === this_type ? this_type : \"\";\n    }, \"\");\n    if (data_type === \"string\") {\n      return {\n        __type: \"snippets-section\",\n        ...conform_to_schema(data, SNIPPET_SECTION_SCHEMA),\n      };\n    }\n\n    if (data_type === \"snippet\") {\n      return {\n        __type: \"snippets-section\",\n        ...conform_to_schema({ ...section, data: [] }, SNIPPET_SECTION_SCHEMA),\n        data: (snippets as TTS.ExportedSnippet[])\n          .filter(s => !!s)\n          .map(\n            s =>\n              validate_import_data(\n                s,\n                depth + 1,\n                \"snippet\"\n              ) as TTS.ExportedSnippet\n          )\n          .filter(s => !!s),\n      } as TTS.ExportedSnippetsSection;\n    }\n  }\n\n  return null;\n};\n\nexport const import_multiple_files = (\n  ...data: TTS.AnyExportData[]\n): TTS.AnyExportData => {\n  const categories: TTS.ExportData[\"messageCategories\"] = [];\n  const messages: TTS.ExportData[\"messages\"] = [];\n  const snippets: TTS.ExportData[\"snippets\"] = [];\n  let settings: TTS.ExportData[\"settings\"];\n\n  const sort_item = item => {\n    if (item[\"__type\"] === \"export-data\") {\n      if (!item[\"snippets\"] && !item[\"messages\"] && !item[\"settings\"]) {\n        return;\n      }\n      if (item[\"settings\"]) {\n        if (!settings) {\n          // @ts-expect-error:\n          settings = {};\n        }\n        settings = { ...settings, ...item[\"settings\"] };\n      }\n\n      if (item[\"messages\"]) {\n        messages.push(...item[\"messages\"]);\n      }\n\n      if (item[\"messageCategories\"]) {\n        categories.push(...item[\"messageCategories\"]);\n      }\n      if (item[\"snippets\"]) {\n        snippets.push(...item[\"snippets\"]);\n      }\n    } else if (item[\"__type\"] === \"settings\") {\n      return {\n        __type: \"settings\",\n        ...conform_to_schema(data, SETTINGS_SCHEMA),\n      };\n    } else if (item[\"__type\"] === \"message\") {\n      messages.push(item);\n    } else if (item[\"__type\"] === \"message-category\") {\n      categories.push(item);\n    } else if (item[\"__type\"] === \"snippet\") {\n      snippets.push(item);\n    } else if (item[\"__type\"] === \"snippets-section\") {\n      snippets.push(item);\n    }\n  };\n\n  for (let file of data) {\n    if (Array.isArray(file)) {\n      file.forEach(sort_item);\n    } else {\n      sort_item(file);\n    }\n  }\n\n  const output: TTS.AnyExportData = [...messages, ...snippets];\n  if (settings) {\n    output.push(settings);\n  }\n  return output;\n};\n","import * as Preact from \"preact\";\nimport { reset_all_storage } from \"~/common\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const ResetStorage: Preact.FunctionComponent<{ onCancel: () => void }> =\n  ({ onCancel }) => {\n    const [clear_help, set_clear_help] = useStateIfMounted(false);\n    return (\n      <Preact.Fragment>\n        <div className=\"modal-body tts-reset\">\n          <div className=\"tts-reset-icon\">\n            <i className=\"fas fa-exclamation-circle\" />\n          </div>\n          <h1>WARNING</h1>\n          <p>\n            This operation cannot be reversed. Resetting storage will clear all\n            saved messages, snippets, and settings, and restore the default\n            sample data. If there's anything you might want to keep, go back and\n            export the data before resetting.\n          </p>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              className=\"checkbox-input\"\n              checked={clear_help}\n              onInput={() => set_clear_help(!clear_help)}\n            />\n            <span className=\"checkbox-label\">Reset Tutorials</span>\n          </label>\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-large\" onClick={onCancel}>\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-large btn-negative\"\n            onClick={() => reset_all_storage(clear_help)}\n          >\n            Continue\n          </button>\n        </div>\n      </Preact.Fragment>\n    );\n  };\n","export * from \"./Export\";\nexport * from \"./ExportMessage\";\nexport * from \"./ExportMessageCategory\";\nexport * from \"./ExportSnippet\";\nexport * from \"./Import\";\nexport * from \"./ImportDuplicateMessages\";\nexport * from \"./ImportDuplicateSnippets\";\nexport * from \"./ImportExport\";\nexport * from \"./ImportExportModal\";\nexport * from \"./ImportRenameMessages\";\nexport * from \"./ImportUncategorizedSnippets\";\nexport * from \"./utils\";\nexport * from \"./Reset\";\n","import * as Preact from \"preact\";\nimport { REPOSITORY_URL } from \"~/common\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nconst prev_version = localStorage.getItem(\"tts-release-viewed\");\nconst cur_version = process.env.TTS_VERSION;\n\nexport const Footer: Preact.FunctionComponent = () => {\n  const [ver_changed, set_ver_changed] = useStateIfMounted(\n    prev_version !== cur_version\n  );\n  return (\n    <footer className=\"footer\">\n      <a\n        href={`${REPOSITORY_URL}/issues/new?template=bug_report.yml`}\n        target=\"_blank\"\n      >\n        Report an Issue\n      </a>\n      <span />\n      <a\n        href={`${REPOSITORY_URL}/issues/new?template=feature_request.md`}\n        target=\"_blank\"\n      >\n        Give Feedback\n      </a>\n      {cur_version && (\n        <Preact.Fragment>\n          <span />\n          <a\n            className=\"footer-release\"\n            target=\"_blank\"\n            href={`${REPOSITORY_URL}/releases`}\n            onClick={\n              ver_changed\n                ? () => {\n                    localStorage.setItem(\"tts-release-viewed\", cur_version);\n                    set_ver_changed(false);\n                  }\n                : undefined\n            }\n          >\n            <span>Release Notes</span>\n            {ver_changed && (\n              <span className=\"footer-release-new\">\n                New\n                <i className=\"fas fa-exclamation\" />\n              </span>\n            )}\n          </a>\n        </Preact.Fragment>\n      )}\n    </footer>\n  );\n};\n","import * as Preact from \"preact\";\nimport { EDITOR_SETTINGS } from \"~/model\";\nimport { useContextState } from \"~/view/utils\";\n\nexport const SkipTutorials: Preact.FunctionComponent<{ onFinish: () => void }> =\n  ({ onFinish }) => {\n    const [settings, set_settings] = useContextState(EDITOR_SETTINGS);\n    return (\n      <button\n        className=\"btn btn-large btn-negative\"\n        onClick={() => {\n          set_settings({ ...settings, skip_tutorials: true });\n          onFinish();\n        }}\n      >\n        Turn Off Tutorials\n      </button>\n    );\n  };\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo } from \"preact/hooks\";\nimport { HELP_COMPLETED, HELP_ITEM } from \"~/model\";\nimport { Modal, ModalHeader } from \"~/view/components\";\nimport { IntroFooter } from \"~/view/components/help/demos\";\nimport { SkipTutorials } from \"~/view/components/help/demos/SkipTutorials\";\nimport { useContextState, useStateRef, useValueRef } from \"~/view/utils\";\nimport { HELP_DATA, HelpDataKey } from \"./help-data\";\n\nexport const HelpModal: Preact.FunctionComponent<{ isTutorial: boolean }> = ({\n  isTutorial,\n}) => {\n  const [comp, set_comp] = useContextState(HELP_COMPLETED);\n  const [key, set_key] = useContextState(HELP_ITEM);\n  const [history, set_history, history_ref] = useStateRef<HelpDataKey[]>([]);\n  const key_ref = useValueRef(key);\n\n  const go_to_help = useCallback((new_key: HelpDataKey | null) => {\n    if (new_key === null) {\n      set_key(null);\n      set_history([]);\n      return;\n    }\n    if (HELP_DATA[new_key]) {\n      set_history(history_ref.current.concat(key_ref.current));\n    }\n    set_key(new_key);\n  }, []);\n\n  const go_back = useCallback(() => {\n    const new_history = history_ref.current.slice(0);\n    let new_key = new_history.pop();\n    while (!HELP_DATA[new_key] && new_history.length > 0) {\n      new_key = new_history.pop();\n    }\n    if (!HELP_DATA[new_key]) {\n      set_key(null);\n      set_history([]);\n      return;\n    }\n    set_key(new_key);\n    set_history(new_history);\n  }, []);\n\n  useEffect(() => {\n    if (!key || (isTutorial && key !== history[0]) || comp[key]) {\n      return;\n    }\n    set_comp({\n      ...comp,\n      [key]: true,\n    });\n  }, [key]);\n\n  const is_intro = key?.startsWith(\"intro-\");\n  const backdrop_data = useMemo(\n    () => (is_intro ? { [\"data-intro-key\"]: key } : undefined),\n    [is_intro ? key : undefined]\n  );\n\n  if (!key) {\n    return null;\n  }\n\n  const item: TTS.HelpItem = HELP_DATA[key] || HELP_DATA[\"not-found\"];\n  const dismiss = () => set_key(null);\n  const { name, content: Content } = item;\n  const body =\n    typeof Content === \"string\" ? Content : <Content goToHelp={go_to_help} />;\n\n  return (\n    <Modal\n      className=\"help-modal\"\n      dismiss={dismiss}\n      closeOnClickBackdrop={!is_intro}\n      backdropData={backdrop_data}\n      data-item={key}\n    >\n      <ModalHeader dismiss={dismiss} showCloseButton={!is_intro}>\n        {history.length > 0 && !is_intro ? (\n          <button className=\"icon-button help-modal-back\" onClick={go_back}>\n            <i className=\"fas fa-chevron-left\" />\n          </button>\n        ) : null}\n        {name ? <h3>{name}</h3> : null}\n      </ModalHeader>\n      <div className=\"modal-body modal-scroll-content\">{body}</div>\n      {isTutorial && history.length === 0 && (\n        <div className=\"modal-footer\">\n          <div />\n          <button\n            className=\"link help-modal-skip\"\n            onClick={() => go_to_help(\"skip-tutorials\")}\n          >\n            Don't show me these one-time tutorials.\n          </button>\n        </div>\n      )}\n      {key === \"skip-tutorials\" && (\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-large btn-primary\" onClick={go_back}>\n            Back\n          </button>\n          <SkipTutorials onFinish={() => set_key(null)} />\n        </div>\n      )}\n      {is_intro && (\n        <IntroFooter item={key} setItem={go_to_help} back={go_back} />\n      )}\n    </Modal>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect } from \"preact/hooks\";\nimport { HelpModal, useModal } from \"~/view/components\";\nimport { HELP_DATA } from \"~/view/components/help/help-data\";\nimport { silence_event, useHelpItem, useStateRef } from \"~/view/utils\";\n\nconst options: EventListenerOptions = { capture: true };\nexport const HelpButton: Preact.FunctionComponent = () => {\n  const [enabled, set_enabled, enabled_ref] = useStateRef<boolean>(false);\n  const [key, on_click_item, is_tutorial] = useHelpItem(enabled);\n  const item = key ? HELP_DATA[key] || HELP_DATA[\"not-found\"] : null;\n\n  const click_listener = useCallback(e => {\n    if (enabled_ref.current) {\n      silence_event(e);\n    }\n    if (enabled_ref.current && e.target.id === \"help-button\") {\n      set_enabled(false);\n      return;\n    }\n    on_click_item(e);\n  }, []);\n\n  const esc_listener = useCallback(e => {\n    if (e.key === \"Escape\") {\n      e.preventDefault();\n      e.stopPropagation();\n      set_enabled(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const root = document.getElementById(\"app\");\n    if (!root) {\n      if (enabled) {\n        set_enabled(false);\n      }\n      return;\n    }\n    root.setAttribute(\"data-help-active\", \"true\");\n    window.addEventListener(\"mousedown\", silence_event, options);\n    window.addEventListener(\"mouseup\", silence_event, options);\n    window.addEventListener(\"keydown\", esc_listener);\n    return () => {\n      window.removeEventListener(\"mousedown\", silence_event, options);\n      window.removeEventListener(\"mouseup\", silence_event, options);\n      window.removeEventListener(\"keydown\", esc_listener);\n      root.removeAttribute(\"data-help-active\");\n    };\n  }, [enabled]);\n\n  useEffect(() => {\n    if (!item) {\n      window.addEventListener(\"click\", click_listener, options);\n      return () => {\n        window.removeEventListener(\"click\", click_listener, options);\n      };\n    }\n  }, [item]);\n\n  const [ModalContainer, toggle_modal] = useModal();\n\n  useEffect(() => {\n    set_enabled(false);\n    toggle_modal(!!item);\n  }, [item]);\n\n  return (\n    <Preact.Fragment>\n      <button\n        id=\"help-button\"\n        data-help-intro-highlight={key === \"intro-help\"}\n        className=\"header-button help-button\"\n        onClickCapture={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n          set_enabled(!enabled);\n        }}\n        disabled={!!key}\n      >\n        {enabled ? (\n          <i className=\"fas fa-times\" />\n        ) : (\n          <i class=\"far fa-question-circle\" />\n        )}\n      </button>\n      <ModalContainer>\n        <HelpModal isTutorial={is_tutorial} />\n      </ModalContainer>\n    </Preact.Fragment>\n  );\n};\n","export * from \"./HelpModal\";\nexport * from \"./HelpButton\";\n","import * as Preact from \"preact\";\n\nexport const LoadingApp: Preact.FunctionComponent = () => (\n  <div className=\"tts-loading\">\n    <div className=\"tts-submit-status\">\n      <i className=\"fas fa-circle-notch\" />\n    </div>\n    <h2>Setting things up...</h2>\n  </div>\n);\n","import * as Preact from \"preact\";\nimport { useContext, useEffect, useMemo } from \"preact/hooks\";\nimport { MESSAGE_CATEGORIES } from \"~/model\";\nimport { useDebounce, useStateIfMounted } from \"~/view/utils\";\n\nexport const CategoryField: Preact.FunctionComponent<{\n  category: string;\n  setCategory: (value: string) => void;\n}> = ({ category, setCategory }) => {\n  const categories = useContext(MESSAGE_CATEGORIES).value;\n  const [value, set_value] = useStateIfMounted(category);\n  const [updateCat] = useDebounce(setCategory);\n\n  useEffect(() => {\n    updateCat(value);\n  }, [value]);\n\n  return (\n    <label className=\"tts-message-modal-input tts-message-modal-category\">\n      <p>Category</p>\n      <input\n        id=\"message-category-input\"\n        value={value}\n        // @ts-expect-error\n        onChange={e => set_value(e.target.value)}\n        list=\"message-categories-list\"\n        autocomplete=\"off\"\n        placeholder=\"Not Categorized\"\n      />\n      <datalist id=\"message-categories-list\">\n        {categories?.map(s => (\n          <option key={s.name} value={s.name}>\n            {s.name}\n          </option>\n        ))}\n      </datalist>\n    </label>\n  );\n};\n\nexport const useCategoryField = (message: TTS.Message) => {\n  const categories = useContext(MESSAGE_CATEGORIES).value;\n\n  const initial_category = useMemo(\n    () => categories.find(c => c.data.includes(message.id))?.name,\n    []\n  );\n\n  return [...useStateIfMounted(initial_category), initial_category] as const;\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { do_confirm } from \"~/common\";\nimport { MODAL_DIRTY } from \"~/model\";\nimport { Modal, ModalHeader, ExportMessageCategory } from \"~/view/components\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const CategoryModal: Preact.FunctionComponent<{\n  category?: TTS.MessageCategory;\n  updateCategory: (name: string, value: TTS.MessageCategory | null) => void;\n  onDeleteCategory: (category: TTS.MessageCategory) => void;\n  dismiss: () => void;\n}> = ({ category, updateCategory, onDeleteCategory, dismiss }) => {\n  const set_dirty = useContext(MODAL_DIRTY).setValue;\n  const name = category?.name;\n  const input_ref = useRef<HTMLInputElement>();\n  const [value, set_value] = useStateIfMounted(name);\n  const on_click_delete = useCallback(() => {\n    const should_delete = do_confirm(\n      \"Are you sure you want to delete this category and all messages in it?\"\n    );\n    if (should_delete) {\n      onDeleteCategory(category);\n      set_dirty(false);\n      updateCategory(name, null);\n      dismiss();\n    }\n  }, [updateCategory, onDeleteCategory, category]);\n  useEffect(() => input_ref.current?.focus(), []);\n\n  useEffect(() => {\n    set_dirty(!!category && name !== value);\n  }, [name, value, !!category]);\n\n  return (\n    <Modal className=\"tts-message-category-modal\" dismiss={dismiss}>\n      <ModalHeader dismiss={dismiss}>\n        <h3>{!name ? \"Create New\" : \"Edit\"} Message Category</h3>\n      </ModalHeader>\n      <div className=\"modal-body\">\n        <label className=\"tts-message-category-modal-input\">\n          <span>Category Name</span>\n          <input\n            ref={input_ref}\n            value={value}\n            onInput={e => set_value((e.target as HTMLInputElement).value)}\n          />\n        </label>\n        {name && (\n          <button\n            className=\"btn btn-negative btn-with-icon\"\n            onClick={on_click_delete}\n          >\n            <i className=\"fas fa-trash\" />\n            Delete Category\n          </button>\n        )}\n      </div>\n\n      <div className=\"modal-footer\">\n        <button className=\"btn\" onClick={dismiss}>\n          Cancel\n        </button>\n        {category && category.name && (\n          <ExportMessageCategory category={category} />\n        )}\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => {\n            updateCategory(name, {\n              open: true,\n              data: [],\n              ...category,\n              name: value,\n            });\n            set_dirty(false);\n            dismiss();\n          }}\n          disabled={!value}\n        >\n          Save\n        </button>\n      </div>\n    </Modal>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useMemo } from \"preact/hooks\";\nimport { MESSAGES } from \"~/model\";\nimport { useMessageFullText } from \"~/view/utils\";\n\nexport const DiffButton: Preact.FunctionComponent<{\n  message: TTS.Message;\n}> = ({ message }) => {\n  const messages = useContext(MESSAGES).value;\n  const old_message = useMemo(\n    () => messages.find(m => m.id === message.id),\n    [message.id]\n  );\n  const old_text = useMessageFullText(old_message);\n  const new_text = useMessageFullText(message);\n\n  if (!old_text || !new_text || old_text === new_text) {\n    return null;\n  }\n  return (\n    <form\n      id=\"diff-form\"\n      action=\"https://text-compare.com\"\n      method=\"POST\"\n      target=\"_blank\"\n    >\n      <input type=\"hidden\" value={old_text} name=\"text1\" id=\"inputText1\" />\n      <input type=\"hidden\" value={new_text} name=\"text2\" id=\"inputText2\" />\n      <button type=\"submit\" class=\"btn btn-large btn-primary\">\n        Review Changes\n      </button>\n    </form>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useMemo } from \"preact/hooks\";\nimport { replace_item_in, UNCATEGORIZED_GROUP_NAME } from \"~/common\";\nimport {\n  EDITOR_SETTINGS,\n  ImmutableContextValue,\n  LOADED_MESSAGE,\n  MESSAGE_CATEGORIES,\n  MESSAGES,\n  OptimizeLevel,\n  OptimizeTrigger,\n  UNCATEGORIZED_MESSAGES,\n} from \"~/model\";\nimport {\n  CategoryModal,\n  MessageModal,\n  MessagesListItem,\n  Organizer,\n  SEARCH_BAR,\n  SearchBar,\n  useOrganizerSearch,\n  useModal,\n} from \"~/view/components\";\nimport {\n  maybeClassName,\n  optimize_message,\n  useContextState,\n  useRenderPropsFunc,\n  useStateIfMounted,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst message_category_header_props = (\n  category: TTS.MessageCategoryPopulated\n) =>\n  ({\n    \"data-help\": \"messages-group\",\n    ...(category.name === UNCATEGORIZED_GROUP_NAME\n      ? { draggable: false, \"data-disable-reorder\": \"true\" }\n      : {}),\n  } as HTMLDivProps);\n\nconst get_item_key = (_, msg, __) => msg.id;\n\nconst regex_test_message = (opt, regex) =>\n  regex.test(opt.name) || regex.test(opt.text);\n\nexport const MessagesList: Preact.FunctionComponent<{\n  updateMessages: (\n    index: string | null,\n    message: TTS.Message | undefined,\n    category: string | undefined\n  ) => boolean;\n}> = ({ updateMessages }) => {\n  const [messages, set_messages] = useContextState(MESSAGES);\n  const messages_ref = useValueRef(messages);\n  const [categories, set_categories] = useContextState(MESSAGE_CATEGORIES);\n  const [uncategorized_msgs, set_uncat_msgs] = useContextState(\n    UNCATEGORIZED_MESSAGES\n  );\n  const uncat_ref = useValueRef(uncategorized_msgs);\n  const set_loaded_id = useContext(LOADED_MESSAGE).setValue;\n  const [edit_target, set_edit_target] = useStateIfMounted<string | null>(null);\n  const [cat_edit_target, set_cat_edit_target] = useStateIfMounted<\n    string | null\n  >(null);\n  const [reorder_enabled, set_reorder_enabled] = useStateIfMounted(false);\n\n  const edit_target_msg = useMemo(\n    () => messages.find(m => m.id === edit_target),\n    [messages, edit_target]\n  );\n\n  const edit_target_cat = useMemo(\n    () => categories.find(c => c.name === cat_edit_target),\n    [categories, cat_edit_target]\n  );\n\n  const cat_ref = useValueRef(categories);\n  const update_category = useCallback(\n    (name: string | undefined, value: TTS.MessageCategory) => {\n      set_categories(\n        replace_item_in(\n          cat_ref.current,\n          c => c.name === name,\n          value,\n          \"end\"\n        ).filter(c => !!c)\n      );\n    },\n    []\n  );\n\n  const remove_messages_in_category = useCallback(\n    (category: TTS.MessageCategory) => {\n      const result = messages_ref.current.filter(\n        m => !category.data.includes(m.id)\n      );\n      set_messages(result);\n    },\n    []\n  );\n\n  const [search, set_search] = useStateIfMounted(\"\");\n  const search_ctx_value = useMemo(\n    () => new ImmutableContextValue(search, set_search),\n    [search]\n  );\n\n  const settings = useContext(EDITOR_SETTINGS).value;\n  const search_inputs = useMemo<string[] | null>(() => {\n    if (!search) {\n      return null;\n    }\n    const strs: string[] = [search];\n    for (let level of [\"safe\", \"normal\", \"max\"]) {\n      strs.push(\n        optimize_message(search, { current: null }, OptimizeTrigger.manual, {\n          ...settings,\n          optimize_level: OptimizeLevel[level],\n        })[0]\n      );\n    }\n    return strs;\n  }, [search, settings]);\n  const [search_results_items, search_results_sections] = useOrganizerSearch(\n    messages,\n    categories,\n    uncategorized_msgs,\n    search_inputs,\n    regex_test_message\n  );\n  const is_search = useValueRef(\n    !!search_results_items || !!search_results_sections\n  );\n\n  const sections = useMemo(() => {\n    if (search_results_sections) {\n      return search_results_sections.map(c => ({\n        ...c,\n        data: c.data.map(id => messages.find(m => m.id === id)),\n      }));\n    }\n\n    const categories_with_data: TTS.MessageCategoryPopulated[] = categories.map(\n      c => ({ ...c, data: c.data.map(id => messages.find(m => m.id === id)) })\n    );\n    const uncat = messages.filter(\n      m => !categories.find(c => c.data.includes(m.id))\n    );\n    if (uncat.length > 0) {\n      const uncat_sorted = uncategorized_msgs.data\n        .filter(id => uncat.find(m => m.id === id))\n        .map(id => messages.find(m => m.id === id))\n        .concat(uncat.filter(m => !uncategorized_msgs.data.includes(m.id)));\n      categories_with_data.push({\n        ...uncategorized_msgs,\n        data: uncat_sorted,\n      });\n    }\n    return categories_with_data;\n  }, [categories, search_results_sections, messages, uncategorized_msgs]);\n\n  const set_sections = useCallback(\n    (sections_: TTS.MessageCategoryPopulated[]) => {\n      let results: TTS.MessageCategory[] = [];\n      let uncat = null;\n      if (!!is_search.current) {\n        results = sections_.reduce((cats, updated) => {\n          if (updated.name === UNCATEGORIZED_GROUP_NAME) {\n            uncat = { ...uncat_ref.current, open: updated.open };\n            return cats;\n          }\n          return replace_item_in(\n            cats,\n            cat => cat.name === updated.name,\n            prev_value => ({ ...prev_value, open: updated.open })\n          );\n        }, cat_ref.current);\n      } else {\n        for (let section of sections_) {\n          if (section.name === UNCATEGORIZED_GROUP_NAME) {\n            uncat = section;\n          } else {\n            results.push({\n              ...section,\n              data: section.data.map(m => m.id),\n            });\n          }\n        }\n      }\n      set_categories(results);\n      if (uncat != null) {\n        set_uncat_msgs(\n          {\n            ...uncat,\n            data: uncat.data.map(m => m.id),\n          },\n          results\n        );\n      }\n    },\n    []\n  );\n\n  const RenderHeader = useRenderPropsFunc<OrganizerHeaderProps>(\n    props => (\n      <MessagesHeader {...props} onClickAdd={() => set_cat_edit_target(\"\")} />\n    ),\n    [],\n    \"MessagesHeader\"\n  );\n\n  const RenderSectionHeaderControls = useRenderPropsFunc<\n    OrganizerSectionHeaderControlsProps<TTS.Message>\n  >(\n    ({ section }) =>\n      section.name !== UNCATEGORIZED_GROUP_NAME && (\n        <button\n          className=\"icon-button category-edit tts-message-category-edit\"\n          onClick={() => set_cat_edit_target(section.name)}\n        >\n          <i className=\"fas fa-edit\" />\n        </button>\n      ),\n    [],\n    \"MessageCategoryHeaderControls\"\n  );\n\n  const RenderItem = useRenderPropsFunc<OrganizerItemProps<TTS.Message>>(\n    ({ data, buttons, reorderEnabled }) => (\n      <MessagesListItem\n        message={data}\n        openMessageInModal={set_edit_target}\n        buttons={reorderEnabled ? buttons : null}\n      />\n    ),\n    [],\n    \"MessageItem\"\n  );\n\n  const RenderSectionExtras = useRenderPropsFunc<\n    OrganizerSectionExtrasProps<TTS.Message>\n  >(\n    ({ section }) =>\n      section.data.length === 0 ? (\n        <div className=\"tts-message-category-empty\">\n          This category is empty.\n        </div>\n      ) : null,\n    [],\n    \"MessageSectionExtras\"\n  );\n\n  const [MsgModalContainer, toggle_msg_modal] = useModal();\n  useEffect(() => {\n    toggle_msg_modal(edit_target != null);\n  }, [edit_target]);\n\n  const [CatModalContainer, toggle_cat_modal] = useModal();\n  useEffect(() => {\n    toggle_cat_modal(cat_edit_target != null);\n  }, [cat_edit_target]);\n\n  return (\n    <div className=\"tts-messages\">\n      <SEARCH_BAR.Provider value={search_ctx_value}>\n        <div className=\"tts-message-list\">\n          <Organizer<TTS.Message>\n            RenderHeader={RenderHeader}\n            RenderSectionHeaderControls={RenderSectionHeaderControls}\n            RenderSectionExtras={RenderSectionExtras}\n            RenderItem={RenderItem}\n            getSectionHeaderProps={message_category_header_props}\n            getItemKey={get_item_key}\n            sections={sections}\n            reorderEnabled={reorder_enabled}\n            setReorderEnabled={set_reorder_enabled}\n            updateSections={set_sections}\n          />\n        </div>\n      </SEARCH_BAR.Provider>\n      <MsgModalContainer>\n        <MessageModal\n          message={edit_target_msg}\n          loadMessage={() => set_loaded_id(edit_target)}\n          updateMessage={(value, cat) =>\n            updateMessages(edit_target, value, cat)\n          }\n          deleteMessage={cat => updateMessages(edit_target, undefined, cat)}\n          dismiss={() => {\n            if (toggle_msg_modal(false)) {\n              set_edit_target(null);\n            }\n          }}\n        />\n      </MsgModalContainer>\n      <CatModalContainer>\n        <CategoryModal\n          category={edit_target_cat}\n          updateCategory={update_category}\n          onDeleteCategory={remove_messages_in_category}\n          dismiss={() => {\n            if (toggle_cat_modal(false)) {\n              set_cat_edit_target(null);\n            }\n          }}\n        />\n      </CatModalContainer>\n    </div>\n  );\n};\nexport const MessagesHeader: Preact.FunctionComponent<{\n  className: string;\n  buttons: Preact.ComponentChildren;\n  reorderEnabled: boolean;\n  onClickAdd: () => void;\n}> = ({ className, buttons, reorderEnabled, onClickAdd }) => {\n  return (\n    <div\n      className={`row tts-col-header tts-messages-header${maybeClassName(\n        className\n      )}`}\n    >\n      <SearchBar />\n      <h4 data-help=\"messages-overview\">Messages</h4>\n      <div className=\"tts-col-header-controls\">\n        {buttons}\n        {!reorderEnabled && (\n          <button\n            className=\"tts-messages-add-category icon-button\"\n            type=\"button\"\n            onClick={onClickAdd}\n            title=\"Create a new message category\"\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext } from \"preact/hooks\";\nimport { LOADED_MESSAGE } from \"~/model\";\nimport { useCopyToClipboard, useMessageFullText } from \"~/view/utils\";\n\nexport const MessagesListItem: Preact.FunctionComponent<{\n  message: TTS.Message;\n  openMessageInModal: (id: string) => void;\n  buttons?: Preact.ComponentChildren | null;\n}> = ({ message, openMessageInModal, buttons }) => {\n  const loaded_id = useContext(LOADED_MESSAGE).value;\n  const copy = useCopyToClipboard(useMessageFullText(message));\n  return (\n    <div\n      className=\"tts-message-item\"\n      data-active={`${loaded_id === message.id}`}\n    >\n      <div className=\"tts-message-item-header\">\n        <div\n          className=\"tts-message-item-title\"\n          onClick={() => openMessageInModal(message.id)}\n        >\n          {message.name}\n        </div>\n        {buttons || (\n          <button\n            className=\"btn icon-button tts-message-item-copy\"\n            onClick={copy}\n            title=\"Copy message to clipboard\"\n          >\n            <i className=\"fas fa-clipboard\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport {\n  DEFAULT_SPEED_CHAR,\n  DEFAULT_VOICE,\n  do_alert,\n  do_confirm,\n} from \"~/common\";\nimport { MODAL_DIRTY } from \"~/model\";\nimport {\n  AudioPlayer,\n  CategoryField,\n  ClipboardButton,\n  DiffButton,\n  ExportMessage,\n  Modal,\n  ModalHeader,\n  StatusIndicator,\n  useCategoryField,\n} from \"~/view/components\";\nimport {\n  useMessageFullText,\n  usePlayMessage,\n  useStateIfMounted,\n} from \"~/view/utils\";\n\nexport const MessageModal: Preact.FunctionComponent<{\n  message: TTS.Message;\n  loadMessage: () => void;\n  updateMessage: (\n    message: TTS.Message,\n    category: string | undefined\n  ) => boolean;\n  deleteMessage: (category: string) => void;\n  dismiss: () => void;\n  isNew?: boolean;\n}> = ({\n  message,\n  loadMessage,\n  updateMessage,\n  deleteMessage,\n  dismiss,\n  isNew,\n}) => {\n  const set_dirty = useContext(MODAL_DIRTY).setValue;\n  const { name = \"\", options } = message || {};\n  const text = useMessageFullText(message);\n  const [value, set_value] = useStateIfMounted(name);\n  const [category, set_category, initial_category] = useCategoryField(message);\n\n  const saved = useRef(false);\n  useEffect(() => {\n    if (name !== value) {\n      saved.current = false;\n    }\n  }, [value, name]);\n\n  const on_click_delete = useCallback(() => {\n    const should_delete = do_confirm(\n      \"Are you sure you want to delete this message?\"\n    );\n    if (should_delete) {\n      deleteMessage(initial_category);\n      set_dirty(false);\n      dismiss();\n    }\n  }, []);\n\n  useEffect(() => {\n    set_dirty(name !== value || category !== initial_category);\n  }, [name, value, category, initial_category]);\n\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <MessageModalBase\n      message={message}\n      name={value}\n      setName={set_value}\n      category={category}\n      setCategory={set_category}\n      dismiss={dismiss}\n    >\n      {isNew ? (\n        <div />\n      ) : (\n        <button\n          className=\"btn btn-large btn-negative btn-with-icon\"\n          onClick={on_click_delete}\n          disabled={!name}\n        >\n          <i className=\"fas fa-trash\" />\n          Delete\n        </button>\n      )}\n      {!isNew && (\n        <div className=\"btn-multi\">\n          <button\n            className=\"btn btn-large btn-with-icon btn-left\"\n            onClick={() => {\n              loadMessage();\n              dismiss();\n            }}\n          >\n            <i className=\"fas fa-folder-open\" />\n            Load Into Editor\n          </button>\n          <ClipboardButton\n            id=\"msg-modal\"\n            className=\"btn btn-large btn-with-icon btn-right\"\n            text={text}\n          />\n          <textarea\n            id=\"clipboard-input-msg-modal\"\n            className=\"clipboard-input invisible\"\n            tabIndex={-1}\n          />\n        </div>\n      )}\n\n      <button\n        className=\"btn btn-large btn-primary\"\n        onClick={() => {\n          if (saved.current) {\n            return;\n          }\n          saved.current = true;\n          if (!message.id) {\n            do_alert(\"couldn't save due to missing id\");\n            console.error(\"couldn't save due to missing id\");\n          }\n          if (\n            updateMessage(\n              {\n                id: message.id,\n                name: value,\n                text: message.text,\n                options,\n              },\n              category || undefined\n            )\n          ) {\n            set_dirty(false);\n            dismiss();\n          } else {\n            saved.current = false;\n          }\n        }}\n        disabled={!value || (value === name && category === initial_category)}\n      >\n        Save\n      </button>\n    </MessageModalBase>\n  );\n};\n\nexport const MessageModalBase: Preact.FunctionComponent<{\n  message: TTS.Message;\n  name: string;\n  setName: (value: string) => void;\n  category: string;\n  setCategory: (value: string) => void;\n  dismiss: () => void;\n  isNew?: boolean;\n}> = ({\n  message,\n  name,\n  setName,\n  category,\n  setCategory,\n  dismiss,\n  isNew,\n  children,\n}) => {\n  const input_ref = useRef<HTMLInputElement>();\n  const {\n    options: {\n      max_length,\n      speed,\n      bits,\n      voice = DEFAULT_VOICE,\n      speed_char = DEFAULT_SPEED_CHAR,\n    },\n  } = message || {};\n\n  const [data, status, submit_message, text] = usePlayMessage(\n    message,\n    \"message-modal-player\"\n  );\n\n  const on_play = useCallback(\n    e => {\n      if (!data) {\n        e.preventDefault();\n        submit_message();\n      }\n    },\n    [data]\n  );\n\n  useEffect(() => {\n    input_ref.current?.focus();\n  }, []);\n\n  return (\n    <Modal className=\"tts-message-modal\" dismiss={dismiss}>\n      <ModalHeader dismiss={dismiss}>\n        <h3>{isNew ? \"Create New\" : \"Edit\"} Saved Message</h3>\n      </ModalHeader>\n      <div className=\"modal-body\">\n        <div className=\"row tts-message-modal-name\">\n          <label className=\"tts-message-modal-input\">\n            <p>Message Name</p>\n            <input\n              ref={input_ref}\n              value={name}\n              onInput={e => setName((e.target as HTMLInputElement).value)}\n            />\n          </label>\n          <CategoryField category={category} setCategory={setCategory} />\n        </div>\n        <div className=\"tts-message-modal-preview tts-text\">{text}</div>\n        <div className=\"tts-message-modal-player\">\n          <AudioPlayer data={data} id=\"message-modal-player\" onPlay={on_play} />\n          <StatusIndicator status={status} />\n        </div>\n        <div className=\"tts-message-modal-details\">\n          <div className=\"tts-message-modal-options\">\n            <h4>Options</h4>\n            <div className=\"row\">\n              <span>\n                Character Limit: <strong>{max_length}</strong>\n              </span>\n              <span>\n                Speed Modifier:{\" \"}\n                <strong>{speed ? <code>{speed_char}</code> : \"None\"}</strong>\n              </span>\n              <span>\n                Bits: <strong>{!!bits ? <code>{bits}</code> : \"None\"}</strong>\n              </span>\n              <span>\n                Voice: <strong>{voice}</strong>\n              </span>\n            </div>\n          </div>\n        </div>\n        {!isNew && (\n          <div className=\"tts-message-modal-export\">\n            <ExportMessage message={message} />\n            <DiffButton message={message} />\n          </div>\n        )}\n      </div>\n      <div className=\"modal-footer\">{children}</div>\n    </Modal>\n  );\n};\n","export * from \"./CategoryField\";\nexport * from \"./CategoryModal\";\nexport * from \"./Diff\";\nexport * from \"./List\";\nexport * from \"./ListItem\";\nexport * from \"./Modal\";\n","import * as Preact from \"preact\";\nimport { DEFAULT_BITS_STRING } from \"~/common\";\nimport { ensure_number } from \"~/view/utils\";\n\nexport const GeneralSettings: Preact.FunctionComponent<{\n  onChangeSettings: <K extends keyof TTS.EditorSettings>(\n    key: K,\n    value: TTS.EditorSettings[K]\n  ) => void;\n  form: Partial<TTS.EditorSettings>;\n}> = ({ form, onChangeSettings }) => {\n  return (\n    <div className=\"tts-settings-section\">\n      <div className=\"tts-settings-section-header\">General Settings</div>\n      {/*<div\n        className=\"tts-settings-item tts-settings-insert\"\n        title=\"Insert a snippet from the snippets pad at either the cursor position or at the end of the message\"\n        data-help=\"snippet-insert-pos\"\n      >\n        <div className=\"tts-settings-item-label\">Insert Snippets At:</div>\n        <div className=\"tts-settings-item-control\">\n          <label className=\"radio-button tts-settings-insert-input\">\n            <input\n              type=\"radio\"\n              value=\"true\"\n              checked={form.insert_at_cursor === true}\n              onChange={() => onChangeSettings(\"insert_at_cursor\", true)}\n            />\n            <span className=\"radio-label\">Cursor</span>\n          </label>\n          <label className=\"radio-button tts-settings-insert-input\">\n            <input\n              type=\"radio\"\n              value=\"true\"\n              checked={form.insert_at_cursor === false}\n              onChange={() => onChangeSettings(\"insert_at_cursor\", false)}\n            />\n            <span className=\"radio-label\">End</span>\n          </label>\n        </div>\n      </div>*/}\n      <div className=\"tts-settings-item\">\n        <label\n          className=\"checkbox toggle tts-settings-item tts-settings-skip\"\n          title=\"Automatically stop audio playback when the speed modifier starts\"\n          data-help=\"tutorials-auto-stop\"\n        >\n          <span className=\"checkbox-label\">\n            Automatically Stop Audio at Speed Modifier\n          </span>\n          <input\n            type=\"checkbox\"\n            className=\"invisible\"\n            checked={form.stop_playback_at_modifier}\n            onChange={() =>\n              onChangeSettings(\n                \"stop_playback_at_modifier\",\n                !form.stop_playback_at_modifier\n              )\n            }\n          />\n          <div className=\"toggle-switch\" />\n        </label>\n      </div>\n      <div\n        className=\"tts-settings-item tts-settings-bits\"\n        data-help=\"bits-default\"\n      >\n        <div className=\"tts-settings-item-label\">Default Bits String</div>\n        <div className=\"tts-settings-item-control\">\n          <input\n            value={form.bits_string}\n            onChange={e => {\n              if (!(e.target as HTMLInputElement).value) {\n                return;\n              }\n              onChangeSettings(\n                \"bits_string\",\n                (e.target as HTMLInputElement).value.trim()\n              );\n            }}\n            onBlur={e => {\n              if (!(e.target as HTMLInputElement).value) {\n                onChangeSettings(\"bits_string\", DEFAULT_BITS_STRING);\n              }\n            }}\n          />\n        </div>\n      </div>\n      <div\n        className=\"tts-settings-item tts-settings-history\"\n        title=\"Number of undo/redo steps that will be stored. When you exceed this number, the oldest step will be discarded.\"\n        data-help=\"history-steps\"\n      >\n        <div className=\"tts-settings-item-label\">Max. Undo/Redo Steps</div>\n        <div className=\"tts-settings-item-control\">\n          <span>{form.history_steps}</span>\n          <input\n            type=\"range\"\n            min={64}\n            max={256}\n            value={form.history_steps}\n            onChange={e => {\n              const new_value = ensure_number(\n                (e.target as HTMLInputElement).valueAsNumber,\n                255\n              );\n              onChangeSettings(\"history_steps\", new_value);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\n\nexport const HelpSettings: Preact.FunctionComponent<{\n  onChangeSettings: <K extends keyof TTS.EditorSettings>(\n    key: K,\n    value: TTS.EditorSettings[K]\n  ) => void;\n  form: Partial<TTS.EditorSettings>;\n}> = ({ form, onChangeSettings }) => {\n  return (\n    <div className=\"tts-settings-section\">\n      <div className=\"tts-settings-section-header\">Help & Tutorials</div>\n      <div className=\"tts-settings-item\">\n        <label\n          className=\"checkbox toggle tts-settings-item tts-settings-skip\"\n          title=\"Disable tutorials that appear the first time you use certain features.\"\n          data-help=\"tutorials-help\"\n        >\n          <span className=\"checkbox-label\">Skip All Tutorials</span>\n          <input\n            type=\"checkbox\"\n            className=\"invisible\"\n            checked={form.skip_tutorials}\n            onChange={() =>\n              onChangeSettings(\"skip_tutorials\", !form.skip_tutorials)\n            }\n          />\n          <div className=\"toggle-switch\" />\n        </label>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect } from \"preact/hooks\";\nimport { deep_equals } from \"~/common\";\nimport { EDITOR_SETTINGS, MODAL_DIRTY } from \"~/model\";\nimport {\n  Modal,\n  ModalHeader,\n  GeneralSettings,\n  OptimizationSettings,\n  HelpSettings,\n} from \"~/view/components\";\nimport { useContextState, useStateObject } from \"~/view/utils\";\n\nexport const SettingsModal: Preact.FunctionComponent<{ dismiss }> = ({\n  dismiss,\n}) => {\n  const set_dirty = useContext(MODAL_DIRTY).setValue;\n  const [settings, set_settings] = useContextState(EDITOR_SETTINGS);\n  const [form, set_form] = useStateObject(settings);\n  const on_change_settings = useCallback(\n    <K extends keyof TTS.EditorSettings>(\n      key: K,\n      value: TTS.EditorSettings[K]\n    ) =>\n      set_form({\n        [key]: value,\n      }),\n    []\n  );\n\n  useEffect(() => {\n    set_dirty(!deep_equals(form, settings));\n  }, [form, settings]);\n\n  return (\n    <Modal className=\"tts-settings-modal\" dismiss={dismiss}>\n      <ModalHeader dismiss={dismiss}>\n        <h3>Settings</h3>\n      </ModalHeader>\n      <div className=\"modal-body modal-scroll-content\">\n        <GeneralSettings onChangeSettings={on_change_settings} form={form} />\n        <OptimizationSettings\n          onChangeSettings={on_change_settings}\n          form={form}\n        />\n        <HelpSettings onChangeSettings={on_change_settings} form={form} />\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-large\" onClick={dismiss}>\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-large btn-primary\"\n            onClick={() => {\n              set_settings(form);\n              set_dirty(false);\n              dismiss();\n            }}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n","import * as Preact from \"preact\";\nimport { OptimizeLevel, OptimizeTrigger } from \"~/model\";\n\nconst trigger_options: { [K in TTS.OptimizeTriggerName]: string } = {\n  manual: \"Manually\",\n  submit: \"When you click submit\",\n  stop: \"When you stop typing\",\n  edit: \"As you're typing\",\n};\n\nconst level_options: { [K in TTS.OptimizeLevelName]: string } = {\n  safe: \"Minimum\",\n  normal: \"Normal\",\n  max: \"Maximum\",\n};\n\nexport const OptimizationSettings: Preact.FunctionComponent<{\n  onChangeSettings: <K extends keyof TTS.EditorSettings>(\n    key: K,\n    value: TTS.EditorSettings[K]\n  ) => void;\n  form: Partial<TTS.EditorSettings>;\n}> = ({ form, onChangeSettings }) => {\n  return (\n    <div className=\"tts-settings-section\" data-help=\"optimize-full\">\n      <div className=\"tts-settings-section-header\">Optimization Settings</div>\n      <div className=\"tts-settings-item\">\n        <label\n          className=\"checkbox toggle tts-settings-item tts-settings-whitespace\"\n          title=\"Automatically remove any duplicate, leading, or trailing whitespace\"\n        >\n          <span className=\"checkbox-label\">Automatically Trim Spaces</span>\n          <input\n            type=\"checkbox\"\n            className=\"invisible\"\n            checked={form.trim_whitespace}\n            onChange={() =>\n              onChangeSettings(\"trim_whitespace\", !form.trim_whitespace)\n            }\n          />\n          <div className=\"toggle-switch\" />\n        </label>\n      </div>\n      <div\n        className=\"tts-settings-item tts-settings-trigger\"\n        title=\"Choose when message optimization is triggered. Optimization will eliminate unneeded characters (such as replacing 'you' with 'u') to maximize the amount of text you can fit within the character limit.\"\n      >\n        <div className=\"tts-settings-item-label\">Optimize Words:</div>\n        <div className=\"tts-settings-item-control\">\n          <select\n            value={form.optimize_words}\n            onChange={e =>\n              onChangeSettings(\n                \"optimize_words\",\n                parseInt((e.target as HTMLSelectElement).value)\n              )\n            }\n          >\n            {Object.entries(trigger_options).map(([key, label]) => (\n              <option value={OptimizeTrigger[key]} key={key}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div\n        className=\"tts-settings-item tts-settings-trigger\"\n        title=\"Minimum: Speech should be identical before and after optimization.\nNormal: Optimization will cause some very minor changes in speech, but shouldn't be noticeable.\nMaximum: Some parts of speech may change noticeably, but should still have the correct syllables.\"\n      >\n        <div className=\"tts-settings-item-label\">Optimization Level:</div>\n        <div className=\"tts-settings-item-control\">\n          <select\n            value={form.optimize_level}\n            onChange={e =>\n              onChangeSettings(\n                \"optimize_level\",\n                parseInt((e.target as HTMLSelectElement).value)\n              )\n            }\n          >\n            {Object.entries(level_options).map(([key, label]) => (\n              <option value={OptimizeLevel[key]} key={key}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export * from \"./General\";\nexport * from \"./Help\";\nexport * from \"./Modal\";\nexport * from \"./Optimization\";\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useRef } from \"preact/hooks\";\nimport { ADD_SNIPPET_CALLBACK } from \"~/model\";\nimport { Snippet, SnippetsRowControls } from \"~/view/components\";\nimport { useHoldClick, useStateIfMounted, useValueRef } from \"~/view/utils\";\n\ninterface SnippetsRowProps {\n  row: TTS.Snippet;\n  // updateRow: (row: TTS.Snippet) => void;\n  onClickDelete: (id: string) => void;\n  onClickEdit: (id: string) => void;\n  previewText: (snippet: TTS.Snippet, count?: number) => Promise<void>;\n  buttons?: Preact.ComponentChildren | null;\n}\n\nconst SnippetsRowBase: Preact.FunctionComponent<\n  SnippetsRowProps & {\n    addToMessage: (text: string, flag?: \"start\" | \"end\") => void;\n  }\n> = ({\n  row,\n  onClickDelete,\n  onClickEdit,\n  previewText,\n  buttons,\n  addToMessage,\n}) => {\n  const [edit, set_edit] = useStateIfMounted(!row.text);\n  const is_right_click = useRef(false);\n  const options_ref = useValueRef(row?.options);\n\n  const on_click_edit = useCallback(\n    () => onClickEdit(row.id),\n    [onClickEdit, row.id]\n  );\n  const on_click_delete = useCallback(\n    () => onClickDelete(row.id),\n    [onClickDelete, row.id]\n  );\n\n  const add_to_message = useCallback(\n    e => {\n      const {\n        text = \"\",\n        options: { prefix, space_before, default_count },\n      } = row;\n      if (e?.button === 2) {\n        e.preventDefault();\n        is_right_click.current = true;\n        addToMessage(text, e?.initialClick ? \"start\" : undefined);\n      } else if (!e?.initialClick) {\n        addToMessage(text);\n      } else {\n        let msg = prefix ? prefix : \"\";\n        addToMessage(\n          `${space_before ? \" \" : \"\"}${msg}${text.repeat(default_count || 1)}`,\n          \"start\"\n        );\n      }\n    },\n    [addToMessage, row]\n  );\n\n  const on_end_hold = useCallback(() => {\n    const { space_after, suffix = \"\" } = options_ref.current ?? {};\n    if (!is_right_click.current && (suffix || space_after)) {\n      addToMessage(`${suffix}${space_after ? \" \" : \"\"}`, \"end\");\n    } else {\n      addToMessage(\"\", \"end\");\n    }\n    is_right_click.current = false;\n    document.getElementById(\"tts-editor-input\")?.focus();\n  }, [addToMessage]);\n\n  const add_listeners = useHoldClick(add_to_message, on_end_hold, 100);\n\n  return (\n    <li className=\"tts-snippets-row\" data-edit={`${edit}`}>\n      <div className=\"tts-snippets-row-left\">\n        {buttons || (\n          <button\n            type=\"button\"\n            className=\"icon-button tts-snippets-row-control tts-snippets-row-control-add\"\n            title=\"Add to message\"\n            {...add_listeners}\n            onContextMenu={e => e.preventDefault()}\n            data-help=\"snippet-insert\"\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n        )}\n        <div className=\"tts-snippets-row-text\" data-help=\"snippet-text\">\n          <Snippet data={row} />\n        </div>\n      </div>\n      {!buttons && (\n        <SnippetsRowControls\n          row={row}\n          open={edit}\n          setOpen={set_edit}\n          onClickEdit={on_click_edit}\n          onClickDelete={on_click_delete}\n          previewText={previewText}\n        />\n      )}\n    </li>\n  );\n};\n\nexport const SnippetsRow: Preact.FunctionComponent<\n  SnippetsRowProps & {\n    addToMessage?: (text: string, flag?: \"start\" | \"end\") => void;\n  }\n> = ({ addToMessage, ...props }) => {\n  const ctxAddToMessage = useContext(ADD_SNIPPET_CALLBACK).value;\n  return (\n    <SnippetsRowBase\n      addToMessage={addToMessage || ctxAddToMessage}\n      {...props}\n    />\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect } from \"preact/hooks\";\nimport { do_confirm } from \"~/common\";\nimport {\n  snippet_to_string,\n  useCopyToClipboard,\n  useRequestStatus,\n} from \"~/view/utils\";\n\nconst listener_opts = { once: true };\nexport const SnippetsRowControls: Preact.FunctionComponent<{\n  row: TTS.Snippet;\n  open: boolean;\n  setOpen: (value: boolean) => void;\n  onClickEdit: () => void;\n  onClickDelete: () => void;\n  previewText: (snippet: TTS.Snippet, count?: number) => Promise<void>;\n}> = ({ row, open, setOpen, onClickEdit, onClickDelete, previewText }) => {\n  const {\n    options: { default_count },\n  } = row;\n  const [status, fetch_tts] = useRequestStatus(previewText);\n  useEffect(() => {\n    if (open) {\n      const listener = () => {\n        setTimeout(() => setOpen(false), 50);\n      };\n      window.addEventListener(\"mouseup\", listener, listener_opts);\n      return () => {\n        // @ts-expect-error:\n        window.removeEventListener(\"mouseup\", listener, listener_opts);\n      };\n    }\n  }, [open]);\n\n  const on_delete = useCallback(() => {\n    const should_continue = do_confirm(\n      \"Are you sure you want to delete this snippet?\"\n    );\n    if (should_continue) {\n      onClickDelete();\n    }\n  }, [onClickDelete]);\n\n  const copy_all = useCopyToClipboard(snippet_to_string(row).trim());\n  const copy_main = useCopyToClipboard(\n    row.text.repeat(Math.round((default_count || 2) / 2))\n  );\n  return (\n    <div className=\"tts-snippets-row-controls\" data-open={`${open}`}>\n      <button\n        className=\"tts-snippets-row-control icon-button tts-snippets-row-controls-button\"\n        onClick={() => setOpen(!open)}\n        data-help=\"snippet-actions\"\n      >\n        <i className=\"fas fa-cog\" />\n      </button>\n      <div className=\"tts-snippets-row-controls-menu\">\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Listen\"\n          onClick={() => fetch_tts(row, default_count)}\n          disabled={status.pending}\n        >\n          <i className=\"fas fa-volume-up\" />\n        </button>\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Copy to Clipboard\"\n          onClick={copy_all}\n          // @ts-expect-error:\n          onAuxClick={copy_main}\n          onContextMenu={e => {\n            e.preventDefault();\n            copy_main();\n          }}\n        >\n          <i className=\"fas fa-clipboard\" />\n        </button>\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Edit\"\n          onClick={onClickEdit}\n        >\n          <i className=\"fas fa-edit\" />\n        </button>\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Delete\"\n          onClick={on_delete}\n        >\n          <i className=\"fas fa-trash\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { deep_equals, generate_id } from \"~/common\";\nimport { MODAL_DIRTY } from \"~/model\";\nimport {\n  AudioPlayer,\n  ExportSnippet,\n  Modal,\n  ModalHeader,\n} from \"~/view/components\";\nimport {\n  snippet_to_string,\n  usePlaySnippet,\n  useStateIfMounted,\n} from \"~/view/utils\";\n\nexport const SnippetsRowEdit: Preact.FunctionComponent<{\n  row: TTS.Snippet;\n  updateRow: (row: TTS.Snippet) => void;\n  onClickDelete: () => void;\n  dismiss: () => void;\n  isNew?: boolean;\n}> = ({ row = {}, updateRow, dismiss, isNew }) => {\n  const set_dirty = useContext(MODAL_DIRTY).setValue;\n  const [value, set_value] = useStateIfMounted(row.text ?? \"\");\n  const [prefix, set_prefix] = useStateIfMounted(row.options?.prefix ?? \"\");\n  const [suffix, set_suffix] = useStateIfMounted(row.options?.suffix ?? \"\");\n  const [count, set_count] = useStateIfMounted(row.options?.default_count || 1);\n  const [space_before, set_space_before] = useStateIfMounted(\n    row.options?.space_before\n  );\n  const [space_after, set_space_after] = useStateIfMounted(\n    row.options?.space_after\n  );\n\n  const [tts_data, status, preview_tts] = usePlaySnippet(\n    \"snippet-modal-player\"\n  );\n\n  const input_ref = useRef<HTMLInputElement>();\n  useEffect(() => {\n    input_ref.current?.focus();\n  }, []);\n\n  const new_row = {\n    id: row.id,\n    text: value,\n    options: {\n      prefix,\n      suffix,\n      default_count: count,\n      space_before: space_before,\n      space_after: space_after,\n    },\n  };\n\n  useEffect(() => {\n    set_dirty(\n      isNew ? !!value || !!prefix || !!suffix : !deep_equals(new_row, row)\n    );\n  }, [new_row, row]);\n\n  new_row.id = useMemo(() => {\n    if (row.id) {\n      return row.id;\n    }\n    return row.id ?? generate_id(snippet_to_string(new_row));\n  }, [row.id, value, prefix, suffix, count, space_before, space_after]);\n\n  return (\n    <Modal className=\"tts-snippets-modal\" dismiss={dismiss}>\n      <ModalHeader dismiss={dismiss}>\n        <h3>{!row.text ? \"Create New\" : \"Edit\"} Snippet</h3>\n      </ModalHeader>\n      <div className=\"modal-body\">\n        <div className=\"row tts-snippets-modal-text tts-text\">\n          <label\n            className=\"tts-snippets-modal-prefix\"\n            title=\"Some snippets need to start with a different string than the repeated characters (e.g. the 'y' in yDRDRDR).\"\n          >\n            <span>Prefix</span>\n            <input\n              value={prefix}\n              onInput={e => set_prefix((e.target as HTMLInputElement).value)}\n            />\n          </label>\n          <label className=\"tts-snippets-modal-input\">\n            <span>Main Text</span>\n            <input\n              ref={input_ref}\n              value={value}\n              onInput={e => set_value((e.target as HTMLInputElement).value)}\n            />\n          </label>\n          <label\n            className=\"tts-snippets-modal-suffix\"\n            title=\"Text to insert after all repetitions of the snippet (e.g. punctuation)\"\n          >\n            <span>Suffix</span>\n            <input\n              value={suffix}\n              onInput={e => set_suffix((e.target as HTMLInputElement).value)}\n            />\n          </label>\n          <button\n            className=\"icon-button\"\n            onClick={() => preview_tts(new_row)}\n            disabled={!value}\n          >\n            <i className=\"fas fa-volume-up\" />\n          </button>\n          <div className=\"tts-submit-status\">\n            {status.pending ? (\n              <i className=\"fas fa-circle-notch\" />\n            ) : status.success ? (\n              <i className=\"fas fa-check-circle\" />\n            ) : status.error ? (\n              <i className=\"fas fa-exclamation-circle\" />\n            ) : null}\n          </div>\n        </div>\n        <div className=\"row\">\n          <AudioPlayer id=\"snippet-modal-player\" data={tts_data} />\n          {status.error && (\n            <p className=\"error\">{JSON.stringify(status.error, null, 2)}</p>\n          )}\n        </div>\n        <h4>Options</h4>\n        <div className=\"row\">\n          <label\n            className=\"tts-snippets-modal-checkbox\"\n            title=\"When adding this snippet to the message, put a space between the existing text and the snippet.\"\n          >\n            <input\n              type=\"checkbox\"\n              checked={space_before}\n              onInput={e =>\n                set_space_before((e.target as HTMLInputElement).checked)\n              }\n            />\n            Space Before\n          </label>\n          <label\n            className=\"tts-snippets-modal-checkbox\"\n            title=\"When adding this snippet to the message, put a space after the snippet.\"\n          >\n            <input\n              type=\"checkbox\"\n              checked={space_after}\n              onInput={e =>\n                set_space_after((e.target as HTMLInputElement).checked)\n              }\n            />\n            Space After\n          </label>\n          <label\n            className=\"tts-snippets-modal-count\"\n            title=\"By default, the snippet's main text will be repeated this many times. This can be overridden in the Snippet sidebar.\"\n          >\n            <input\n              type=\"number\"\n              value={count}\n              min={1}\n              max={20}\n              step={1}\n              onInput={e => {\n                const value = (e.target as HTMLInputElement).valueAsNumber;\n                if (!isNaN(value)) {\n                  set_count(value);\n                }\n              }}\n            />\n            Default Repeat Count\n          </label>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <button className=\"btn\" onClick={dismiss}>\n          Cancel\n        </button>\n        {!isNew && <ExportSnippet snippet={new_row} />}\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => {\n            updateRow(new_row);\n            set_dirty(false);\n            dismiss();\n          }}\n          disabled={!value}\n        >\n          Save\n        </button>\n      </div>\n    </Modal>\n  );\n};\n","import * as Preact from \"preact\";\nimport { maybeClassName } from \"~/view/utils\";\n\nexport const Snippet: Preact.FunctionComponent<{\n  data: TTS.Snippet;\n  className?: string;\n  showRepeats?: boolean;\n}> = ({ data, className, showRepeats }) => {\n  return (\n    <div className={`snippet tts-text${maybeClassName(className)}`}>\n      <div\n        className=\"snippet-space-before\"\n        data-show={`${!!data.options.space_before}`}\n      />\n      {data.options.prefix && (\n        <div className=\"snippet-prefix\">{data.options.prefix}</div>\n      )}\n      <div className=\"snippet-text\">{data.text}</div>\n      {showRepeats && data.options.default_count > 1 && (\n        <div\n          className=\"snippet-text-repeats\"\n          title={`Repeat Count: ${data.options.default_count}`}\n        >\n          {data.text.repeat(data.options.default_count - 1)}\n        </div>\n      )}\n      {data.options.suffix && (\n        <div className=\"snippet-suffix\">{data.options.suffix}</div>\n      )}\n      <div\n        className=\"snippet-space-after\"\n        data-show={`${!!data.options.space_after}`}\n      />\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { remove_item_from, replace_item_in } from \"~/common\";\nimport { ImmutableContextValue, SNIPPETS, SNIPPETS_SECTIONS } from \"~/model\";\nimport {\n  AudioPlayer,\n  Organizer,\n  SnippetsRow,\n  SnippetsRowEdit,\n  SnippetsSectionModal,\n  SEARCH_BAR,\n  SearchBar,\n  useOrganizerSearch,\n  useModal,\n} from \"~/view/components\";\nimport {\n  snippet_to_string,\n  useContextState,\n  usePlaySnippet,\n  useRenderPropsFunc,\n  useSaveSnippetInSection,\n  useStateIfMounted,\n  useValueRef,\n} from \"~/view/utils\";\n\nconst snippets_section_header_props = () =>\n  ({ \"data-help\": \"snippets-group\" } as HTMLDivProps);\n\nconst get_item_key = (_, snip, __) => snip.id;\n\nconst regex_test_snippet = (item: TTS.Snippet, regex) =>\n  regex.test(snippet_to_string(item));\n\nexport const SnippetsList: Preact.FunctionComponent = () => {\n  const [snippets, set_snippets] = useContextState(SNIPPETS);\n  const [sections, set_sections] = useContextState(SNIPPETS_SECTIONS);\n  const snippets_ref = useValueRef(snippets);\n  const sections_ref = useValueRef(sections);\n  const [edit_row_target_id, set_edit_row_target_id_] = useStateIfMounted<\n    string | undefined\n  >(undefined);\n  const [edit_section_target_id, set_edit_section_target_id] =\n    useStateIfMounted<string | undefined>(undefined);\n  const [reorder_enabled, set_reorder_enabled] = useStateIfMounted(false);\n\n  const edit_row_target_section = useRef<TTS.SnippetsSection | null>(null);\n  const set_edit_row_target_id = useCallback(\n    (target?: string, target_section?: TTS.SnippetsSection) => {\n      if (target && !target_section) {\n        return;\n      }\n      edit_row_target_section.current = target_section ?? null;\n      set_edit_row_target_id_(target);\n    },\n    []\n  );\n\n  const update_snippet_in_sections = useSaveSnippetInSection(\n    sections_ref,\n    set_sections\n  );\n  const update_snippet = useCallback(\n    (id: string, value: TTS.Snippet, section: string) => {\n      set_snippets(\n        replace_item_in(snippets_ref.current, s => s.id === id, value, \"end\")\n      );\n      update_snippet_in_sections(id, value, section);\n    },\n    [update_snippet_in_sections]\n  );\n  const on_delete_snippet = useCallback(\n    (id: string) => {\n      update_snippet_in_sections(\n        id,\n        undefined,\n        edit_row_target_section.current?.name\n      );\n      set_snippets(remove_item_from(snippets_ref.current, s => s.id === id));\n    },\n    [update_snippet_in_sections]\n  );\n\n  const [tts_data, , preview_tts] = usePlaySnippet(\"snippets-sidebar-player\");\n\n  const edit_row_target = useMemo(\n    () => snippets.find(s => s.id === edit_row_target_id),\n    [snippets, edit_row_target_id]\n  );\n\n  const edit_section_target = useMemo(() => {\n    if (edit_section_target_id == null) {\n      return;\n    }\n    return (\n      sections.find(s => s.name === edit_section_target_id) ?? {\n        name: \"\",\n        open: false,\n        data: [],\n      }\n    );\n  }, [sections, edit_section_target_id]);\n\n  const update_section = useCallback(\n    (name: string, value: TTS.SnippetsSection) => {\n      set_sections(\n        replace_item_in(\n          sections_ref.current,\n          c => c.name === name,\n          value,\n          \"end\"\n        ).filter(c => !!c)\n      );\n    },\n    []\n  );\n\n  const remove_snippets_in_section = useCallback(\n    (section: TTS.SnippetsSection) => {\n      const result = snippets_ref.current.filter(\n        m => !section.data.includes(m.id)\n      );\n      set_snippets(result);\n    },\n    []\n  );\n\n  const [search, set_search] = useStateIfMounted(\"\");\n  const search_ctx_value = useMemo(\n    () => new ImmutableContextValue(search, set_search),\n    [search]\n  );\n  const search_inputs = useMemo(() => (search ? [search] : null), [search]);\n\n  const [search_results_items, search_results_sections] = useOrganizerSearch(\n    snippets,\n    sections,\n    undefined,\n    search_inputs,\n    regex_test_snippet\n  );\n  const is_search = useValueRef(\n    !!search_results_items || !!search_results_sections\n  );\n\n  const list_sections = useMemo(\n    () =>\n      (search_results_sections ?? sections).map(c => ({\n        ...c,\n        data: c.data.map(id => snippets.find(m => m.id === id)),\n      })),\n    [search_results_sections, sections, snippets]\n  );\n\n  const set_list_sections = useCallback(\n    (sections_: TTS.SnippetsSectionPopulated[]) => {\n      let results: TTS.SnippetsSection[] = [];\n      if (!!is_search.current) {\n        results = sections_.reduce(\n          (list, updated) =>\n            replace_item_in(\n              list,\n              sec => sec.name === updated.name,\n              prev_value => ({ ...prev_value, open: updated.open })\n            ),\n          sections_ref.current\n        );\n      } else {\n        results = sections_.map(section => ({\n          ...section,\n          data: section.data.map(s => s.id),\n        }));\n      }\n      set_sections(results);\n    },\n    []\n  );\n\n  const on_delete_section = useCallback(() => {\n    remove_snippets_in_section(edit_section_target);\n    set_sections(\n      remove_item_from(\n        sections_ref.current,\n        s => s.name === edit_section_target_id\n      )\n    );\n  }, [edit_section_target, edit_section_target_id]);\n\n  const on_click_add_section = useCallback(\n    () => set_edit_section_target_id(\"\"),\n    []\n  );\n\n  const RenderHeader = useRenderPropsFunc<OrganizerHeaderProps>(\n    props => <SnippetsHeader {...props} onClickAdd={on_click_add_section} />,\n    [],\n    \"SnippetsHeader\"\n  );\n\n  const RenderSectionHeaderControls = useRenderPropsFunc<\n    OrganizerSectionHeaderControlsProps<TTS.Snippet>\n  >(\n    ({ section }) => (\n      <button\n        className=\"icon-button tts-snippets-section-edit\"\n        onClick={() => set_edit_section_target_id(section.name)}\n      >\n        <i className=\"fas fa-edit\" />\n      </button>\n    ),\n    [],\n    \"SnippetsSectionHeaderControls\"\n  );\n\n  const RenderSectionExtras = useRenderPropsFunc<\n    OrganizerSectionExtrasProps<TTS.Snippet>\n  >(\n    ({ section }) => (\n      <div className=\"organizer-section-item tts-snippets-section-add-row-item\">\n        <button\n          className=\"tts-snippets-section-add-row\"\n          type=\"button\"\n          onClick={() =>\n            set_edit_row_target_id(\"\", {\n              ...section,\n              data: section.data.map(s => s.id),\n            })\n          }\n        >\n          <i className=\"fas fa-plus\" />\n          Add a Snippet\n        </button>\n      </div>\n    ),\n    [],\n    \"SnippetsSectionAdd\"\n  );\n\n  const RenderItem = useRenderPropsFunc<OrganizerItemProps<TTS.Snippet>>(\n    ({ data, buttons, reorderEnabled }) => (\n      <SnippetsRow\n        row={data}\n        onClickDelete={on_delete_snippet}\n        onClickEdit={() => {\n          const section = sections_ref.current.find(s =>\n            s.data.includes(data.id)\n          );\n          set_edit_row_target_id(data.id, section);\n        }}\n        previewText={preview_tts}\n        buttons={reorderEnabled ? buttons : undefined}\n      />\n    ),\n    [preview_tts],\n    \"SnippetsRow\"\n  );\n\n  const [SnipModalContainer, toggle_snip_modal] = useModal();\n  useEffect(() => {\n    toggle_snip_modal(edit_row_target_id != null);\n  }, [edit_row_target_id]);\n\n  const [SecModalContainer, toggle_sec_modal] = useModal();\n  useEffect(() => {\n    toggle_sec_modal(edit_section_target_id != null);\n  }, [edit_section_target_id]);\n\n  return (\n    <div className=\"tts-snippets\">\n      <SEARCH_BAR.Provider value={search_ctx_value}>\n        <div className=\"tts-snippets-list\">\n          <Organizer<TTS.Snippet>\n            RenderHeader={RenderHeader}\n            RenderSectionHeaderControls={RenderSectionHeaderControls}\n            RenderSectionExtras={RenderSectionExtras}\n            RenderItem={RenderItem}\n            getSectionHeaderProps={snippets_section_header_props}\n            getItemKey={get_item_key}\n            sections={list_sections}\n            reorderEnabled={reorder_enabled}\n            setReorderEnabled={set_reorder_enabled}\n            updateSections={set_list_sections}\n          />\n        </div>\n      </SEARCH_BAR.Provider>\n      <AudioPlayer\n        id=\"snippets-sidebar-player\"\n        className=\"tts-snippets-sidebar-player invisible\"\n        data={tts_data}\n      />\n      <SnipModalContainer>\n        <SnippetsRowEdit\n          row={edit_row_target}\n          updateRow={value =>\n            update_snippet(\n              edit_row_target_id,\n              value,\n              edit_row_target_section.current?.name\n            )\n          }\n          onClickDelete={() =>\n            update_snippet(\n              edit_row_target_id,\n              undefined,\n              edit_row_target_section.current?.name\n            )\n          }\n          isNew={!edit_row_target}\n          dismiss={() => {\n            if (toggle_snip_modal(false)) {\n              set_edit_row_target_id(null, null);\n            }\n          }}\n        />\n        )\n      </SnipModalContainer>\n\n      <SecModalContainer>\n        <SnippetsSectionModal\n          section={edit_section_target}\n          updateSection={(value: TTS.SnippetsSection) =>\n            update_section(edit_section_target_id, value)\n          }\n          deleteSection={on_delete_section}\n          dismiss={() => {\n            if (toggle_sec_modal(false)) {\n              set_edit_section_target_id(null);\n            }\n          }}\n        />\n      </SecModalContainer>\n    </div>\n  );\n};\n\nexport const SnippetsHeader: Preact.FunctionComponent<{\n  className: string;\n  buttons: Preact.ComponentChildren;\n  reorderEnabled: boolean;\n  onClickAdd: () => void;\n}> = ({ className, buttons, reorderEnabled, onClickAdd }) => {\n  return (\n    <div className={`row tts-col-header ${className}`}>\n      <SearchBar />\n      <h4 data-help=\"snippets-overview\">Snippets</h4>\n      <div className=\"tts-col-header-controls\">\n        {buttons}\n        {!reorderEnabled && (\n          <button\n            className=\"tts-snippets-add-section icon-button\"\n            type=\"button\"\n            onClick={onClickAdd}\n            title=\"Create a new group of snippets\"\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useMemo } from \"preact/hooks\";\nimport { SNIPPETS } from \"~/model\";\nimport {\n  export_snippets,\n  export_snippets_section,\n  generate_file,\n} from \"~/view/components\";\n\nexport const ExportSnippetsSection: Preact.FunctionComponent<{\n  section: TTS.SnippetsSection;\n}> = ({ section }) => {\n  const snippets = useContext(SNIPPETS).value;\n  const filename = useMemo(\n    () =>\n      `tts-snippets-section-${section.name\n        ?.split(\" \")\n        .map(p =>\n          p.length > 0 ? `${p[0].toUpperCase()}${p.slice(1).toLowerCase()}` : \"\"\n        )\n        .join(\"\")\n        .replace(/\\W/gi, \"\")}.json`,\n    [section]\n  );\n  const data = useMemo(() => {\n    const output = {\n      ...export_snippets_section(section),\n      data: export_snippets(snippets.filter(s => section.data.includes(s.id))),\n    };\n    return generate_file(output);\n  }, [section]);\n\n  return (\n    <a\n      className=\"btn btn-with-icon\"\n      href={`data:application/json;charset=utf-8,${encodeURIComponent(data)}`}\n      download={filename}\n      data-help=\"export-snippet\"\n    >\n      <i class=\"fas fa-share-square\" />\n      Export\n    </a>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { do_confirm } from \"~/common\";\nimport { MODAL_DIRTY } from \"~/model\";\nimport { Modal, ModalHeader } from \"~/view/components\";\nimport { ExportSnippetsSection } from \"~/view/components/export/ExportSnippetSection\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const SnippetsSectionModal: Preact.FunctionComponent<{\n  section?: TTS.SnippetsSection;\n  updateSection: (value: TTS.SnippetsSection) => void;\n  deleteSection: () => void;\n  dismiss: () => void;\n}> = ({ section, updateSection, deleteSection, dismiss }) => {\n  const set_dirty = useContext(MODAL_DIRTY).setValue;\n  const name = section?.name;\n  const input_ref = useRef<HTMLInputElement>();\n  const [value, set_value] = useStateIfMounted(name);\n  const on_click_delete = useCallback(() => {\n    const should_delete = do_confirm(\n      \"Are you sure you want to delete this group and all snippets in it?\"\n    );\n    if (should_delete) {\n      deleteSection();\n      set_dirty(false);\n      dismiss();\n    }\n  }, []);\n  useEffect(() => input_ref.current?.focus(), []);\n\n  useEffect(() => {\n    set_dirty(!!section?.name && name !== value);\n  }, [name, value, !!section]);\n\n  return (\n    <Modal className=\"tts-snippets-section-modal\" dismiss={dismiss}>\n      <ModalHeader dismiss={dismiss}>\n        <h3>{!name ? \"Create New\" : \"Edit\"} Snippet Group</h3>\n      </ModalHeader>\n      <div className=\"modal-body\">\n        <label className=\"tts-snippets-section-modal-input\">\n          <span>Group Name</span>\n          <input\n            ref={input_ref}\n            value={value}\n            onInput={e => set_value((e.target as HTMLInputElement).value)}\n          />\n        </label>\n        {name && (\n          <button\n            className=\"btn btn-negative btn-with-icon\"\n            onClick={on_click_delete}\n          >\n            <i className=\"fas fa-trash\" />\n            Delete Group\n          </button>\n        )}\n      </div>\n\n      <div className=\"modal-footer\">\n        <button className=\"btn\" onClick={dismiss}>\n          Cancel\n        </button>\n        {section && section.name && <ExportSnippetsSection section={section} />}\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => {\n            updateSection({\n              ...section,\n              name: value,\n            });\n            set_dirty(false);\n            dismiss();\n          }}\n          disabled={!value}\n        >\n          Save\n        </button>\n      </div>\n    </Modal>\n  );\n};\n","export * from \"./Row\";\nexport * from \"./RowControls\";\nexport * from \"./RowEdit\";\nexport * from \"./Snippet\";\nexport * from \"./Snippets\";\nexport * from \"./SectionEdit\";\n","import * as Preact from \"preact\";\nimport { memo } from \"preact/compat\";\nimport { useContext, useEffect } from \"preact/hooks\";\nimport { HELP_ITEM } from \"~/model\";\nimport {\n  Editor,\n  ImportExport,\n  MessagesList,\n  SettingsModal,\n  HelpButton,\n  Footer,\n  validate_import_data,\n  SnippetsList,\n  useModal,\n} from \"~/view/components\";\nimport { useSaveMessage, useStateRef, useUploadFiles } from \"~/view/utils\";\n\nconst View: Preact.FunctionComponent = () => {\n  const help_item = useContext(HELP_ITEM).value;\n  const [ModalContainer, toggle_modal] = useModal();\n\n  const [loaded_message, update_messages] = useSaveMessage();\n\n  const [import_data, set_import_data, import_data_ref] =\n    useStateRef<TTS.AnyExportData | null>(null);\n\n  const upload_files = useUploadFiles(set_import_data);\n\n  useEffect(() => {\n    const drag_listener = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    const drop_listener = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (document.getElementById(\"modal-container\")?.childElementCount <= 0) {\n        upload_files(e.dataTransfer.files);\n        e.dataTransfer.clearData();\n      }\n    };\n    const paste_listener = e => {\n      if (\n        document.getElementById(\"modal-container\")?.childElementCount > 0 &&\n        document.getElementById(\"tts-export-modal\") &&\n        import_data_ref.current\n      ) {\n        return;\n      }\n      if (e?.clipboardData?.files?.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        upload_files(e.clipboardData.files).then(() => {\n          e.clipboardData.clearData();\n        });\n        return;\n      }\n      const data = e?.clipboardData?.getData(\"text\");\n      try {\n        const json = JSON.parse(data);\n        const validated = validate_import_data(json);\n        if (validated) {\n          e.preventDefault();\n          e.stopPropagation();\n          set_import_data(validated);\n        }\n      } catch (e) {}\n    };\n    document.addEventListener(\"paste\", paste_listener);\n    document.addEventListener(\"dragover\", drag_listener);\n    document.addEventListener(\"dragenter\", drag_listener);\n    document.addEventListener(\"drop\", drop_listener);\n    document.addEventListener(\"dragleave\", drag_listener);\n    document.addEventListener(\"dragexit\", drag_listener);\n    document.addEventListener(\"dragend\", drag_listener);\n\n    return () => {\n      document.removeEventListener(\"paste\", paste_listener);\n      document.removeEventListener(\"dragover\", drag_listener);\n      document.removeEventListener(\"dragenter\", drag_listener);\n      document.removeEventListener(\"drop\", drop_listener);\n      document.removeEventListener(\"dragleave\", drag_listener);\n      document.removeEventListener(\"dragexit\", drag_listener);\n      document.removeEventListener(\"dragend\", drag_listener);\n    };\n  }, []);\n\n  return (\n    <Preact.Fragment>\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <h1>TTS Playground</h1>\n          <h4>By BlueLdr</h4>\n        </div>\n        <div className=\"header-right\">\n          <HelpButton />\n          <button\n            className=\"header-button\"\n            type=\"button\"\n            onClick={() => toggle_modal(true)}\n          >\n            <i className=\"fas fa-cog\" />\n          </button>\n          <ImportExport\n            importData={import_data}\n            setImportData={set_import_data}\n          />\n          <button className=\"help-link btn btn-primary\" data-help=\"intro-start\">\n            App Overview\n          </button>\n          <button className=\"help-link btn btn-primary\" data-help=\"help-docs\">\n            Read the TTS Guide\n          </button>\n        </div>\n      </div>\n      <div className=\"tts-container\">\n        <div className=\"tts-container\">\n          <div className=\"tts-col tts-col-messages\">\n            <div data-help-intro-highlight={help_item === \"intro-messages\"}>\n              <MessagesList updateMessages={update_messages} />\n            </div>\n          </div>\n          <div className=\"tts-col tts-col-main\">\n            <Editor message={loaded_message} updateMessages={update_messages} />\n            <Footer />\n          </div>\n          <div className=\"tts-col tts-col-snippets\">\n            <div data-help-intro-highlight={help_item === \"intro-snippets\"}>\n              <SnippetsList />\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalContainer>\n        <SettingsModal dismiss={() => toggle_modal(false)} />\n      </ModalContainer>\n    </Preact.Fragment>\n  );\n};\n\nexport default memo(View);\n","export * from \"./App\";\nexport * from \"./context\";\nexport * from \"./common\";\nexport * from \"./editor\";\nexport * from \"./export\";\nexport * from \"./Footer\";\nexport * from \"./help\";\nexport * from \"./Loading\";\nexport * from \"./messages\";\nexport * from \"./settings\";\nexport * from \"./snippets\";\nimport View from \"./View\";\nexport { View };\n","import {\n  DEFAULT_SPEED_CHAR,\n  DEFAULT_VOICE,\n  generate_id,\n  get_stored_messages,\n  get_stored_snippets,\n  set_stored_message_categories,\n  set_stored_messages,\n  set_stored_snippets_sections,\n  set_stored_snippets,\n} from \"~/common\";\nimport { sample_messages, sample_snippets } from \"~/common/sample-data\";\nimport { snippet_to_string } from \"~/view/utils\";\n\nconst prev_version = localStorage.getItem(\"tts-loaded-version\");\nconst cur_version = process.env.TTS_VERSION;\n\nconst get_version_number = (version: string) =>\n  parseInt((version ?? \"1.0.0\").replace(/[^0-9]/gi, \"\"));\nconst prev_ver_num = prev_version ? get_version_number(prev_version) : 0;\nconst cur_ver_num = get_version_number(cur_version);\n\nexport const add_props_to_messages = () => {\n  let messages: TTS.Message[] = get_stored_messages() ?? [];\n  messages = messages.map((m, i) => {\n    if (!m.id) {\n      const index = sample_messages.findIndex(\n        sm => sm.name === m.name && sm.text === m.text\n      );\n      m.id = index > -1 ? `sample-message-${index + 1}` : generate_id(m.text);\n    }\n    return {\n      ...m,\n      options: {\n        ...m.options,\n        voice: m.options.voice ?? DEFAULT_VOICE,\n        speed_char: m.options.speed_char ?? DEFAULT_SPEED_CHAR,\n      },\n    };\n  });\n  set_stored_messages(messages);\n};\n\nexport const add_messages_to_categories = () => {\n  let messages: TTS.Message[] = get_stored_messages() ?? [];\n  const samples: TTS.MessageCategory = {\n    name: \"Sample Messages\",\n    open: true,\n    data: [],\n  };\n\n  messages.forEach(m => {\n    if (\n      sample_messages.some(\n        sm => sm.id === m.id || (sm.name === m.name && sm.text === m.text)\n      )\n    ) {\n      samples.data.push(m.id);\n    }\n  });\n\n  set_stored_message_categories([samples]);\n};\n\nexport const convert_snippets_to_categories = () => {\n  const snippet_sections = get_stored_snippets() as unknown as (Omit<\n    TTS.SnippetsSection,\n    \"data\"\n  > & { data: TTS.Snippet[] })[];\n  // @ts-expect-error:\n  if (snippet_sections === sample_snippets) {\n    return;\n  }\n  const snippets: TTS.Snippet[] = [];\n  const snippet_categories: TTS.SnippetsSection[] = snippet_sections.map(s => ({\n    ...s,\n    data: s.data.map(sn => {\n      if (!sn.id) {\n        sn.id = generate_id(snippet_to_string(sn));\n      }\n      snippets.push(sn);\n      return sn.id;\n    }),\n  }));\n  set_stored_snippets_sections(snippet_categories);\n  set_stored_snippets(snippets);\n};\n\nconst UPDATES: { [key: string]: (() => void)[] } = {\n  \"v1.1.0\": [add_props_to_messages],\n  \"v1.3.0\": [add_messages_to_categories, convert_snippets_to_categories],\n};\n\nconst perform_updates = async (todo: (() => void)[]) => {\n  for (const action of todo) {\n    action();\n  }\n  localStorage.setItem(\"tts-loaded-version\", cur_version);\n  window.location.reload();\n};\n\nconst check_updates = (): boolean => {\n  if (cur_version === prev_version) {\n    return false;\n  }\n\n  const todo = Object.entries(UPDATES)\n    .filter(([v]) => {\n      const num = get_version_number(v);\n      return num <= cur_ver_num && num > prev_ver_num;\n    })\n    .reduce((list, [, actions]) => list.concat(actions), []);\n\n  if (todo.length <= 0) {\n    localStorage.setItem(\"tts-loaded-version\", cur_version);\n    return false;\n  }\n\n  perform_updates(todo);\n  return true;\n};\n\nexport default check_updates;\n","import perform_startup_updates from \"./startup\";\n\nexport { perform_startup_updates };\n","import \"preact/debug\";\nimport * as Preact from \"preact\";\nimport { App, LoadingApp } from \"~/view/components\";\n\nimport { perform_startup_updates } from \"./updates\";\n\nconst container = document.getElementById(\"app\");\nif (container) {\n  if (perform_startup_updates()) {\n    Preact.render(\n      <LoadingApp />,\n      container,\n      container.lastElementChild || undefined\n    );\n  } else {\n    Preact.render(<App />, container, container.lastElementChild || undefined);\n  }\n}\n"]}