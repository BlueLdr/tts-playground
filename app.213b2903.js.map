{"version":3,"sources":["../src/options.js","../src/constants.js","../src/create-element.js","../src/component.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js","../src/diff/catch-error.js","../src/devtools.js","../src/index.js","../src/debug.js","../src/check-props.js","../src/component-stack.js","view/components/App.tsx","../src/PureComponent.js","../src/memo.js","../src/forwardRef.js","../src/Children.js","../src/suspense.js","../src/suspense-list.js","../src/portals.js","../src/scheduler.js","common/constants.ts","common/storage.ts","common/tts.ts","common/utils.ts","common/index.ts","model/initial-state.ts","model/context.ts","model/schema.ts","model/index.ts","view/utils/common.ts","view/utils/dom-helpers.ts","view/utils/hooks/data.ts","view/utils/hooks/dom.ts","view/utils/hooks/tts.ts","view/utils/hooks/index.ts","view/utils/index.ts","view/components/context.tsx","view/components/common/AudioPlayer.tsx","view/components/common/ClipboardButton.tsx","view/components/common/StatusIndicator.tsx","view/components/common/index.ts","view/components/editor/Editor.tsx","view/components/editor/Header.tsx","view/components/editor/Main.tsx","view/components/editor/PauseAddControl.tsx","view/components/editor/SaveControl.tsx","view/components/editor/index.ts","view/components/export/Export.tsx","view/components/export/Import.tsx","view/components/export/ImportDuplicateMessages.tsx","view/components/export/ImportDuplicateSnippets.tsx","view/components/export/ImportExport.tsx","view/components/export/ImportExportModal.tsx","view/components/export/ImportRenameMessages.tsx","view/components/export/ImportUncategorizedSnippets.tsx","view/components/export/utils.ts","view/components/export/index.ts","view/components/messages/Modal.tsx","view/components/messages/List.tsx","view/components/messages/index.ts","view/components/snippets/Row.tsx","view/components/snippets/RowControls.tsx","view/components/snippets/RowEdit.tsx","view/components/snippets/Snippet.tsx","view/components/snippets/Snippets.tsx","view/components/snippets/Section.tsx","view/components/snippets/SectionEdit.tsx","view/components/snippets/index.ts","view/components/View.tsx","view/components/index.ts","app/index.tsx"],"names":["options","isValidElement","rerenderQueue","defer","prevDebounce","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","push","defaultProps","createVNode","original","vnode","undefined","constructor","createRef","current","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","value","unmount","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","slice","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","call","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","firstChild","checked","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","addHookName","window","__PREACT_DEVTOOLS__","attachPreact","loggedTypeFailures","resetPropWarnings","getDisplayName","displayName","renderStack","ownerStack","getCurrentVNode","hasBabelPlugin","isPossibleOwner","getOwnerStack","stack","next","reduce","acc","owner","source","__source","fileName","lineNumber","console","warn","isWeakMapSupported","WeakMap","serializeVNode","attrs","prop","hasOwnProperty","Object","toString","JSON","stringify","oldDiff","oldDiffed","oldRoot","oldRender","pop","parent","hooksAllowed","oldBeforeDiff","oldVnode","oldCatchError","oldHook","warnedComponents","useEffect","useLayoutEffect","lazyPropTypes","deprecations","promise","Error","isValid","componentName","getClosestDomNodeParent","propTypes","has","m","lazyVNode","set","values","typeSpecs","location","getStack","keys","forEach","typeSpecName","message","comp","index","property","get","deprecatedAttributes","nodeName","deprecatedProto","create","v","__self","__proto__","join","f","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","hooks","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","action","nextValue","args","argsChanged","useRef","initialValue","useMemo","useImperativeHandle","createHandle","concat","factory","useCallback","useContext","useDebugValue","formatter","useErrorBoundary","errState","err","flushAfterPaintEffects","invokeCleanup","invokeEffect","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","filter","hook","oldArgs","newArgs","arg","shallowDiffers","PureComponent","p","memo","comparer","shouldUpdate","nextProps","updateRef","Memoed","isReactComponent","isPureReactComponent","oldDiffHook","REACT_FORWARD_SYMBOL","Symbol","for","forwardRef","fn","Forwarded","clone","$$typeof","mapFn","map","Children","count","only","normalized","toArray","Suspense","_suspenders","suspended","lazy","loader","prom","Lazy","exports","default","SuspenseList","_next","_map","suspendingVNode","suspendingComponent","resolved","onResolved","onSuspensionComplete","suspendedVNode","removeOriginal","detachedParent","originalParent","wasHydrating","detachedComponent","detachedClone","effect","fallback","list","delete","revealOrder","size","ContextProvider","Portal","_this","container","_container","_temp","before","createPortal","delegated","unsuspend","wrappedUnsuspend","Map","reverse","REACT_ELEMENT_TYPE","CAMEL_PROPS","onChangeInputType","textContent","preactRender","preactHydrate","defineProperty","configurable","writable","oldEventHook","empty","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","persist","nativeEvent","classNameDescriptor","class","oldVNodeHook","multiple","selected","className","enumerable","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","readContext","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_LowPriority","unstable_IdlePriority","unstable_runWithPriority","priority","unstable_now","performance","now","Date","version","createFactory","element","preactCloneElement","apply","unmountComponentAtNode","findDOMNode","unstable_batchedUpdates","StrictMode"],"mappings":"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","file":"app.213b2903.js","sourceRoot":"../src","sourcesContent":["import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (typeof childVNode == 'string' || typeof childVNode == 'number') {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.5.12', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","import { options } from 'preact';\nimport { initDevTools } from './devtools';\n\ninitDevTools();\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, name: string) => T}\n */\nexport function addHookName(value, name) {\n\tif (options._addHookName) {\n\t\toptions._addHookName(name);\n\t}\n\treturn value;\n}\n","import { checkPropTypes } from './check-props';\nimport { options, Component } from 'preact';\nimport {\n\tELEMENT_NODE,\n\tDOCUMENT_NODE,\n\tDOCUMENT_FRAGMENT_NODE\n} from './constants';\nimport {\n\tgetOwnerStack,\n\tsetupComponentStack,\n\tgetCurrentVNode,\n\tgetDisplayName\n} from './component-stack';\nimport { assign } from './util';\n\nconst isWeakMapSupported = typeof WeakMap == 'function';\n\nfunction getClosestDomNodeParent(parent) {\n\tif (!parent) return {};\n\tif (typeof parent.type == 'function') {\n\t\treturn getClosestDomNodeParent(parent._parent);\n\t}\n\treturn parent;\n}\n\nexport function initDebug() {\n\tsetupComponentStack();\n\n\tlet hooksAllowed = false;\n\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldVnode = options.vnode;\n\tlet oldCatchError = options._catchError;\n\tlet oldRoot = options._root;\n\tlet oldHook = options._hook;\n\tconst warnedComponents = !isWeakMapSupported\n\t\t? null\n\t\t: {\n\t\t\t\tuseEffect: new WeakMap(),\n\t\t\t\tuseLayoutEffect: new WeakMap(),\n\t\t\t\tlazyPropTypes: new WeakMap()\n\t\t  };\n\tconst deprecations = [];\n\n\toptions._catchError = (error, vnode, oldVNode) => {\n\t\tlet component = vnode && vnode._component;\n\t\tif (component && typeof error.then == 'function') {\n\t\t\tconst promise = error;\n\t\t\terror = new Error(\n\t\t\t\t`Missing Suspense. The throwing component was: ${getDisplayName(vnode)}`\n\t\t\t);\n\n\t\t\tlet parent = vnode;\n\t\t\tfor (; parent; parent = parent._parent) {\n\t\t\t\tif (parent._component && parent._component._childDidSuspend) {\n\t\t\t\t\terror = promise;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We haven't recovered and we know at this point that there is no\n\t\t\t// Suspense component higher up in the tree\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\toldCatchError(error, vnode, oldVNode);\n\n\t\t\t// when an error was handled by an ErrorBoundary we will nontheless emit an error\n\t\t\t// event on the window object. This is to make up for react compatibility in dev mode\n\t\t\t// and thus make the Next.js dev overlay work.\n\t\t\tif (typeof error.then != 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\toptions._root = (vnode, parentNode) => {\n\t\tif (!parentNode) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined parent passed to render(), this is the second argument.\\n' +\n\t\t\t\t\t'Check if the element is available in the DOM/has the correct id.'\n\t\t\t);\n\t\t}\n\n\t\tlet isValid;\n\t\tswitch (parentNode.nodeType) {\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tcase DOCUMENT_NODE:\n\t\t\t\tisValid = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tisValid = false;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\tlet componentName = getDisplayName(vnode);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected a valid HTML node as a second argument to render.\tReceived ${parentNode} instead: render(<${componentName} />, ${parentNode});`\n\t\t\t);\n\t\t}\n\n\t\tif (oldRoot) oldRoot(vnode, parentNode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tlet { type, _parent: parent } = vnode;\n\t\tlet parentVNode = getClosestDomNodeParent(parent);\n\n\t\thooksAllowed = true;\n\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined component passed to createElement()\\n\\n' +\n\t\t\t\t\t'You likely forgot to export your component or might have mixed up default and named imports' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type != null && typeof type == 'object') {\n\t\t\tif (type._children !== undefined && type._dom !== undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid type passed to createElement(): ${type}\\n\\n` +\n\t\t\t\t\t\t'Did you accidentally pass a JSX literal as JSX twice?\\n\\n' +\n\t\t\t\t\t\t`  let My${getDisplayName(vnode)} = ${serializeVNode(type)};\\n` +\n\t\t\t\t\t\t`  let vnode = <My${getDisplayName(vnode)} />;\\n\\n` +\n\t\t\t\t\t\t'This usually happens when you export a JSX literal and not the component.' +\n\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid type passed to createElement(): ' +\n\t\t\t\t\t(Array.isArray(type) ? 'array' : type)\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(type === 'thead' || type === 'tfoot' || type === 'tbody') &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (\n\t\t\ttype === 'tr' &&\n\t\t\tparentVNode.type !== 'thead' &&\n\t\t\tparentVNode.type !== 'tfoot' &&\n\t\t\tparentVNode.type !== 'tbody' &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot/table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'td' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <td> should have a <tr> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'th' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <th> should have a <tr>.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref !== undefined &&\n\t\t\ttypeof vnode.ref != 'function' &&\n\t\t\ttypeof vnode.ref != 'object' &&\n\t\t\t!('$$typeof' in vnode) // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (typeof vnode.type == 'string') {\n\t\t\tfor (const key in vnode.props) {\n\t\t\t\tif (\n\t\t\t\t\tkey[0] === 'o' &&\n\t\t\t\t\tkey[1] === 'n' &&\n\t\t\t\t\ttypeof vnode.props[key] != 'function' &&\n\t\t\t\t\tvnode.props[key] != null\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Component's \"${key}\" property should be a function, ` +\n\t\t\t\t\t\t\t`but got [${typeof vnode.props[key]}] instead\\n` +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type == 'function' && vnode.type.propTypes) {\n\t\t\tif (\n\t\t\t\tvnode.type.displayName === 'Lazy' &&\n\t\t\t\twarnedComponents &&\n\t\t\t\t!warnedComponents.lazyPropTypes.has(vnode.type)\n\t\t\t) {\n\t\t\t\tconst m =\n\t\t\t\t\t'PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ';\n\t\t\t\ttry {\n\t\t\t\t\tconst lazyVNode = vnode.type();\n\t\t\t\t\twarnedComponents.lazyPropTypes.set(vnode.type, true);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + `Component wrapped in lazy() is ${getDisplayName(lazyVNode)}`\n\t\t\t\t\t);\n\t\t\t\t} catch (promise) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + \"We will log the wrapped component's name once it is loaded.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet values = vnode.props;\n\t\t\tif (vnode.type._forwarded) {\n\t\t\t\tvalues = assign({}, values);\n\t\t\t\tdelete values.ref;\n\t\t\t}\n\n\t\t\tcheckPropTypes(\n\t\t\t\tvnode.type.propTypes,\n\t\t\t\tvalues,\n\t\t\t\t'prop',\n\t\t\t\tgetDisplayName(vnode),\n\t\t\t\t() => getOwnerStack(vnode)\n\t\t\t);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n\n\toptions._hook = (comp, index, type) => {\n\t\tif (!comp || !hooksAllowed) {\n\t\t\tthrow new Error('Hook can only be invoked from render methods.');\n\t\t}\n\n\t\tif (oldHook) oldHook(comp, index, type);\n\t};\n\n\t// Ideally we'd want to print a warning once per component, but we\n\t// don't have access to the vnode that triggered it here. As a\n\t// compromise and to avoid flooding the console with warnings we\n\t// print each deprecation warning only once.\n\tconst warn = (property, message) => ({\n\t\tget() {\n\t\t\tconst key = 'get' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`getting vnode.${property} is deprecated, ${message}`);\n\t\t\t}\n\t\t},\n\t\tset() {\n\t\t\tconst key = 'set' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`setting vnode.${property} is not allowed, ${message}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst deprecatedAttributes = {\n\t\tnodeName: warn('nodeName', 'use vnode.type'),\n\t\tattributes: warn('attributes', 'use vnode.props'),\n\t\tchildren: warn('children', 'use vnode.props.children')\n\t};\n\n\tconst deprecatedProto = Object.create({}, deprecatedAttributes);\n\n\toptions.vnode = vnode => {\n\t\tconst props = vnode.props;\n\t\tif (\n\t\t\tvnode.type !== null &&\n\t\t\tprops != null &&\n\t\t\t('__source' in props || '__self' in props)\n\t\t) {\n\t\t\tconst newProps = (vnode.props = {});\n\t\t\tfor (let i in props) {\n\t\t\t\tconst v = props[i];\n\t\t\t\tif (i === '__source') vnode.__source = v;\n\t\t\t\telse if (i === '__self') vnode.__self = v;\n\t\t\t\telse newProps[i] = v;\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tvnode.__proto__ = deprecatedProto;\n\t\tif (oldVnode) oldVnode(vnode);\n\t};\n\n\toptions.diffed = vnode => {\n\t\t// Check if the user passed plain objects as children. Note that we cannot\n\t\t// move this check into `options.vnode` because components can receive\n\t\t// children in any shape they want (e.g.\n\t\t// `<MyJSONFormatter>{{ foo: 123, bar: \"abc\" }}</MyJSONFormatter>`).\n\t\t// Putting this check in `options.diffed` ensures that\n\t\t// `vnode._children` is set and that we only validate the children\n\t\t// that were actually rendered.\n\t\tif (vnode._children) {\n\t\t\tvnode._children.forEach(child => {\n\t\t\t\tif (child && child.type === undefined) {\n\t\t\t\t\t// Remove internal vnode keys that will always be patched\n\t\t\t\t\tdelete child._parent;\n\t\t\t\t\tdelete child._depth;\n\t\t\t\t\tconst keys = Object.keys(child).join(',');\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Objects are not valid as a child. Encountered an object with the keys {${keys}}.` +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\thooksAllowed = false;\n\n\t\tif (oldDiffed) oldDiffed(vnode);\n\n\t\tif (vnode._children != null) {\n\t\t\tconst keys = [];\n\t\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\t\tconst child = vnode._children[i];\n\t\t\t\tif (!child || child.key == null) continue;\n\n\t\t\t\tconst key = child.key;\n\t\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\n\t\t\t\t\t// Break early to not spam the console\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst setState = Component.prototype.setState;\nComponent.prototype.setState = function(update, callback) {\n\tif (this._vnode == null) {\n\t\t// `this._vnode` will be `null` during componentWillMount. But it\n\t\t// is perfectly valid to call `setState` during cWM. So we\n\t\t// need an additional check to verify that we are dealing with a\n\t\t// call inside constructor.\n\t\tif (this.state == null) {\n\t\t\tconsole.warn(\n\t\t\t\t`Calling \"this.setState\" inside the constructor of a component is a ` +\n\t\t\t\t\t`no-op and might be a bug in your application. Instead, set ` +\n\t\t\t\t\t`\"this.state = {}\" directly.\\n\\n${getOwnerStack(getCurrentVNode())}`\n\t\t\t);\n\t\t}\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.setState\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\n\treturn setState.call(this, update, callback);\n};\n\nconst forceUpdate = Component.prototype.forceUpdate;\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode == null) {\n\t\tconsole.warn(\n\t\t\t`Calling \"this.forceUpdate\" inside the constructor of a component is a ` +\n\t\t\t\t`no-op and might be a bug in your application.\\n\\n${getOwnerStack(\n\t\t\t\t\tgetCurrentVNode()\n\t\t\t\t)}`\n\t\t);\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.forceUpdate\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\treturn forceUpdate.call(this, callback);\n};\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tfor (let prop in props) {\n\t\tif (props.hasOwnProperty(prop) && prop !== 'children') {\n\t\t\tlet value = props[prop];\n\n\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\tif (typeof value == 'function') {\n\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t}\n\n\t\t\tvalue =\n\t\t\t\tObject(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${\n\t\tchildren && children.length ? '>..</' + name + '>' : ' />'\n\t}`;\n}\n","const ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nlet loggedTypeFailures = {};\n\n/**\n * Reset the history of which prop type warnings have been logged.\n */\nexport function resetPropWarnings() {\n\tloggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * Adapted from https://github.com/facebook/prop-types/blob/master/checkPropTypes.js\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n */\nexport function checkPropTypes(\n\ttypeSpecs,\n\tvalues,\n\tlocation,\n\tcomponentName,\n\tgetStack\n) {\n\tObject.keys(typeSpecs).forEach(typeSpecName => {\n\t\tlet error;\n\t\ttry {\n\t\t\terror = typeSpecs[typeSpecName](\n\t\t\t\tvalues,\n\t\t\t\ttypeSpecName,\n\t\t\t\tcomponentName,\n\t\t\t\tlocation,\n\t\t\t\tnull,\n\t\t\t\tReactPropTypesSecret\n\t\t\t);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tif (error && !(error.message in loggedTypeFailures)) {\n\t\t\tloggedTypeFailures[error.message] = true;\n\t\t\tconsole.error(\n\t\t\t\t`Failed ${location} type: ${error.message}${(getStack &&\n\t\t\t\t\t`\\n${getStack()}`) ||\n\t\t\t\t\t''}`\n\t\t\t);\n\t\t}\n\t});\n}\n","import { options, Fragment } from 'preact';\n\n/**\n * Get human readable name of the component/dom node\n * @param {import('./internal').VNode} vnode\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type === Fragment) {\n\t\treturn 'Fragment';\n\t} else if (typeof vnode.type == 'function') {\n\t\treturn vnode.type.displayName || vnode.type.name;\n\t} else if (typeof vnode.type == 'string') {\n\t\treturn vnode.type;\n\t}\n\n\treturn '#text';\n}\n\n/**\n * Used to keep track of the currently rendered `vnode` and print it\n * in debug messages.\n */\nlet renderStack = [];\n\n/**\n * Keep track of the current owners. An owner describes a component\n * which was responsible to render a specific `vnode`. This exclude\n * children that are passed via `props.children`, because they belong\n * to the parent owner.\n *\n * ```jsx\n * const Foo = props => <div>{props.children}</div> // div's owner is Foo\n * const Bar = props => {\n *   return (\n *     <Foo><span /></Foo> // Foo's owner is Bar, span's owner is Bar\n *   )\n * }\n * ```\n *\n * Note: A `vnode` may be hoisted to the root scope due to compiler\n * optimiztions. In these cases the `_owner` will be different.\n */\nlet ownerStack = [];\n\n/**\n * Get the currently rendered `vnode`\n * @returns {import('./internal').VNode | null}\n */\nexport function getCurrentVNode() {\n\treturn renderStack.length > 0 ? renderStack[renderStack.length - 1] : null;\n}\n\n/**\n * If the user doesn't have `@babel/plugin-transform-react-jsx-source`\n * somewhere in his tool chain we can't print the filename and source\n * location of a component. In that case we just omit that, but we'll\n * print a helpful message to the console, notifying the user of it.\n */\nlet hasBabelPlugin = false;\n\n/**\n * Check if a `vnode` is a possible owner.\n * @param {import('./internal').VNode} vnode\n */\nfunction isPossibleOwner(vnode) {\n\treturn typeof vnode.type == 'function' && vnode.type != Fragment;\n}\n\n/**\n * Return the component stack that was captured up to this point.\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getOwnerStack(vnode) {\n\tconst stack = [vnode];\n\tlet next = vnode;\n\twhile (next._owner != null) {\n\t\tstack.push(next._owner);\n\t\tnext = next._owner;\n\t}\n\n\treturn stack.reduce((acc, owner) => {\n\t\tacc += `  in ${getDisplayName(owner)}`;\n\n\t\tconst source = owner.__source;\n\t\tif (source) {\n\t\t\tacc += ` (at ${source.fileName}:${source.lineNumber})`;\n\t\t} else if (!hasBabelPlugin) {\n\t\t\thasBabelPlugin = true;\n\t\t\tconsole.warn(\n\t\t\t\t'Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.'\n\t\t\t);\n\t\t}\n\n\t\treturn (acc += '\\n');\n\t}, '');\n}\n\n/**\n * Setup code to capture the component trace while rendering. Note that\n * we cannot simply traverse `vnode._parent` upwards, because we have some\n * debug messages for `this.setState` where the `vnode` is `undefined`.\n */\nexport function setupComponentStack() {\n\tlet oldDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldRoot = options._root;\n\tlet oldVNode = options.vnode;\n\tlet oldRender = options._render;\n\n\toptions.diffed = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.pop();\n\t\t}\n\t\trenderStack.pop();\n\t\tif (oldDiffed) oldDiffed(vnode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\trenderStack.push(vnode);\n\t\t}\n\t\tif (oldDiff) oldDiff(vnode);\n\t};\n\n\toptions._root = (vnode, parent) => {\n\t\townerStack = [];\n\t\tif (oldRoot) oldRoot(vnode, parent);\n\t};\n\n\toptions.vnode = vnode => {\n\t\tvnode._owner =\n\t\t\townerStack.length > 0 ? ownerStack[ownerStack.length - 1] : null;\n\t\tif (oldVNode) oldVNode(vnode);\n\t};\n\n\toptions._render = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.push(vnode);\n\t\t}\n\n\t\tif (oldRender) oldRender(vnode);\n\t};\n}\n","import * as Preact from \"preact\";\nimport { WithContextHooks, WithGlobalContexts, View } from \"~/view/components\";\nexport const App: Preact.FunctionComponent = () => {\n  return (\n    <WithGlobalContexts>\n      <WithContextHooks>\n        <View />\n        <textarea\n          id=\"clipboard-input\"\n          className=\"clipboard-input invisible\"\n          tabIndex={-1}\n        />\n        <div id=\"modal-container\" className=\"modal-container\" />\n      </WithContextHooks>\n    </WithGlobalContexts>\n  );\n};\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\t// We always have ref in props.ref, except for\n\t// mobx-react. It will call this function directly\n\t// and always pass ref as the second argument.\n\tfunction Forwarded(props, ref) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\tref = props.ref || ref;\n\t\treturn fn(\n\t\t\tclone,\n\t\t\t!ref || (typeof ref === 'object' && !('current' in ref)) ? null : ref\n\t\t);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent.componentWillUnmount =\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._suspendedComponentWillUnmount =\n\t\tsuspendingComponent.componentWillUnmount;\n\tsuspendingComponent.componentWillUnmount = () => {\n\t\tonResolved();\n\n\t\tif (suspendingComponent._suspendedComponentWillUnmount) {\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount();\n\t\t}\n\t};\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n","import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { _vnode: vnode, _container: container });\n}\n","// This file includes experimental React APIs exported from the \"scheduler\"\n// npm package. Despite being explicitely marked as unstable some libraries\n// already make use of them. This file is not a full replacement for the\n// scheduler package, but includes the necessary shims to make those libraries\n// work with Preact.\n\nexport const unstable_ImmediatePriority = 1;\nexport const unstable_UserBlockingPriority = 2;\nexport const unstable_NormalPriority = 3;\nexport const unstable_LowPriority = 4;\nexport const unstable_IdlePriority = 5;\n\n/**\n * @param {number} priority\n * @param {() => void} callback\n */\nexport function unstable_runWithPriority(priority, callback) {\n\treturn callback();\n}\n\nexport const unstable_now =\n\ttypeof performance === 'object' && typeof performance.now === 'function'\n\t\t? performance.now.bind(performance)\n\t\t: () => Date.now();\n","export const VOICE_NAMES = [\n  \"Brian\",\n  \"Amy\",\n  \"Emma\",\n  \"Joanna\",\n  \"Kendra\",\n  \"Kimberly\",\n  \"Salli\",\n  \"Joey\",\n  \"Matthew\",\n  \"Geraint\",\n];\n","export const get_stored_snippets = (): TTS.SnippetsSection[] =>\n  (\n    JSON.parse(\n      localStorage.getItem(\"tts-snippets\") ||\n        localStorage.getItem(\"tts-scratch\")\n    ) || []\n  ).map((section) => ({\n    ...section,\n    data: section.data.map((row) => {\n      const { defaultCount, ...options } = row.options ?? {};\n      const mapped = { ...row, options };\n      if (!isNaN(parseInt(defaultCount))) {\n        mapped.options.defaultCount = parseInt(defaultCount);\n      }\n      return mapped;\n    }),\n  }));\nexport const set_stored_snippets = (value: TTS.SnippetsSection[]) =>\n  localStorage.setItem(\"tts-snippets\", JSON.stringify(value));\n\nexport const get_stored_messages = (): TTS.Message[] =>\n  JSON.parse(localStorage.getItem(\"tts-messages\"));\nexport const set_stored_messages = (value: TTS.Message[]) =>\n  localStorage.setItem(\"tts-messages\", JSON.stringify(value));\n\nexport const get_stored_state = (): TTS.AppState =>\n  JSON.parse(localStorage.getItem(\"tts-state\"));\nexport const set_stored_state = (value: TTS.AppState) =>\n  localStorage.setItem(\"tts-state\", JSON.stringify(value));\n","export const TTS_URL = (voice: string = \"Brian\") =>\n  `https://api.streamelements.com/kappa/v2/speech?voice=${voice}&text=`;\n\nconst REQUEST: TTS.TTSRequest = {\n  text: \"\",\n  promise: new Promise(() => {}),\n  data: \"\",\n};\n\n/**\n * @param text {string}\n * @param request {TTS.TTSRequest} cached request to handle resending the same string\n * @param voice {string}\n * @returns {Promise<string>}\n */\nexport const get_tts_data = async (\n  text: string,\n  request: TTS.TTSRequest = REQUEST,\n  voice: string = \"Brian\"\n): Promise<string> => {\n  if (!text) {\n    return Promise.reject();\n  }\n  let speak;\n  console.log(`voice: `, voice);\n  console.log(`previous voice`, request.text.split(\":\")[0]);\n  if (`${voice}:${text}` === request.text && request.promise) {\n    speak = await request.promise;\n  } else {\n    request.text = `${voice}:${text}`;\n    request.data = \"\";\n    speak = await fetch(TTS_URL(voice) + encodeURIComponent(text.trim()));\n    request.promise = speak;\n  }\n\n  if (speak.status != 200) {\n    alert(await speak.text());\n    request.text = \"\";\n    return Promise.reject(speak.error());\n  }\n\n  if (!request.data) {\n    const mp3 = await speak.blob();\n    request.data = URL.createObjectURL(mp3);\n  }\n\n  return request.data;\n};\n\n/**\n * @param audioElemId {string} id of the HTMLAudioElement to use\n */\nexport const play_audio = (audioElemId?: string) => {\n  const audio = document.getElementById(\n    audioElemId ? `${audioElemId}-audio` : \"audio\"\n  );\n  if (!(audio instanceof HTMLAudioElement)) {\n    return;\n  }\n  audio.pause();\n  audio.load();\n  audio.play();\n};\n","export type ArrayInsertPosSpecifier<T> =\n  | \"start\"\n  | \"end\"\n  | ((a: T, b: T) => -1 | 0 | 1);\n\n// helper functions to manipulate arrays without mutating the original copy\nexport const add_item_to = <T>(\n  list: readonly T[],\n  item: T,\n  pos: ArrayInsertPosSpecifier<T> = \"end\"\n): T[] => {\n  if (!item) {\n    return list ? list.slice() : [];\n  }\n  if (!list) {\n    list = [];\n  }\n  if (list.length === 0) {\n    return [item];\n  }\n  if (typeof pos === \"function\") {\n    let index = -1;\n    let i = 0;\n    while (i < list.length && index < 0) {\n      const comp = pos(item, list[i]);\n      if (comp === 1) {\n        i++;\n      } else {\n        index = i;\n      }\n    }\n    if (index !== 0 && index !== list.length - 1) {\n      return [...list.slice(0, index), item, ...list.slice(index)];\n    }\n\n    pos = index === 0 ? \"start\" : \"end\";\n  }\n  return pos === \"start\" ? [item].concat(list) : list.concat([item]);\n};\n\nexport const remove_item_from = <T>(\n  list: readonly T[],\n  match: (item: T, index?: number) => boolean\n): T[] => {\n  const index = list.findIndex(match);\n  if (index === -1) return list.slice();\n  return list.slice(0, index).concat(list.slice(index + 1));\n};\n\nexport const replace_item_in = <T>(\n  list: readonly T[],\n  match: (item: T, index?: number) => boolean,\n  new_item: T,\n  append_if_missing?: ArrayInsertPosSpecifier<T>\n): T[] => {\n  const index = list.findIndex(match);\n  if (index === -1) {\n    return append_if_missing\n      ? add_item_to(list, new_item, append_if_missing)\n      : list.slice();\n  }\n  return list\n    .slice(0, index)\n    .concat([new_item])\n    .concat(list.slice(index + 1));\n};\n\nexport const deep_equals = (\n  a: any,\n  b: any,\n  max_depth: number = 10,\n  assume_different_after_max_depth: boolean = false,\n  depth: number = 0\n) => {\n  if (depth > max_depth) {\n    return assume_different_after_max_depth;\n  }\n  if (a === b) {\n    return true;\n  }\n  const ta = typeof a;\n  const tb = typeof b;\n  if (tb !== ta) {\n    return false;\n  }\n  if (a === null || b === null) {\n    return a === null && b === null;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every((v, i) =>\n        deep_equals(\n          v,\n          b[i],\n          max_depth,\n          assume_different_after_max_depth,\n          depth + 1\n        )\n      )\n    );\n  }\n  if (ta === \"object\") {\n    const ea = Object.entries(a);\n    const eb = Object.entries(b);\n    return (\n      ea.length === eb.length &&\n      ea.every(\n        ([k, v]) =>\n          k in b &&\n          deep_equals(\n            v,\n            b[k],\n            max_depth,\n            assume_different_after_max_depth,\n            depth + 1\n          )\n      )\n    );\n  }\n  return a === b;\n};\n","export * from \"./constants\";\nexport * from \"./storage\";\nexport * from \"./tts\";\nexport * from \"./utils\";\n","import * as common from \"~/common\";\n\nconst stored_state = common.get_stored_state();\nconst initial_state: TTS.AppState = {\n  volume: stored_state?.volume ?? 1,\n  message: stored_state?.message ?? -1,\n  settings: stored_state?.settings ?? {\n    open: stored_state?.settings?.open ?? false,\n    insert_at_cursor: stored_state?.settings?.insert_at_cursor ?? false,\n    trim_whitespace: stored_state?.settings?.trim_whitespace ?? false,\n    voice: stored_state?.settings?.voice ?? common.VOICE_NAMES[0],\n  },\n  editor: {\n    text: stored_state?.editor?.text ?? \"\",\n    max_length: stored_state?.editor?.max_length ?? 255,\n    speed: stored_state?.editor?.speed ?? false,\n  },\n};\n\nconst messages: TTS.Message[] = common.get_stored_messages() ?? [];\nconst snippets: TTS.SnippetsSection[] = common.get_stored_snippets() ?? [];\n\nexport const INITIAL_STATE = {\n  ...initial_state,\n  messages,\n  snippets,\n} as const;\n","import * as Preact from \"preact\";\nimport * as hooks from \"preact/hooks\";\nimport { INITIAL_STATE } from \"~/model/initial-state\";\n\nexport const createNamedContext = <T extends any>(\n  initialValue: T,\n  name\n): Preact.Context<ImmutableContextValue<T>> => {\n  const ctx = Preact.createContext(\n    new ImmutableContextValue(initialValue, () => {})\n  );\n  ctx.displayName = name;\n  return ctx;\n};\n\nexport class ImmutableContextValue<T extends any, S = hooks.StateUpdater<T>> {\n  constructor(value: T, setValue: S) {\n    this._value = value;\n    this._setValue = setValue;\n  }\n  private _value: T;\n  private _setValue: S;\n  get value() {\n    return this._value;\n  }\n  get setValue() {\n    return this._setValue;\n  }\n  set value(val) {}\n  set setValue(val) {}\n}\n\nexport const VOLUME_CTX = createNamedContext<number>(\n  INITIAL_STATE.volume,\n  \"VOLUME_CTX\"\n);\nexport const EDITOR_STATE = createNamedContext<TTS.EditorState>(\n  INITIAL_STATE.editor,\n  \"EDITOR_STATE\"\n);\n\nexport const LOADED_MESSAGE = createNamedContext<number>(\n  INITIAL_STATE.message ?? -1,\n  \"LOADED_MESSAGE\"\n) as Preact.Context<\n  ImmutableContextValue<number, (index: number, force?: boolean) => boolean>\n>;\n\nexport const EDITOR_UNSAVED = createNamedContext<boolean>(\n  true,\n  \"EDITOR_UNSAVED\"\n);\n\nexport const EDIT_MSG_TARGET = createNamedContext<number | undefined>(\n  undefined,\n  \"EDIT_MSG_TARGET\"\n);\n\nexport const ADD_SNIPPET_CALLBACK = createNamedContext<\n  (value: string, flag?: \"start\" | \"end\") => void\n>(() => {}, \"ADD_SNIPPET_CALLBACK\");\n\nexport const EDITOR_SETTINGS = createNamedContext<TTS.EditorSettings>(\n  INITIAL_STATE.settings,\n  \"EDITOR_SETTINGS\"\n);\n\nexport const MESSAGES = createNamedContext<TTS.Message[]>(\n  INITIAL_STATE.messages,\n  \"MESSAGES\"\n);\nexport const SNIPPETS = createNamedContext<TTS.SnippetsSection[]>(\n  INITIAL_STATE.snippets,\n  \"SNIPPETS\"\n);\n","export type TypeString<T extends boolean | string | number> = T extends boolean\n  ? \"boolean\"\n  : T extends string\n  ? \"string\"\n  : T extends number\n  ? \"number\"\n  : never;\n\nexport type SchemaOfProperty<T extends boolean | string | number> = {\n  type: TypeString<T>;\n  default?: T;\n};\n\nexport type SchemaProp<T extends object, K extends keyof T> = T[K] extends\n  | boolean\n  | string\n  | number\n  ? SchemaOfProperty<T[K]>\n  : T[K] extends (infer F)[]\n  ? F extends object\n    ? { type: SchemaOf<F>; default: {} | null }\n    : never\n  : T[K] extends object\n  ? { type: SchemaOf<T[K]>; default: {} | null }\n  : never;\n\nexport type SchemaOf<T extends object> = {\n  [K in keyof T]: SchemaProp<T, K>;\n};\n\nexport const SETTINGS_SCHEMA: SchemaOf<TTS.EditorSettings> = {\n  open: { type: \"boolean\", default: false },\n  insert_at_cursor: { type: \"boolean\", default: false },\n  trim_whitespace: { type: \"boolean\", default: false },\n  voice: { type: \"string\", default: \"Brian\" },\n};\n\nexport const SNIPPET_OPTIONS_SCHEMA: SchemaOf<TTS.SnippetOptions> = {\n  prefix: { type: \"string\", default: \"\" },\n  suffix: { type: \"string\", default: \"\" },\n  space_before: { type: \"boolean\", default: false },\n  space_after: { type: \"boolean\", default: false },\n  default_count: { type: \"number\", default: 1 },\n} as const;\n\nexport const SNIPPET_SCHEMA: SchemaOf<TTS.Snippet> = {\n  text: { type: \"string\" },\n  options: {\n    type: SNIPPET_OPTIONS_SCHEMA,\n    default: {},\n  },\n} as const;\n\nexport const SNIPPET_SECTION_SCHEMA: SchemaOf<TTS.SnippetsSection> = {\n  name: { type: \"string\" },\n  open: { type: \"boolean\", default: false },\n  data: { type: SNIPPET_SCHEMA, default: null },\n} as const;\n\nexport const MESSAGE_OPTIONS_SCHEMA: SchemaOf<TTS.MessageOptions> = {\n  max_length: { type: \"number\", default: 255 },\n  speed: { type: \"boolean\", default: false },\n};\n\nexport const MESSAGE_SCHEMA: SchemaOf<TTS.Message> = {\n  name: { type: \"string\" },\n  text: { type: \"string\" },\n  options: {\n    type: MESSAGE_OPTIONS_SCHEMA,\n    default: {},\n  },\n};\n\nexport const conform_to_schema = <T extends object, K extends object>(\n  data: T,\n  schema: SchemaOf<K>\n): K | null => {\n  // @ts-expect-error:\n  const output: K = {};\n  let failed = false;\n  Object.entries(schema).forEach(<PK extends keyof K>([key, type]) => {\n    if (failed) {\n      return;\n    }\n    if (typeof type.type !== \"string\") {\n      if (Array.isArray(data[key])) {\n        const arr = [];\n        data[key].forEach((d) => {\n          const conformed = conform_to_schema(d, type.type);\n          if (conformed) {\n            arr.push(conformed);\n          }\n        });\n        output[key] = arr;\n      } else if (key in data) {\n        const conformed = conform_to_schema(data[key], type.type);\n        if (conformed) {\n          output[key] = conformed;\n        } else if (!!type.default) {\n          failed = true;\n        }\n      }\n    } else if (!(key in data) || typeof data[key] !== type.type) {\n      if (!(\"default\" in type)) {\n        failed = true;\n      }\n      output[key] = type.default;\n    } else {\n      output[key] = data[key];\n    }\n  });\n  return failed ? null : output;\n};\n","export * from \"./context\";\nexport * from \"./initial-state\";\nexport * from \"./schema\";\n","export const ensure_number = (value: any, def: number) => {\n  let num = value;\n  if (typeof value === \"string\") {\n    num = parseInt(value);\n  }\n  if (isNaN(num)) {\n    return def ?? 0;\n  }\n  return num;\n};\n\nexport const insert_text_at_selection = (\n  text: string,\n  snippet: string,\n  max_length: number,\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  const { selectionStart = text.length, selectionEnd = text.length } =\n    input_ref.current ?? {};\n\n  const chars_allowed =\n    max_length - (text.length - (selectionEnd - selectionStart));\n  if (chars_allowed < 1) {\n    input_ref.current?.focus();\n    return [text, text.length] as const;\n  }\n  if (chars_allowed < snippet.length) {\n    snippet = snippet.slice(0, chars_allowed);\n  }\n  const text_start = text?.slice(0, selectionStart) ?? \"\";\n  let text_end = text?.slice(selectionEnd) ?? \"\";\n  if (snippet.startsWith(\" \") && (!text || text_start.endsWith(\" \"))) {\n    snippet = snippet.slice(1);\n  }\n  if (snippet.endsWith(\" \") && text_end.startsWith(\" \")) {\n    text_end = text_end.slice(1);\n  }\n  return [\n    `${text_start}${snippet}${text_end}`.slice(0, max_length),\n    `${text_start}${snippet}`.length,\n  ] as const;\n};\n\nexport const trim_whitespace = (text: string) => {\n  return text\n    .trim()\n    .replace(/[ ]+/g, \" \")\n    .replace(/(\\s)\\s+/g, \"$1\");\n};\n","export const maybeClassName = (className?: string) =>\n  className ? ` ${className}` : \"\";\n","import * as hooks from \"preact/hooks\";\n\nconst useMounted = () => {\n  const mounted = hooks.useRef<boolean>(true);\n  hooks.useEffect(\n    () => () => {\n      mounted.current = false;\n    },\n    []\n  );\n  return mounted;\n};\n\n// useState, but prevents setState from being called after the component unmounts\nexport const useStateIfMounted = <T>(initial_value: T) => {\n  const mounted = useMounted();\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  const setter: hooks.StateUpdater<T> = hooks.useCallback(\n    (new_value) => {\n      if (mounted.current) {\n        setValue(new_value);\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter] as const;\n};\n\nexport const useStateRef = <\n  T extends string | number | boolean | object | null\n>(\n  initial_value: T\n) => {\n  const mounted = useMounted();\n  const value_ref = hooks.useRef<T>(initial_value);\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  const setter: hooks.StateUpdater<T> = hooks.useCallback(\n    (new_value) => {\n      if (mounted.current) {\n        value_ref.current =\n          typeof new_value === \"function\"\n            ? new_value(value_ref.current)\n            : new_value;\n        setValue(new_value);\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter, value_ref] as const;\n};\n\nexport const useStateWithRef = <\n  T extends string | number | boolean | object | null\n>(\n  initial_value: T,\n  value_ref: preact.RefObject<T>\n) => {\n  const mounted = useMounted();\n  const [value, setValue] = hooks.useState<T>(initial_value);\n  hooks.useEffect(() => {\n    value_ref.current = initial_value;\n  }, []);\n  const setter: hooks.StateUpdater<T> = hooks.useCallback(\n    (new_value) => {\n      if (mounted.current) {\n        value_ref.current =\n          typeof new_value === \"function\"\n            ? new_value(value_ref.current)\n            : new_value;\n        setValue(new_value);\n      }\n    },\n    [setValue, mounted]\n  );\n  return [value, setter] as const;\n};\n\nexport const useValueRef = <T>(value: T) => {\n  const ref = hooks.useRef<T>(value);\n  ref.current = value;\n  return ref;\n};\n\nexport const useRequestStatus = <T extends any[], R>(\n  send_request: (...args: T) => Promise<R>\n) => {\n  const [state, set_state] = useStateIfMounted({\n    pending: false,\n    success: false,\n    error: null,\n  });\n  const make_request = hooks.useCallback(\n    (...args: T) => {\n      set_state({ pending: true, success: false, error: null });\n      return send_request(...args)\n        .then((res) => {\n          set_state({ pending: false, success: true, error: null });\n          return res;\n        })\n        .catch((err) => {\n          set_state({ pending: false, success: false, error: err });\n          return err;\n        });\n    },\n    [send_request]\n  );\n\n  return [state, make_request] as const;\n};\n\nexport const useContextState = <V, S>(\n  ctx: preact.Context<{ value: V; setValue: S }>\n) => {\n  const { value, setValue } = hooks.useContext(ctx);\n  return [value, setValue] as const;\n};\n","import * as Preact from \"preact\";\nimport { createPortal } from \"preact/compat\";\nimport * as hooks from \"preact/hooks\";\nimport { useStateRef, useValueRef } from \"~/view/utils\";\n\nconst window_listener_options = { once: true };\nexport const useHoldClick = (\n  on_click: (e?: any) => void,\n  on_end_click: (e?: any) => void,\n  repeat_delay: number = 150,\n  initial_delay: number = 750\n) => {\n  const [clicked, set_clicked, clicked_ref] = useStateRef<boolean>(false);\n  const on_click_ref = useValueRef(on_click);\n  const on_end_click_ref = useValueRef(on_end_click);\n  const delay = useValueRef(repeat_delay);\n  const timer = hooks.useRef<any>();\n\n  const repeat_click = hooks.useCallback(() => {\n    console.log(\"repeat click fired\", clicked_ref.current);\n    if (!clicked_ref.current) {\n      return;\n    }\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    on_click_ref.current?.();\n    timer.current = setTimeout(repeat_click, delay.current);\n  }, []);\n  const cancel = hooks.useCallback(() => {\n    console.log(\"ending hold click\");\n    set_clicked(false);\n    clearTimeout(timer.current);\n    timer.current = null;\n  }, []);\n\n  hooks.useEffect(() => {\n    if (!clicked) {\n      return;\n    }\n    timer.current = setTimeout(repeat_click, initial_delay);\n\n    window.addEventListener(\"mouseup\", cancel, window_listener_options);\n    window.addEventListener(\"blur\", cancel, window_listener_options);\n    return () => {\n      on_end_click_ref.current?.();\n      window.removeEventListener(\"mouseup\", cancel);\n      window.removeEventListener(\"blur\", cancel);\n    };\n  }, [clicked]);\n\n  const onMouseDown = hooks.useCallback((e) => {\n    e.initialClick = true;\n    on_click_ref.current?.(e);\n    set_clicked(true);\n    console.log(\"initial hold click\");\n  }, []);\n\n  return hooks.useMemo(() => {\n    const l: any = { onMouseDown };\n    if (clicked) {\n      l.onMouseLeave = cancel;\n    }\n    return l;\n  }, [clicked]);\n};\n\nexport const useModal = (content: Preact.VNode | null) => {\n  const container = document.getElementById(\"modal-container\");\n  if (container && content) {\n    return createPortal(content, container);\n  }\n  return null;\n};\n\nexport const useTempAnimation = (duration: number, delay?: number) => {\n  const timer = hooks.useRef<any>();\n  const [active, set_active, active_ref] = useStateRef<boolean>(false);\n  const reset = hooks.useCallback(() => {\n    set_active(false);\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = null;\n  }, []);\n  const trigger = hooks.useCallback(() => {\n    if (active_ref.current) {\n      reset();\n    }\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    if (delay) {\n      timer.current = setTimeout(() => {\n        set_active(true);\n        timer.current = setTimeout(reset, duration);\n      }, delay);\n    } else {\n      set_active(true);\n      timer.current = setTimeout(reset, duration);\n    }\n  }, [duration, delay]);\n\n  hooks.useEffect(() => {\n    if (active) {\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n        timer.current = null;\n      };\n    }\n  }, [active]);\n\n  return [active, trigger, set_active] as const;\n};\n\nexport const useCopyToClipboard = (text?: string) => {\n  return hooks.useCallback(async () => {\n    const elem = document.getElementById(\"clipboard-input\");\n    if (!text || !(elem instanceof HTMLTextAreaElement)) {\n      return Promise.reject();\n    }\n    const active = document.activeElement as HTMLElement;\n    elem.value = text;\n    elem.focus();\n    elem.select();\n    elem.setSelectionRange(0, 99999);\n    const success = document.execCommand(\"copy\");\n    elem.value = \"\";\n    elem.blur();\n    active?.focus();\n    return success ? Promise.resolve() : Promise.reject();\n  }, [text]);\n};\n\nexport const useDebounce = <T extends any[]>(\n  callback: (...args: T) => void,\n  delay: number = 150\n) => {\n  const timer = hooks.useRef<any>(null);\n  const cb = hooks.useCallback(\n    (...args: T) => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n      timer.current = setTimeout(() => {\n        callback(...args);\n        clearTimeout(timer.current);\n        timer.current = null;\n      }, delay);\n    },\n    [callback]\n  );\n\n  const cancel = hooks.useCallback(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = null;\n    }\n  }, []);\n\n  hooks.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n      timer.current = null;\n    };\n  }, [callback]);\n\n  return [cb, cancel] as const;\n};\n","import * as hooks from \"preact/hooks\";\nimport { get_tts_data, play_audio } from \"~/common\";\nimport { EDITOR_SETTINGS } from \"~/model\";\nimport {\n  insert_text_at_selection,\n  trim_whitespace,\n  useRequestStatus,\n  useStateRef,\n  useValueRef,\n} from \"~/view/utils\";\n\nexport const usePlayMessage = (\n  message: TTS.Message,\n  player_id?: string,\n  request?: TTS.TTSRequest\n) => {\n  const voice = hooks.useContext(EDITOR_SETTINGS).value?.voice;\n  const voice_ref = useValueRef(voice);\n  const {\n    text,\n    options: { speed, max_length },\n  } = message;\n\n  const [data, set_data, data_ref] = useStateRef(\"\");\n  const full_text = hooks.useMemo(() => {\n    if (speed && max_length !== text.length) {\n      return `${text} ${\"¡\".repeat(max_length - text.length - 1)}`;\n    }\n    return text;\n  }, [speed, text, max_length]);\n\n  const [status, fetch_tts] = useRequestStatus(get_tts_data);\n  const on_submit = hooks.useCallback(() => {\n    fetch_tts(full_text, request, voice_ref.current).then(d => {\n      if (d === data_ref.current) {\n        if (data_ref.current) play_audio(player_id);\n      } else {\n        set_data(d);\n      }\n    });\n  }, [full_text]);\n\n  hooks.useEffect(() => {\n    if (data) play_audio(player_id);\n  }, [data]);\n\n  return [data, status, on_submit, full_text] as const;\n};\n\nexport const usePlaySnippet = (\n  player_id?: string,\n  request?: TTS.TTSRequest\n) => {\n  const voice = hooks.useContext(EDITOR_SETTINGS).value?.voice;\n  const voice_ref = useValueRef(voice);\n  const [data, set_data, data_ref] = useStateRef(\"\");\n\n  const [status, fetch_tts] = useRequestStatus(get_tts_data);\n  const on_submit = hooks.useCallback(\n    (snippet: TTS.Snippet, count?: number) => {\n      const {\n        text,\n        options: { prefix = \"\", default_count, suffix = \"\" },\n      } = snippet;\n      const full_text = `${prefix}${text.repeat(\n        count || default_count || 1\n      )}${suffix}`;\n      return fetch_tts(full_text, request, voice_ref.current).then(d => {\n        if (d === data_ref.current) {\n          if (data_ref.current) play_audio(player_id);\n        } else {\n          set_data(d);\n        }\n      });\n    },\n    []\n  );\n\n  hooks.useEffect(() => {\n    if (data) play_audio(player_id);\n  }, [data]);\n\n  return [data, status, on_submit] as const;\n};\n\nexport const useAudioPlayer = (\n  player_id?: string,\n  request?: TTS.TTSRequest\n) => {\n  const voice = hooks.useContext(EDITOR_SETTINGS).value?.voice;\n  const voice_ref = useValueRef(voice);\n  const [data, set_data, data_ref] = useStateRef<string>(\"\");\n  hooks.useEffect(() => {\n    if (data) play_audio(player_id);\n  }, [data]);\n  const get_data = hooks.useCallback((text: string) => {\n    if (!text) {\n      return Promise.resolve();\n    }\n    return get_tts_data(text, request, voice_ref.current).then(d => {\n      if (d === data_ref.current) {\n        play_audio(player_id);\n      } else {\n        set_data(d);\n      }\n    });\n  }, []);\n\n  return [data, get_data] as const;\n};\n\nexport const useMessageFullText = (message: TTS.Message) => {\n  const {\n    text,\n    options: { max_length, speed },\n  } = message;\n  return hooks.useMemo(() => {\n    if (!speed || text.length === max_length) {\n      return text;\n    }\n    return `${text} ${\"¡\".repeat(max_length - text.length - 1)}`;\n  }, [text, max_length, speed]);\n};\n\nexport const useInsertSnippet = (\n  text: string,\n  max_length: number,\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  const editor_settings = hooks.useContext(EDITOR_SETTINGS).value;\n  const insert_at_cursor = useValueRef(editor_settings.insert_at_cursor);\n  const text_ref = useValueRef(text);\n  const length_ref = useValueRef(max_length);\n  const cursor_pos = hooks.useRef(-1);\n  const reset_pos = hooks.useRef(false);\n\n  const insert_snippet = hooks.useCallback(\n    (value: string, flag?: \"start\" | \"end\") => {\n      if (!flag && cursor_pos.current !== -1) {\n        input_ref.current.selectionStart = cursor_pos.current;\n        input_ref.current.selectionEnd = cursor_pos.current;\n      }\n      let new_text;\n      if (insert_at_cursor.current) {\n        const [new_text_, new_index] = insert_text_at_selection(\n          text_ref.current,\n          value,\n          length_ref.current,\n          input_ref\n        );\n        new_text = new_text_;\n        cursor_pos.current = new_index;\n      } else {\n        if (\n          value.startsWith(\" \") &&\n          (!text_ref.current || text_ref.current.endsWith(\" \"))\n        ) {\n          value = value.slice(1);\n        }\n        new_text = `${text_ref.current}${value}`.slice(0, length_ref.current);\n        cursor_pos.current = new_text.length;\n      }\n      if (flag === \"end\") {\n        if (new_text === text_ref.current) {\n          cursor_pos.current = -1;\n        } else {\n          reset_pos.current = true;\n        }\n      }\n      if (new_text === text_ref.current) {\n        input_ref.current?.focus();\n      }\n      return new_text;\n    },\n    []\n  );\n\n  hooks.useEffect(() => {\n    if (cursor_pos.current !== -1) {\n      input_ref.current?.focus();\n      input_ref.current.selectionStart = cursor_pos.current;\n      input_ref.current.selectionEnd = cursor_pos.current;\n      cursor_pos.current = -1;\n    }\n    if (reset_pos.current) {\n      cursor_pos.current = -1;\n      reset_pos.current = false;\n    }\n  }, [text]);\n\n  return insert_snippet;\n};\n\nexport const useTextOptimization = (\n  value: string,\n  set_value: hooks.StateUpdater<string>,\n  input_ref: preact.RefObject<HTMLTextAreaElement>\n) => {\n  const settings = hooks.useContext(EDITOR_SETTINGS).value;\n  const settings_ref = useValueRef(settings);\n  const last_update = hooks.useRef<string>();\n  const new_cursor_pos = hooks.useRef<number>(-1);\n\n  hooks.useEffect(() => {\n    if (value === last_update.current) {\n      if (new_cursor_pos.current !== -1) {\n        if (input_ref.current) {\n          input_ref.current.selectionStart = new_cursor_pos.current;\n          input_ref.current.selectionEnd = new_cursor_pos.current;\n        }\n        new_cursor_pos.current = -1;\n      }\n      last_update.current = \"\";\n      return;\n    }\n    if (!settings_ref.current?.trim_whitespace) {\n      return;\n    }\n\n    const { selectionStart = -9 } = input_ref.current ?? {};\n    let new_text = \"\";\n    for (let i = 0; i < value.length; i++) {\n      if (i === selectionStart) {\n        new_cursor_pos.current = new_text.length;\n      }\n\n      if (\n        /\\s/.test(value[i]) &&\n        (/\\s/.test(new_text.slice(-1)) ||\n          i === 0 ||\n          (i === value.length - 1 && i !== selectionStart - 1)) &&\n        i !== selectionStart\n      ) {\n        continue;\n      }\n      new_text += value[i];\n    }\n\n    last_update.current = new_text;\n    if (new_text !== value) {\n      set_value(new_text);\n    }\n  }, [value]);\n\n  return hooks.useCallback(\n    (text: string) => {\n      if (settings_ref.current?.trim_whitespace) {\n        text = trim_whitespace(text);\n      }\n      set_value(text);\n      return text;\n    },\n    [set_value]\n  );\n};\n","export * from \"./data\";\nexport * from \"./dom\";\nexport * from \"./tts\";\n","export * from \"./common\";\nexport * from \"./dom-helpers\";\nexport * from \"./hooks\";\n","import * as Preact from \"preact\";\nimport { PureComponent } from \"preact/compat\";\nimport { useEffect } from \"preact/hooks\";\nimport * as hooks from \"preact/hooks\";\nimport * as storage from \"~/common\";\nimport {\n  ADD_SNIPPET_CALLBACK,\n  EDIT_MSG_TARGET,\n  EDITOR_SETTINGS,\n  EDITOR_STATE,\n  EDITOR_UNSAVED,\n  ImmutableContextValue,\n  LOADED_MESSAGE,\n  MESSAGES,\n  SNIPPETS,\n  VOLUME_CTX,\n  INITIAL_STATE,\n} from \"~/model\";\nimport { useStateIfMounted, useValueRef } from \"~/view/utils\";\n\nconst CONTEXTS = {\n  VOLUME_CTX: {\n    context: VOLUME_CTX,\n    initialValue: INITIAL_STATE.volume,\n  },\n  EDITOR_STATE: {\n    context: EDITOR_STATE,\n    initialValue: INITIAL_STATE.editor,\n  },\n  EDITOR_SETTINGS: {\n    context: EDITOR_SETTINGS,\n    initialValue: INITIAL_STATE.settings,\n  },\n  EDITOR_UNSAVED: {\n    context: EDITOR_UNSAVED,\n    initialValue: true,\n  },\n  EDIT_MSG_TARGET: {\n    context: EDIT_MSG_TARGET,\n    initialValue: undefined,\n  },\n  ADD_SNIPPET_CALLBACK: {\n    context: ADD_SNIPPET_CALLBACK,\n    initialValue: () => {},\n  },\n  MESSAGES: {\n    context: MESSAGES,\n    initialValue: INITIAL_STATE.messages,\n  },\n  SNIPPETS: {\n    context: SNIPPETS,\n    initialValue: INITIAL_STATE.snippets,\n  },\n} as const;\n\ntype Contexts = typeof CONTEXTS;\ntype ContextValue<K extends keyof Contexts> =\n  Contexts[K][\"context\"] extends Preact.Context<\n    ImmutableContextValue<infer T, infer S>\n  >\n    ? T\n    : any;\ntype ContextSetter<K extends keyof Contexts> =\n  Contexts[K][\"context\"] extends Preact.Context<\n    ImmutableContextValue<infer T, infer S>\n  >\n    ? S\n    : any;\n\nexport class WithGlobalContexts extends PureComponent {\n  constructor(props) {\n    super(props);\n    // @ts-expect-error:\n    this._state = {};\n    // @ts-expect-error:\n    this._setters = {};\n    // @ts-expect-error:\n    this._ctx_values = {};\n    Object.entries(CONTEXTS).forEach(([key, { context, initialValue }]) => {\n      this._state[key] = initialValue;\n      this._setters[key] = this.createSetter(key as keyof Contexts);\n      this._ctx_values[key] = new ImmutableContextValue(\n        this._state[key],\n        this._setters[key]\n      );\n    });\n  }\n  mounted: boolean = false;\n  _state: { [K in keyof Contexts]: ContextValue<K> };\n  _setters: { [K in keyof Contexts]: ContextSetter<K> };\n  _ctx_values: {\n    [K in keyof Contexts]: ImmutableContextValue<\n      ContextValue<K>,\n      ContextSetter<K>\n    >;\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSetter = <K extends keyof Contexts>(key: K): ContextSetter<K> =>\n    ((s) => {\n      const cur_value = this._state[key];\n      const new_value: ContextValue<K> =\n        typeof s === \"function\" ? s(cur_value) : s;\n      if (cur_value !== new_value) {\n        // @ts-expect-error:\n        this._state[key] = new_value;\n        // @ts-expect-error:\n        this._ctx_values[key] = new ImmutableContextValue(\n          new_value,\n          this._setters[key] as ContextSetter<K>\n        );\n        if (this.mounted) {\n          this.forceUpdate();\n        }\n      }\n    }) as ContextSetter<K>;\n\n  render() {\n    const { children } = this.props;\n    return (\n      <Preact.Fragment>\n        {Object.entries(CONTEXTS).reduce((prev, [key, spec]) => {\n          const { Provider } = spec.context;\n          return (\n            // @ts-expect-error:\n            <Provider context={spec.context} value={this._ctx_values[key]}>\n              {prev}\n            </Provider>\n          );\n        }, children)}\n      </Preact.Fragment>\n    );\n  }\n}\n\nexport const WithContextHooks: Preact.FunctionComponent = ({ children }) => {\n  const messages = hooks.useContext(MESSAGES).value;\n  const snippets = hooks.useContext(SNIPPETS).value;\n  const volume = hooks.useContext(VOLUME_CTX).value;\n  const editor_state = hooks.useContext(EDITOR_STATE).value;\n  const editor_settings = hooks.useContext(EDITOR_SETTINGS).value;\n\n  const editor_unsaved = hooks.useContext(EDITOR_UNSAVED).value;\n  const [loaded_message, set_loaded_message] = useStateIfMounted(\n    INITIAL_STATE?.message ?? -1\n  );\n  const editor_unsaved_ref = useValueRef(editor_unsaved);\n  const load_message = hooks.useCallback((index: number, force?: boolean) => {\n    if (index == null) {\n      return false;\n    }\n    let discard = true;\n    if (editor_unsaved_ref.current && force !== true) {\n      discard = confirm(\"Are you sure you want to discard your changes?\");\n    }\n    if (discard) {\n      set_loaded_message(index);\n      return true;\n    }\n    return false;\n  }, []);\n  const ctx_value = hooks.useMemo(\n    () => new ImmutableContextValue(loaded_message, load_message),\n    [load_message, loaded_message]\n  );\n\n  useEffect(() => {\n    storage.set_stored_state({\n      volume,\n      message: loaded_message,\n      editor: editor_state,\n      settings: editor_settings,\n    });\n  }, [volume, editor_state, loaded_message, editor_settings]);\n\n  useEffect(() => {\n    storage.set_stored_messages(messages);\n  }, [messages]);\n\n  useEffect(() => {\n    storage.set_stored_snippets(snippets);\n  }, [snippets]);\n\n  return (\n    <LOADED_MESSAGE.Provider value={ctx_value}>\n      {children}\n    </LOADED_MESSAGE.Provider>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\nimport { VOLUME_CTX } from \"~/model\";\nimport { maybeClassName, useContextState, useDebounce } from \"~/view/utils\";\n\nexport const AudioPlayer: Preact.FunctionComponent<{\n  id?: string;\n  data: string;\n  className?: string;\n}> = ({ id, data, className }) => {\n  const [volume, onChangeVolume] = useContextState(VOLUME_CTX);\n  const audio_ref = useRef<HTMLAudioElement>();\n  const set_volume_cb = useCallback(\n    (e) => {\n      if (e.target.volume !== volume) {\n        onChangeVolume?.(e.target.volume);\n      }\n    },\n    [onChangeVolume]\n  );\n  const [set_volume] = useDebounce(set_volume_cb);\n  useEffect(() => {\n    window.addEventListener(\"set-volume\", (e: CustomEvent) => {\n      if (audio_ref.current && e.detail != null) {\n        console.log(\"setting volume in event\", e.detail, e.target);\n        setTimeout(() => {\n          audio_ref.current.volume = e.detail;\n        }, 150);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      audio_ref.current &&\n      volume != null &&\n      volume !== audio_ref.current?.volume\n    ) {\n      console.log(\"setting volume\", volume, audio_ref);\n      const ev = new CustomEvent(\"set-volume\", {\n        detail: volume,\n        bubbles: true,\n      });\n      window.dispatchEvent(ev);\n    }\n  }, [volume]);\n\n  return (\n    <div className={`tts-player${maybeClassName(className)}`}>\n      <audio\n        ref={audio_ref}\n        id={id ? `${id}-audio` : \"audio\"}\n        controls={true}\n        onVolumeChange={set_volume}\n      >\n        {data && (\n          <source\n            id={id ? `${id}-source` : \"source\"}\n            type=\"audio/wav\"\n            src={data}\n          />\n        )}\n      </audio>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCopyToClipboard, useTempAnimation } from \"~/view/utils\";\n\nexport const ClipboardButton: Preact.FunctionComponent<{\n  text: string;\n  disabled?: boolean;\n  className?: string;\n}> = ({ text, disabled, className }) => {\n  const [anim_active, trigger_anim, set_active] = useTempAnimation(2000);\n  const copy = useCopyToClipboard(text);\n  return (\n    <button\n      className={`btn tts-clipboard-button${className ? ` ${className}` : \"\"}`}\n      data-success={`${anim_active}`}\n      disabled={disabled}\n      onMouseDown={() => set_active(false)}\n      onClick={() =>\n        copy()\n          .then(trigger_anim)\n          .catch(() => {})\n      }\n    >\n      <div className=\"tts-clipboard-button-inner\">\n        <i className=\"fas fa-copy\" />\n        Copy to Clipboard\n      </div>\n    </button>\n  );\n};\n","import * as Preact from \"preact\";\n\nexport const StatusIndicator: Preact.FunctionComponent<{\n  status: TTS.RequestStatus;\n}> = ({ status }) => (\n  <div className=\"tts-submit-status\">\n    {status.pending ? (\n      <i className=\"fas fa-circle-notch\" />\n    ) : status.success ? (\n      <i className=\"fas fa-check-circle\" />\n    ) : status.error ? (\n      <i className=\"fas fa-exclamation-circle\" />\n    ) : null}\n  </div>\n);\n","export * from \"./AudioPlayer\";\nexport * from \"./ClipboardButton\";\nexport * from \"./StatusIndicator\";\n","import * as Preact from \"preact\";\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport {\n  ADD_SNIPPET_CALLBACK,\n  EDITOR_STATE,\n  EDITOR_UNSAVED,\n  LOADED_MESSAGE,\n} from \"~/model\";\nimport {\n  StatusIndicator,\n  EditorHeader,\n  ClipboardButton,\n  EditorMain,\n  AudioPlayer,\n  SaveMessage,\n} from \"~/view/components\";\nimport {\n  ensure_number,\n  useContextState,\n  useInsertSnippet,\n  usePlayMessage,\n  useStateIfMounted,\n} from \"~/view/utils\";\n\nexport const Editor: Preact.FunctionComponent<{\n  message?: TTS.Message;\n  updateMessages: (index: number, value: TTS.Message) => boolean;\n}> = ({ message, updateMessages }) => {\n  const [editor_state, set_editor_state] = useContextState(EDITOR_STATE);\n  const [is_unsaved, set_unsaved] = useContextState(EDITOR_UNSAVED);\n  const set_loaded_message = useContext(LOADED_MESSAGE).setValue;\n  const set_add_snippet_callback = useContext(ADD_SNIPPET_CALLBACK).setValue;\n\n  const input_ref = useRef<HTMLTextAreaElement>();\n  const [text, set_text] = useStateIfMounted(editor_state?.text ?? \"\");\n  const [speed, set_speed] = useStateIfMounted(editor_state?.speed ?? false);\n  const [max_len, set_max_length] = useStateIfMounted(\n    editor_state?.max_length ?? 255\n  );\n  const max_length = useMemo(() => ensure_number(max_len, 255), [max_len]);\n\n  useEffect(() => {\n    set_editor_state({\n      max_length: max_length,\n      speed,\n      text,\n    });\n  }, [max_length, speed, text]);\n\n  const new_message = useMemo(\n    () => ({\n      text,\n      name: message?.name,\n      options: {\n        max_length,\n        speed,\n      },\n    }),\n\n    [max_length, speed, text, message?.name]\n  );\n\n  const [data, status, on_submit, message_text] = usePlayMessage(new_message);\n\n  const first_render = useRef(true);\n  useEffect(() => {\n    if (first_render.current) {\n      first_render.current = false;\n      return;\n    }\n    if (message) {\n      set_text(message.text);\n      set_speed(message.options?.speed);\n      set_max_length(message.options?.max_length);\n    }\n  }, [message]);\n\n  const reset = useCallback(() => {\n    if (\n      is_unsaved &&\n      !confirm(\"Discard unsaved changes to the current message?\")\n    ) {\n      return;\n    }\n    set_text(\"\");\n    set_speed(false);\n    set_unsaved(false);\n    set_loaded_message(-1);\n  }, [is_unsaved]);\n\n  const insert_snippet = useInsertSnippet(text, max_length, input_ref);\n  useEffect(() => {\n    set_add_snippet_callback(() => (value: string, flag?: \"start\" | \"end\") => {\n      const new_text = insert_snippet(value, flag);\n      set_text(new_text);\n    });\n  }, []);\n\n  return (\n    <Preact.Fragment>\n      <EditorHeader\n        maxLength={max_length}\n        setMaxLength={set_max_length}\n        reset={reset}\n      />\n      <EditorMain\n        inputRef={input_ref}\n        text={text}\n        onChange={set_text}\n        onSubmit={on_submit}\n        speed={speed}\n        setSpeed={set_speed}\n        status={status}\n      />\n      <div className=\"row\">\n        <AudioPlayer data={data} />\n        <StatusIndicator status={status} />\n      </div>\n      {status.error && (\n        <div className=\"error\">{JSON.stringify(status.error, null, 2)}</div>\n      )}\n      <div className=\"row tts-main-bottom\">\n        <SaveMessage\n          disabled={!is_unsaved}\n          message={new_message}\n          updateMessages={updateMessages}\n        />\n        <ClipboardButton text={message_text} disabled={!text} />\n      </div>\n    </Preact.Fragment>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback } from \"preact/hooks\";\nimport { VOICE_NAMES } from \"~/common\";\nimport { EDITOR_SETTINGS } from \"~/model\";\nimport {\n  ensure_number,\n  useContextState,\n  useDebounce,\n  useStateIfMounted,\n  useValueRef,\n} from \"~/view/utils\";\n\nexport const EditorHeader: Preact.FunctionComponent<{\n  reset: () => void;\n  maxLength: number;\n  setMaxLength: (value: number) => void;\n}> = ({ maxLength, setMaxLength, reset }) => {\n  const [settings, set_settings] = useContextState(EDITOR_SETTINGS);\n  const settings_ref = useValueRef(settings);\n  const on_change_settings = useCallback(\n    <K extends keyof TTS.EditorSettings>(\n      key: K,\n      value: TTS.EditorSettings[K]\n    ) =>\n      set_settings({\n        ...settings_ref.current,\n        [key]: value,\n      }),\n    []\n  );\n\n  const [value, set_value] = useStateIfMounted(maxLength);\n  const [set_max_length] = useDebounce(setMaxLength, 75);\n  return (\n    <div className=\"tts-header\">\n      <div className=\"tts-header-top\">\n        <h4>TTS Message</h4>\n        <div className=\"tts-header-controls\">\n          <button\n            className=\"btn btn-with-icon icon-only btn-negative tts-settings-reset\"\n            title=\"Clear the editor and start a new message\"\n            onClick={reset}\n          >\n            <i className=\"fas fa-undo\" />\n          </button>\n          <button\n            className=\"tts-settings-button\"\n            type=\"button\"\n            onClick={() => on_change_settings(\"open\", !settings.open)}\n            data-open={`${settings.open}`}\n          >\n            <i className=\"fas fa-cog\" />\n          </button>\n        </div>\n      </div>\n      <div className=\"tts-settings\" data-open={`${settings.open}`}>\n        <div className=\"row tts-settings-section tts-settings-section-tall\">\n          <div className=\"tts-settings-item tts-settings-char-limit\">\n            <label\n              for=\"tts-settings-char-limit\"\n              className=\"tts-settings-item-label\"\n            >\n              Character Limit: {value}\n            </label>\n            <input\n              id=\"tts-settings-char-limit\"\n              className=\"tts-settings-item-control\"\n              type=\"range\"\n              min={255}\n              max={500}\n              onInput={(e) => {\n                const new_value = ensure_number(\n                  (e.target as HTMLInputElement).valueAsNumber,\n                  255\n                );\n                set_value(new_value);\n                set_max_length(new_value);\n              }}\n              value={value}\n            />\n          </div>\n          <div\n            className=\"tts-settings-item tts-settings-insert\"\n            title=\"Insert a snippet from the snippets pad at either the cursor position or at the end of the message\"\n          >\n            <div className=\"tts-settings-item-label\">Insert Snippets At:</div>\n            <div className=\"tts-settings-item-control\">\n              <label className=\"radio-button tts-settings-insert-input\">\n                <input\n                  type=\"radio\"\n                  value=\"true\"\n                  onInput={() => on_change_settings(\"insert_at_cursor\", true)}\n                  checked={settings.insert_at_cursor === true}\n                />\n                <span className=\"radio-label\">Cursor</span>\n              </label>\n              <label className=\"radio-button tts-settings-insert-input\">\n                <input\n                  type=\"radio\"\n                  value=\"true\"\n                  onInput={() => on_change_settings(\"insert_at_cursor\", false)}\n                  checked={settings.insert_at_cursor === false}\n                />\n                <span className=\"radio-label\">End</span>\n              </label>\n            </div>\n          </div>\n          <div\n            className=\"tts-settings-item tts-settings-voice\"\n            title=\"Select a TTS voice\"\n          >\n            <div className=\"tts-settings-item-label\">TTS Voice</div>\n            <div className=\"tts-settings-item-control\">\n              <select\n                value={settings.voice}\n                onChange={(e) =>\n                  on_change_settings(\n                    \"voice\",\n                    (e.target as HTMLSelectElement).value\n                  )\n                }\n              >\n                {VOICE_NAMES.map((name) => (\n                  <option value={name} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"tts-settings-section-label\">Message Optimization</div>\n        <div className=\"row tts-settings-section\">\n          <div className=\"tts-settings-item\">\n            <label\n              className=\"checkbox tts-settings-whitespace\"\n              title=\"Automatically remove any duplicate, leading, or trailing whitespace\"\n            >\n              <input\n                type=\"checkbox\"\n                checked={settings.trim_whitespace}\n                onInput={() =>\n                  on_change_settings(\n                    \"trim_whitespace\",\n                    !settings.trim_whitespace\n                  )\n                }\n              />\n              <span className=\"checkbox-label\">Automatically Trim Spaces</span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext, useRef } from \"preact/hooks\";\nimport { EDITOR_STATE } from \"~/model\";\nimport { PauseAddControl } from \"~/view/components\";\nimport { useDebounce, useTextOptimization } from \"~/view/utils\";\n\nexport const EditorMain: Preact.FunctionComponent<{\n  text: string;\n  onChange: (text: string) => void;\n  onSubmit: (text?: string) => void;\n  inputRef: Preact.RefObject<HTMLTextAreaElement>;\n  speed: boolean;\n  setSpeed: (speed: boolean) => void;\n  status: TTS.RequestStatus;\n}> = ({ text, onChange, onSubmit, speed, setSpeed, status, inputRef }) => {\n  const { max_length } = useContext(EDITOR_STATE).value;\n  return (\n    <p className=\"tts-textarea-container\">\n      <TTSTextArea\n        inputRef={inputRef}\n        id=\"tts-main-input\"\n        value={text}\n        onChange={onChange}\n        maxLength={max_length}\n        speed={speed}\n      />\n      <div className=\"tts-textarea-bottom\">\n        <div>\n          Length:{\" \"}\n          <span>\n            {text.length} / {max_length}\n          </span>\n        </div>\n        <div>\n          <label>\n            Fill remainder with Speed Modifier (¡)\n            <input\n              type=\"checkbox\"\n              checked={speed}\n              onInput={(e) => setSpeed((e.target as HTMLInputElement).checked)}\n            />\n          </label>\n        </div>\n        <PauseAddControl speedModified={speed} text={text} onAdd={onChange} />\n      </div>\n      <div className=\"row\">\n        <div className=\"tts-textarea-submit\">\n          <button\n            className=\"btn btn-primary\"\n            disabled={status.pending || !text}\n            type=\"submit\"\n            onClick={(e) => {\n              e.preventDefault();\n              onSubmit(text);\n            }}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </p>\n  );\n};\n\nexport const TTSTextArea: Preact.FunctionComponent<{\n  value: string;\n  onChange: (text: string) => void;\n  inputRef: Preact.RefObject<HTMLTextAreaElement>;\n  speed: boolean;\n  id: string;\n  maxLength: number;\n}> = ({ value, onChange, speed, id, maxLength, inputRef }) => {\n  const preview_ref = useRef<HTMLDivElement>();\n  const optimize_text = useTextOptimization(value, onChange, inputRef);\n  const [on_blur, cancel_optimize] = useDebounce(optimize_text, 300);\n\n  let end = \"\";\n  const max_len = parseInt(`${maxLength}`);\n  if (speed && max_len !== value.length) {\n    end = \"¡\".repeat(Math.max(0, max_len - value.length - 1));\n  }\n  return (\n    <div className=\"tts-textarea\">\n      <textarea\n        id={id}\n        ref={inputRef}\n        className=\"tts-textarea-input\"\n        value={value}\n        rows={12}\n        cols={82}\n        maxLength={maxLength}\n        onInput={(e) => onChange((e.target as HTMLTextAreaElement).value)}\n        onBlur={() => on_blur(value)}\n        onFocus={cancel_optimize}\n        onSelect={() => {\n          preview_ref.current?.setAttribute(\n            \"data-cursor\",\n            `${inputRef?.current?.selectionStart}`\n          );\n        }}\n        onKeyDown={() => {\n          preview_ref.current?.setAttribute(\n            \"data-cursor\",\n            `${inputRef?.current?.selectionStart}`\n          );\n        }}\n        onKeyUp={() => {\n          preview_ref.current?.setAttribute(\n            \"data-cursor\",\n            `${inputRef?.current?.selectionStart}`\n          );\n        }}\n        onClick={() => {\n          preview_ref.current?.setAttribute(\n            \"data-cursor\",\n            `${inputRef?.current?.selectionStart}`\n          );\n        }}\n      />\n      <div className=\"tts-textarea-preview\" ref={preview_ref}>\n        <span>{value}</span> <span>{end}</span>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { ensure_number, useModal, useStateIfMounted } from \"~/view/utils\";\nimport { ADD_SNIPPET_CALLBACK } from \"~/model\";\n\nexport const PAUSE_CHAR_SPEED_MODIFIED = \"ᴾ\";\n\nexport const SLASH_DURATION = 2.5 / 14; // seconds\nexport const MOD_PAUSE_CHAR_DURATION = 1.067 / 14; // seconds\n\nexport const generate_unmodified_pause = duration =>\n  \"/ \".repeat(Math.max(1, Math.round(duration / SLASH_DURATION)));\nexport const generate_modified_pause = duration =>\n  PAUSE_CHAR_SPEED_MODIFIED.repeat(\n    Math.max(1, Math.round(duration / MOD_PAUSE_CHAR_DURATION))\n  );\n\nexport const generate_pause = (duration, preserve_speed = false) =>\n  preserve_speed\n    ? generate_modified_pause(duration)\n    : generate_unmodified_pause(duration);\n\nexport const PauseAddControl: Preact.FunctionComponent<{\n  text: string;\n  speedModified: boolean;\n}> = ({ text, speedModified }) => {\n  const [open, set_open] = useStateIfMounted(false);\n  const [duration, set_duration] = useStateIfMounted(1);\n  const [preserve, set_preserve] = useStateIfMounted(speedModified);\n  const input_ref = useRef<HTMLInputElement>();\n  const on_add_pause = useContext(ADD_SNIPPET_CALLBACK).value;\n\n  const dismiss = () => set_open(false);\n  const add_pause = useCallback(() => {\n    const str = generate_pause(duration, preserve);\n    return `${!preserve && !text.endsWith(\" \") ? \" \" : \"\"}${str}`;\n  }, [duration, preserve, text]);\n\n  useEffect(() => {\n    if (open) {\n      const focused = document.activeElement as HTMLElement;\n      input_ref.current?.focus();\n      return () => {\n        input_ref.current?.blur();\n        focused?.focus();\n      };\n    }\n  }, [open]);\n\n  const modal = (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal tts-pause-modal\">\n        <div className=\"modal-header\">\n          <h3>Add a Pause</h3>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"row\">\n            <label className=\"tts-pause-modal-duration\">\n              <span>Pause Duration</span>\n              <span>\n                <input\n                  type=\"number\"\n                  value={duration}\n                  min={0.1}\n                  max={10}\n                  step={0.1}\n                  onInput={e =>\n                    set_duration(\n                      ensure_number(\n                        (e.target as HTMLInputElement).valueAsNumber,\n                        1\n                      )\n                    )\n                  }\n                />\n                seconds\n              </span>\n            </label>\n\n            <label className=\"tts-pause-modal-checkbox\">\n              <input\n                type=\"checkbox\"\n                checked={preserve}\n                onInput={e =>\n                  set_preserve((e.target as HTMLInputElement).checked)\n                }\n              />\n              Preserve Speed Modifiers\n            </label>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn\" onClick={dismiss}>\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              on_add_pause(add_pause(), \"end\");\n              dismiss();\n            }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"tts-pause-control\">\n      <button className=\"btn\" onClick={() => set_open(true)}>\n        Add Pause\n      </button>\n      {open && useModal(modal)}\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext } from \"preact/hooks\";\nimport { LOADED_MESSAGE, MESSAGES } from \"~/model\";\nimport { MessageModalBase } from \"~/view/components\";\nimport { useModal, useStateIfMounted } from \"~/view/utils\";\n\nexport const SaveMessage: Preact.FunctionComponent<{\n  message: TTS.Message;\n  updateMessages: (index: number, value: TTS.Message) => boolean;\n  disabled?: boolean;\n}> = ({ message, updateMessages, disabled }) => {\n  const [open, set_open] = useStateIfMounted(false);\n\n  return (\n    <button\n      className=\"btn\"\n      disabled={!message.text || disabled}\n      onClick={() => set_open(true)}\n    >\n      <i className=\"fas fa-save\" />\n      Save Message\n      {open &&\n        useModal(\n          <SaveMessageModal\n            message={message}\n            updateMessages={updateMessages}\n            dismiss={() => set_open(false)}\n          />\n        )}\n    </button>\n  );\n};\n\nexport const SaveMessageModal: Preact.FunctionComponent<{\n  message: TTS.Message;\n  updateMessages: (index: number, value: TTS.Message) => boolean;\n  dismiss: () => void;\n}> = ({ message, updateMessages, dismiss }) => {\n  const messages = useContext(MESSAGES).value;\n  const loaded_index = useContext(LOADED_MESSAGE).value;\n  const loaded_message = messages[loaded_index];\n\n  const { name } = message;\n  const [value, set_value] = useStateIfMounted(name);\n  const new_name = value?.trim();\n\n  return (\n    <MessageModalBase\n      message={message}\n      name={value}\n      setName={set_value}\n      dismiss={dismiss}\n      isNew={!loaded_message}\n    >\n      <button className=\"btn\" onClick={dismiss}>\n        Cancel\n      </button>\n      {!!loaded_message && (\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => {\n            if (\n              updateMessages(-1, {\n                ...message,\n                name: new_name,\n              })\n            ) {\n              dismiss();\n            }\n          }}\n          disabled={!new_name || new_name === name}\n        >\n          Save As New...\n        </button>\n      )}\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          if (\n            updateMessages(loaded_index, {\n              ...message,\n              name: new_name,\n            })\n          ) {\n            dismiss();\n          }\n        }}\n        disabled={!new_name}\n      >\n        Save {!!loaded_message ? \"Changes\" : \"New\"}\n      </button>\n    </MessageModalBase>\n  );\n};\n","export * from \"./Editor\";\nexport * from \"./Header\";\nexport * from \"./Main\";\nexport * from \"./PauseAddControl\";\nexport * from \"./SaveControl\";\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useEffect, useRef } from \"preact/hooks\";\nimport { EDITOR_SETTINGS, MESSAGES, SNIPPETS } from \"~/model\";\nimport {\n  export_messages,\n  export_snippets,\n  generate_file,\n} from \"~/view/components\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const ExportForm: Preact.FunctionComponent<{ dismiss: () => void }> = ({\n  dismiss,\n}) => {\n  const settings = useContext(EDITOR_SETTINGS).value;\n  const messages = useContext(MESSAGES).value;\n  const snippets = useContext(SNIPPETS).value;\n  const link_ref = useRef<HTMLAnchorElement>();\n\n  const [exp_messages, set_exp_messages] = useStateIfMounted(true);\n  const [exp_snippets, set_exp_snippets] = useStateIfMounted(true);\n  const [exp_settings, set_exp_settings] = useStateIfMounted(false);\n\n  const [exp_data, set_exp_data] = useStateIfMounted<string | undefined>(\n    undefined\n  );\n  const [filename, set_filename] = useStateIfMounted(\"\");\n\n  const on_submit = useCallback(() => {\n    if (!exp_messages && !exp_snippets && !exp_settings) {\n      return;\n    }\n    const export_data: TTS.ExportData = { __type: \"export-data\" };\n    if (exp_messages) {\n      export_data.messages = export_messages(messages);\n      if (!exp_snippets && !exp_settings) {\n        set_filename(`tts-data-messages`);\n        set_exp_data(generate_file(export_data.messages));\n        return;\n      }\n    }\n    if (exp_snippets) {\n      export_data.snippets = export_snippets(snippets);\n      if (!exp_messages && !exp_settings) {\n        set_filename(`tts-data-snippets`);\n        set_exp_data(generate_file(export_data.snippets));\n        return;\n      }\n    }\n    if (exp_settings) {\n      export_data.settings = { ...settings, __type: \"settings\" };\n      if (!exp_messages && !exp_snippets) {\n        set_filename(`tts-data-settings`);\n        set_exp_data(generate_file(export_data.settings));\n        return;\n      }\n    }\n    set_filename(`tts-data`);\n    set_exp_data(generate_file(export_data));\n  }, [messages, snippets, settings, exp_messages, exp_snippets, exp_settings]);\n\n  useEffect(() => {\n    if (exp_data && filename) {\n      link_ref.current?.click();\n    }\n  }, [exp_data]);\n\n  const disabled = !(exp_messages || exp_snippets || exp_settings);\n\n  return (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-export-export\">\n        <div className=\"tts-export-export-form\">\n          <h4>What data would you like to export?</h4>\n          <ul>\n            <li>\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={exp_messages}\n                  onInput={() => set_exp_messages(!exp_messages)}\n                />\n                <span className=\"checkbox-label\">Messages</span>\n              </label>\n            </li>\n            <li>\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={exp_snippets}\n                  onInput={() => set_exp_snippets(!exp_snippets)}\n                />\n                <span className=\"checkbox-label\">Snippets</span>\n              </label>\n            </li>\n            <li>\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={exp_settings}\n                  onInput={() => set_exp_settings(!exp_settings)}\n                />\n                <span className=\"checkbox-label\">Settings</span>\n              </label>\n            </li>\n          </ul>\n          <div className=\"row\">\n            <button\n              className=\"btn btn-primary btn-large\"\n              onClick={disabled ? undefined : on_submit}\n              disabled={disabled}\n            >\n              Export\n            </button>\n          </div>\n          {exp_data && filename ? (\n            <div className=\"row\">\n              <a\n                href={`data:application/json;charset=utf-8,${encodeURIComponent(\n                  exp_data\n                )}`}\n                download={`${filename}.json`}\n                ref={link_ref}\n              >\n                Click here if the download doesn't start automatically.\n              </a>\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"modal-footer tts-export-footer\">\n        <div />\n        <button className=\"btn btn-primary\" onClick={dismiss}>\n          Done\n        </button>\n      </div>\n    </Preact.Fragment>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { EDITOR_SETTINGS, MESSAGES, SNIPPETS } from \"~/model\";\nimport {\n  import_data,\n  ImportDuplicateMessages,\n  ImportDuplicateSnippets,\n  ImportRenameMessages,\n  ImportUncategorizedSnippets,\n  validate_import_data,\n} from \"~/view/components\";\nimport { useContextState, useStateIfMounted, useStateRef } from \"~/view/utils\";\n\nexport const ImportForm: Preact.FunctionComponent<{\n  dismiss: () => void;\n  initialData?: TTS.AnyExportData;\n}> = ({ dismiss, initialData }) => {\n  const [settings, set_settings] = useContextState(EDITOR_SETTINGS);\n  const [messages, set_messages] = useContextState(MESSAGES);\n  const [snippets, set_snippets] = useContextState(SNIPPETS);\n  const [data, set_data] = useStateIfMounted(initialData);\n  const [step, set_step, step_ref] = useStateRef<number>(0);\n  const parsed_data = useMemo(\n    () => (data ? import_data(data, settings, messages, snippets) : null),\n    [data]\n  );\n\n  const [messages_dupes_result, set_messages_dupes_result] =\n    useStateIfMounted<TTS.Message[]>(undefined);\n  const [messages_final_result, set_messages_final_result] =\n    useStateIfMounted<TTS.Message[]>(undefined);\n  const [snippets_dupes_result, set_snippets_dupes_result] =\n    useStateIfMounted<TTS.SnippetsSection[]>(undefined);\n  const [snippets_final_result, set_snippets_final_result] =\n    useStateIfMounted<TTS.SnippetsSection[]>(undefined);\n\n  const next_step = useCallback(() => set_step(step_ref.current + 1), []);\n  const prev_step = useCallback(() => {\n    if (step_ref.current === 0) {\n      set_data(undefined);\n      set_messages_dupes_result(undefined);\n      set_messages_final_result(undefined);\n      set_snippets_dupes_result(undefined);\n      set_snippets_final_result(undefined);\n    } else {\n      set_step(step_ref.current - 1);\n    }\n  }, []);\n\n  const [\n    settings_result,\n    messages_result_initial,\n    snippets_result_initial,\n    dup_messages = [],\n    rename_messages = [],\n    dup_snippets = [],\n    uncategorized_snippets = [],\n  ] = parsed_data ?? [];\n\n  const [success, set_success] = useStateIfMounted(false);\n\n  const on_finish = useCallback(() => {\n    if (settings_result) {\n      set_settings(settings_result);\n    }\n    if (messages_final_result) {\n      set_messages(messages_final_result);\n    }\n    if (snippets_final_result) {\n      set_snippets(snippets_final_result);\n    }\n    set_success(true);\n  }, [settings_result, messages_final_result, snippets_final_result]);\n\n  useEffect(() => {\n    if (!parsed_data) {\n      return;\n    }\n\n    if (\n      dup_messages.length === 0 &&\n      rename_messages.length === 0 &&\n      dup_snippets.length === 0 &&\n      uncategorized_snippets.length === 0\n    ) {\n      if (settings_result) {\n        set_settings(settings_result);\n      }\n      if (messages_result_initial) {\n        set_messages(messages_result_initial);\n      }\n      if (snippets_result_initial) {\n        set_snippets(snippets_result_initial);\n      }\n      set_success(true);\n    }\n\n    if (messages_result_initial) {\n      set_messages_dupes_result(messages_result_initial);\n      set_messages_final_result(messages_result_initial);\n    } else if (dup_messages.length !== 0 && rename_messages.length !== 0) {\n      set_messages_dupes_result(messages);\n      set_messages_final_result(messages);\n    }\n\n    if (snippets_result_initial) {\n      set_snippets_dupes_result(snippets_result_initial);\n      set_snippets_final_result(snippets_result_initial);\n    } else if (\n      dup_snippets.length !== 0 ||\n      uncategorized_snippets.length !== 0\n    ) {\n      set_snippets_dupes_result(snippets);\n      set_snippets_final_result(snippets);\n    }\n  }, [parsed_data]);\n\n  const steps = useMemo(() => {\n    const arr = [];\n    if (dup_messages.length !== 0) {\n      arr.push(\n        <ImportDuplicateMessages\n          current={step === arr.length}\n          duplicates={dup_messages}\n          messages={messages_result_initial ?? messages}\n          updateMessages={set_messages_dupes_result}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    if (rename_messages.length !== 0) {\n      arr.push(\n        <ImportRenameMessages\n          current={step === arr.length}\n          messages={messages_dupes_result}\n          updateMessages={set_messages_final_result}\n          duplicates={rename_messages}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    if (dup_snippets.length !== 0) {\n      arr.push(\n        <ImportDuplicateSnippets\n          current={step === arr.length}\n          snippets={snippets_result_initial ?? snippets}\n          updateSnippets={set_snippets_dupes_result}\n          duplicates={dup_snippets}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    if (uncategorized_snippets.length !== 0) {\n      arr.push(\n        <ImportUncategorizedSnippets\n          current={step === arr.length}\n          snippets={snippets_dupes_result}\n          updateSnippets={set_snippets_final_result}\n          uncategorized={uncategorized_snippets}\n          nextStep={next_step}\n          prevStep={prev_step}\n        />\n      );\n    }\n    return arr;\n  }, [\n    step,\n    dup_messages,\n    rename_messages,\n    dup_snippets,\n    uncategorized_snippets,\n    messages_result_initial,\n    messages_dupes_result,\n    snippets_result_initial,\n    snippets_dupes_result,\n  ]);\n\n  useEffect(() => {\n    if (step > 0 && step === steps.length) {\n      on_finish();\n    }\n  }, [step]);\n\n  if (!parsed_data) {\n    return (\n      <div className=\"modal-body tts-import-file\">\n        <ImportFileInput onChange={set_data} />\n      </div>\n    );\n  }\n\n  if (success) {\n    return (\n      <Preact.Fragment>\n        <div className=\"modal-body tts-import-file\">\n          <div className=\"tts-import-success\">\n            <h4>Import Successful!</h4>\n            <i className=\"far fa-check-circle\" />\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <div />\n          <button className=\"btn btn-primary btn-large\" onClick={dismiss}>\n            Finish\n          </button>\n        </div>\n      </Preact.Fragment>\n    );\n  }\n\n  return <Preact.Fragment>{steps}</Preact.Fragment>;\n};\n\nconst ImportFileInput: Preact.FunctionComponent<{\n  onChange: (data: TTS.AnyExportData) => void;\n}> = ({ onChange }) => {\n  const [bad_type, set_bad_type] = useStateIfMounted(false);\n  const [no_data, set_no_data] = useStateIfMounted(false);\n  const [dragged, set_dragged] = useStateIfMounted(false);\n\n  const input_ref = useRef<HTMLInputElement>();\n  const form_ref = useRef<HTMLFormElement>();\n\n  const upload_file = useCallback(\n    (input_file, on_finish?: () => void) => {\n      if (input_file.type !== \"application/json\") {\n        set_bad_type(true);\n        return;\n      } else if (bad_type) {\n        set_bad_type(false);\n      }\n      const reader = new FileReader();\n\n      reader.onload = ev => {\n        if (ev.target) {\n          try {\n            const new_data = JSON.parse(ev.target[\"result\"] as string);\n            const validated = validate_import_data(new_data);\n            if (validated) {\n              set_no_data(false);\n              onChange(validated);\n            } else {\n              set_no_data(true);\n            }\n          } catch (err) {\n            console.error(`Failed to parse import file:`, err);\n            set_bad_type(true);\n          }\n        }\n        on_finish?.();\n      };\n      reader.readAsText(input_file);\n    },\n    [bad_type, onChange]\n  );\n\n  return (\n    <form ref={form_ref}>\n      <div\n        data-dragged={`${dragged}`}\n        className=\"tts-import-input\"\n        onClick={() => input_ref.current?.click()}\n        onDragOver={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          set_dragged(true);\n        }}\n        onDragEnter={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          set_dragged(true);\n        }}\n        onDrop={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          set_dragged(false);\n          const input_file = e.dataTransfer.files[0];\n          if (!input_file) {\n            return;\n          }\n          upload_file(input_file, e.dataTransfer.clearData);\n        }}\n        onDragLeave={() => set_dragged(false)}\n        onDragExit={() => set_dragged(false)}\n        onDragEnd={() => set_dragged(false)}\n      >\n        <div className=\"tts-import-input-main\">\n          <i className=\"fas fa-file-upload\" />\n          <div className=\"tts-import-input-text\">\n            <span>Drag & Drop</span>\n            <span>OR</span>\n            <span>Click to Browse</span>\n          </div>\n        </div>\n        {(bad_type || no_data) && (\n          <div className=\"tts-import-input-error\">\n            {bad_type\n              ? \"You must select a valid JSON file.\"\n              : \"That file did not contain any data that could be imported.\"}\n          </div>\n        )}\n      </div>\n      <input\n        ref={input_ref}\n        className=\"invisible\"\n        type=\"file\"\n        tabIndex={-1}\n        onChange={e => {\n          // @ts-expect-error:\n          const input_file = e.target.files[0];\n          if (!input_file) {\n            return;\n          }\n          upload_file(input_file);\n        }}\n        accept=\"application/json\"\n      />\n    </form>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { replace_item_in } from \"~/common\";\nimport { is_duplicate_message } from \"~/view/components\";\nimport { useMessageFullText, useStateRef, useStateWithRef } from \"~/view/utils\";\n\ninterface DuplicateMessageRow {\n  old_message: TTS.Message;\n  new_message: TTS.Message;\n  selected: \"old\" | \"new\" | undefined;\n}\n\nexport const ImportDuplicateMessages: Preact.FunctionComponent<{\n  current: boolean;\n  messages: TTS.Message[];\n  updateMessages: (messages: TTS.Message[]) => void;\n  duplicates: TTS.Message[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  current,\n  messages,\n  updateMessages,\n  duplicates,\n  nextStep,\n  prevStep,\n}) => {\n  const result_ref = useRef<DuplicateMessageRow[]>();\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    \"old\" | \"new\" | undefined\n  >(undefined);\n\n  const items = useMemo<DuplicateMessageRow[]>(\n    () =>\n      duplicates\n        .map((d) => {\n          const orig = messages?.find((m) => is_duplicate_message(m, d));\n          if (!orig) {\n            return null;\n          }\n          const existing_row = result_ref.current?.find(\n            (r) =>\n              r.new_message.name === d.name && r.old_message.name === orig.name\n          );\n          return {\n            old_message: orig,\n            new_message: d,\n            selected: select_all_ref.current ?? existing_row?.selected,\n          };\n        })\n        .filter((a) => !!a),\n    [messages, duplicates]\n  );\n\n  const [result, set_result] = useStateWithRef(items, result_ref);\n\n  useEffect(() => {\n    if (!select_all) {\n      return;\n    }\n    set_result(result.map((r) => ({ ...r, selected: select_all })));\n  }, [select_all]);\n\n  const on_select = useCallback(\n    (row: DuplicateMessageRow, selected: \"old\" | \"new\") => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          (r) =>\n            r.new_message.name === row.new_message.name &&\n            r.old_message.name === row.old_message.name,\n          {\n            ...row,\n            selected,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(() => result.every((r) => !!r.selected), [result]);\n  const on_submit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!finished) {\n        return;\n      }\n      let output = messages;\n      for (let row of result) {\n        if (row.selected === \"new\") {\n          output = replace_item_in(\n            output,\n            (m) => m.name === row.old_message.name,\n            row.new_message\n          );\n        }\n      }\n      updateMessages(output);\n      nextStep();\n    },\n    [finished, result]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts\">\n        <p>\n          Some of the messages you imported were identical to existing messages,\n          but with different names. Choose the name you want to keep.\n        </p>\n        <form\n          id=\"duplicate-message-form\"\n          onSubmit={on_submit}\n          className=\"tts-import-compare modal-scroll-content\"\n        >\n          <div className=\"tts-import-compare-row\">\n            <div className=\"tts-import-compare-row-top\">\n              <div className=\"tts-import-compare-side\">\n                <label\n                  className=\"tts-import-compare-header\"\n                  data-static={items.length === 1}\n                >\n                  <div className=\"tts-import-compare-header-label\">\n                    Keep Original Name\n                  </div>\n                  {items.length > 1 && (\n                    <span className=\"tts-import-compare-header-input\">\n                      <input\n                        type=\"radio\"\n                        value=\"old\"\n                        name=\"select_all\"\n                        checked={select_all === \"old\"}\n                        onChange={() => set_select_all(\"old\")}\n                      />\n                      Select All\n                    </span>\n                  )}\n                </label>\n              </div>\n              <div\n                className=\"tts-import-compare-side\"\n                data-static={items.length === 1}\n              >\n                <label className=\"tts-import-compare-header\">\n                  <div className=\"tts-import-compare-header-label\">\n                    Use Imported Name\n                  </div>\n                  {items.length > 1 && (\n                    <span className=\"tts-import-compare-header-input\">\n                      <input\n                        type=\"radio\"\n                        value=\"new\"\n                        name=\"select_all\"\n                        checked={select_all === \"new\"}\n                        onChange={() => set_select_all(\"new\")}\n                      />\n                      Select All\n                    </span>\n                  )}\n                </label>\n              </div>\n            </div>\n          </div>\n          {result.map((row, i) => (\n            <ImportMessageCompareItem key={i} row={row} onSelect={on_select} />\n          ))}\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          className=\"btn btn-primary btn-large\"\n          form=\"duplicate-message-form\"\n          disabled={!finished}\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportMessageCompareItem: Preact.FunctionComponent<{\n  row: DuplicateMessageRow;\n  onSelect: (row: DuplicateMessageRow, selected: \"old\" | \"new\") => void;\n}> = ({ row, onSelect }) => {\n  const { old_message, new_message, selected } = row;\n  const text = useMessageFullText(old_message);\n\n  return (\n    <div className=\"tts-import-compare-row\">\n      <div className=\"tts-import-compare-row-top\">\n        <div\n          className=\"tts-import-compare-side\"\n          data-selected={`${selected === \"old\"}`}\n        >\n          <label className=\"btn btn-with-icon btn-large\">\n            <input\n              type=\"radio\"\n              value={old_message.name}\n              checked={selected === \"old\"}\n              onChange={() => onSelect(row, \"old\")}\n              className=\"tts-import-compare-message-old\"\n            />\n            <div className=\"tts-import-compare-message-name\">\n              {old_message.name}\n            </div>\n          </label>\n        </div>\n        <div\n          className=\"tts-import-compare-side\"\n          data-selected={`${selected === \"new\"}`}\n        >\n          <label className=\"btn btn-with-icon btn-large\">\n            <input\n              type=\"radio\"\n              value={new_message.name}\n              checked={selected === \"new\"}\n              onChange={() => onSelect(row, \"new\")}\n              className=\"tts-import-compare-message-new\"\n            />\n            <div className=\"tts-import-compare-message-name\">\n              {new_message.name}\n            </div>\n          </label>\n        </div>\n      </div>\n      <div className=\"tts-import-compare-row-bottom\">\n        <div className=\"tts-import-compare-message-text\">{text}</div>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { deep_equals, replace_item_in } from \"~/common\";\nimport { is_duplicate_snippet, Snippet } from \"~/view/components\";\nimport { useStateRef, useStateWithRef } from \"~/view/utils\";\n\ninterface DuplicateSnippetRow {\n  section: TTS.SnippetsSection;\n  old_snippet: TTS.Snippet;\n  new_snippet: TTS.Snippet;\n  selected: \"old\" | \"new\" | undefined;\n}\n\ninterface DuplicateSnippetSection {\n  rows: DuplicateSnippetRow[];\n  section: TTS.SnippetsSection;\n}\n\nexport const ImportDuplicateSnippets: Preact.FunctionComponent<{\n  current: boolean;\n  snippets: TTS.SnippetsSection[];\n  updateSnippets: (snippets: TTS.SnippetsSection[]) => void;\n  duplicates: TTS.SnippetsSection[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  current,\n  snippets,\n  updateSnippets,\n  duplicates,\n  nextStep,\n  prevStep,\n}) => {\n  const result_ref = useRef<DuplicateSnippetSection[]>();\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    \"old\" | \"new\" | undefined\n  >(undefined);\n\n  const items = useMemo<DuplicateSnippetSection[]>(\n    () =>\n      duplicates\n        .map(sec => {\n          const orig_sec = snippets?.find(sect => sect.name === sec.name);\n          if (!orig_sec) {\n            return null;\n          }\n          const result_sec = result_ref.current?.find(\n            sect => sect.section.name === sec.name\n          );\n          const rows = sec.data\n            .map(snip => {\n              const orig_snip = orig_sec.data.find(s =>\n                is_duplicate_snippet(s, snip)\n              );\n              if (!orig_snip) {\n                return null;\n              }\n              const existing_row = result_sec?.rows?.find(r =>\n                deep_equals(r.new_snippet, snip)\n              );\n              return {\n                section: sec,\n                old_snippet: orig_snip,\n                new_snippet: snip,\n                selected: select_all_ref.current ?? existing_row?.selected,\n              };\n            })\n            .filter(r => !!r);\n          return {\n            rows,\n            section: sec,\n          };\n        })\n        .filter(a => !!a),\n    [snippets, duplicates]\n  );\n\n  const [result, set_result] = useStateWithRef(items, result_ref);\n\n  useEffect(() => {\n    if (!select_all) {\n      return;\n    }\n    set_result(\n      result.map(s => ({\n        ...s,\n        rows: s.rows.map(r => ({ ...r, selected: select_all })),\n      }))\n    );\n  }, [select_all]);\n\n  const on_select = useCallback(\n    (row: DuplicateSnippetRow, selected: \"old\" | \"new\") => {\n      set_select_all(undefined);\n      const section = result_ref.current.find(\n        s => s.section.name === row.section.name\n      );\n      const new_section = {\n        ...section,\n        rows: replace_item_in(\n          section.rows,\n          r => deep_equals(r.new_snippet, row.new_snippet),\n          {\n            ...row,\n            selected,\n          }\n        ),\n      };\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          s => s.section.name === row.section.name,\n          new_section\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(\n    () => result.every(s => s.rows.every(r => !!r.selected)),\n    [result]\n  );\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!finished) {\n        return;\n      }\n      let output = snippets;\n      for (let section of result) {\n        let section_data = section.section.data;\n        for (let row of section.rows) {\n          if (row.selected === \"new\") {\n            section_data = replace_item_in(\n              section_data,\n              s => is_duplicate_snippet(s, row.old_snippet),\n              row.new_snippet\n            );\n          }\n        }\n        output = replace_item_in(output, s => s.name === section.section.name, {\n          ...section.section,\n          data: section_data,\n        });\n      }\n      updateSnippets(output);\n      nextStep();\n    },\n    [finished, result]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts tts-import-snippets-duplicates\">\n        <p>\n          Some of the snippets you imported had the same content, but with\n          different options. Choose the version you want to keep.\n        </p>\n        <form\n          id=\"duplicate-snippet-form\"\n          onSubmit={on_submit}\n          className=\"tts-import-compare tts-import-compare-snippets modal-scroll-content\"\n        >\n          <table cellSpacing={0}>\n            <thead>\n              <tr className=\"tts-import-compare-row\">\n                <th className=\"tts-import-compare-side\">\n                  <label\n                    className=\"tts-import-compare-header\"\n                    data-static={items.length === 1}\n                  >\n                    <div className=\"tts-import-compare-header-label\">\n                      Keep Original Snippet\n                    </div>\n                    {items.length > 1 && (\n                      <span className=\"tts-import-compare-header-input\">\n                        <input\n                          type=\"radio\"\n                          value=\"old\"\n                          name=\"select_all\"\n                          checked={select_all === \"old\"}\n                          onChange={() => set_select_all(\"old\")}\n                        />\n                        Select All\n                      </span>\n                    )}\n                  </label>\n                </th>\n                <th\n                  className=\"tts-import-compare-side\"\n                  data-static={items.length === 1}\n                >\n                  <label className=\"tts-import-compare-header\">\n                    <div className=\"tts-import-compare-header-label\">\n                      Use Imported Snippet\n                    </div>\n                    {items.length > 1 && (\n                      <span className=\"tts-import-compare-header-input\">\n                        <input\n                          type=\"radio\"\n                          value=\"new\"\n                          name=\"select_all\"\n                          checked={select_all === \"new\"}\n                          onChange={() => set_select_all(\"new\")}\n                        />\n                        Select All\n                      </span>\n                    )}\n                  </label>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.map(s => (\n                <ImportSnippetCompareSection\n                  key={s.section.name}\n                  {...s}\n                  onSelect={on_select}\n                />\n              ))}\n            </tbody>\n          </table>\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          disabled={!finished}\n          className=\"btn btn-primary btn-large\"\n          form=\"duplicate-snippet-form\"\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportSnippetCompareSection: Preact.FunctionComponent<{\n  section: TTS.SnippetsSection;\n  rows: DuplicateSnippetRow[];\n  onSelect: (row: DuplicateSnippetRow, selected: \"old\" | \"new\") => void;\n}> = ({ section, rows, onSelect }) => (\n  <Preact.Fragment>\n    <tr className=\"tts-import-compare-snippet-section\">\n      <td colSpan={2}>{section.name}</td>\n    </tr>\n    {rows.map((row, i) => (\n      <ImportSnippetCompareItem key={i} row={row} onSelect={onSelect} />\n    ))}\n  </Preact.Fragment>\n);\n\nexport const ImportSnippetCompareItem: Preact.FunctionComponent<{\n  row: DuplicateSnippetRow;\n  onSelect: (row: DuplicateSnippetRow, selected: \"old\" | \"new\") => void;\n}> = ({ row, onSelect }) => {\n  const { old_snippet, new_snippet, selected } = row;\n\n  return (\n    <tr className=\"tts-import-compare-row\">\n      <td\n        className=\"tts-import-compare-side\"\n        data-selected={`${selected === \"old\"}`}\n      >\n        <label className=\"btn btn-with-icon btn-large\">\n          <input\n            type=\"radio\"\n            checked={selected === \"old\"}\n            onChange={() => onSelect(row, \"old\")}\n            className=\"tts-import-compare-snippet-old\"\n          />\n          <div className=\"tts-import-compare-snippet\">\n            <Snippet data={old_snippet} showRepeats={true} />\n          </div>\n        </label>\n      </td>\n      <td\n        className=\"tts-import-compare-side\"\n        data-selected={`${selected === \"new\"}`}\n      >\n        <label className=\"btn btn-with-icon btn-large\">\n          <input\n            type=\"radio\"\n            checked={selected === \"new\"}\n            onChange={() => onSelect(row, \"new\")}\n            className=\"tts-import-compare-snippet-new\"\n          />\n          <div className=\"tts-import-compare-snippet\">\n            <Snippet data={new_snippet} showRepeats={true} />\n          </div>\n        </label>\n      </td>\n    </tr>\n  );\n};\n","import * as Preact from \"preact\";\nimport { ImportExportModal } from \"~/view/components\";\nimport { useModal, useStateIfMounted } from \"~/view/utils\";\n\nexport const ImportExport: Preact.FunctionComponent = () => {\n  const [open, set_open] = useStateIfMounted(false);\n\n  return (\n    <Preact.Fragment>\n      <button\n        className=\"icon-button tts-export-button\"\n        onClick={() => set_open(true)}\n        title=\"Import/Export\"\n      >\n        <i className=\"fas fa-exchange-alt\" />\n        <i className=\"fas fa-file\" />\n      </button>\n      {open && useModal(<ImportExportModal dismiss={() => set_open(false)} />)}\n    </Preact.Fragment>\n  );\n};\n","import * as Preact from \"preact\";\nimport { ExportForm, ImportForm } from \"~/view/components\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const ImportExportModal: Preact.FunctionComponent<{\n  dismiss: () => void;\n  importData?: any;\n  exportData?: any;\n}> = ({ importData, dismiss }) => {\n  const [tab, set_tab] = useStateIfMounted<\"import\" | \"export\">(\n    importData ? \"import\" : \"export\"\n  );\n\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal tts-export-modal\">\n        <div className=\"modal-header modal-header-tabs\">\n          <button\n            className=\"modal-header-tab\"\n            data-active={`${tab === \"import\"}`}\n            onClick={() => set_tab(\"import\")}\n          >\n            Import\n          </button>\n          <button\n            className=\"modal-header-tab\"\n            data-active={`${tab === \"export\"}`}\n            onClick={() => set_tab(\"export\")}\n          >\n            Export\n          </button>\n          <button className=\"icon-button modal-close\" onClick={dismiss}>\n            <i className=\"fas fa-times\" />\n          </button>\n        </div>\n        {tab === \"export\" ? (\n          <ExportForm dismiss={dismiss} />\n        ) : (\n          <ImportForm dismiss={dismiss} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { replace_item_in } from \"~/common\";\nimport {\n  useDebounce,\n  useStateIfMounted,\n  useStateRef,\n  useStateWithRef,\n  useValueRef,\n} from \"~/view/utils\";\n\ninterface RenameMessageRow {\n  message: TTS.Message;\n  name: string;\n  discard: boolean;\n  invalid: boolean;\n}\n\nexport const ImportRenameMessages: Preact.FunctionComponent<{\n  current: boolean;\n  messages: TTS.Message[];\n  updateMessages: (messages: TTS.Message[]) => void;\n  duplicates: TTS.Message[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  messages,\n  updateMessages,\n  duplicates: _duplicates,\n  nextStep,\n  prevStep,\n  current,\n}) => {\n  const result_ref = useRef<RenameMessageRow[]>();\n  const messages_ref = useValueRef(messages);\n  const is_invalid = useCallback(\n    (name: string, message: TTS.Message) =>\n      name === message.name ||\n      !!messages_ref.current.find(m => m.name === name) ||\n      !!result_ref.current?.find(\n        m => m.name === name && !m.discard && m.message.name !== message.name\n      ),\n    []\n  );\n\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    boolean | undefined\n  >(undefined);\n\n  const duplicates = useMemo<RenameMessageRow[]>(\n    () =>\n      _duplicates\n        ?.filter(d => messages?.find(m => m.name === d.name))\n        .map(d => {\n          const existing_row = result_ref.current?.find(\n            r => r.message.name === d.name\n          );\n          return {\n            message: d,\n            name: \"\",\n            discard: select_all_ref.current ?? false,\n            ...(existing_row ?? {}),\n            invalid: existing_row\n              ? is_invalid(existing_row.name, existing_row.message)\n              : false,\n          };\n        }),\n    [_duplicates, messages]\n  );\n\n  const [result, set_result] = useStateWithRef(duplicates, result_ref);\n  useEffect(() => {\n    set_result(duplicates);\n  }, [duplicates]);\n\n  useEffect(() => {\n    if (select_all == null) {\n      return;\n    }\n    set_result(result.map(r => ({ ...r, discard: select_all })));\n  }, [select_all]);\n\n  const on_change_name = useCallback((row: RenameMessageRow, name: string) => {\n    set_result(\n      replace_item_in(\n        result_ref.current,\n        m => m.message.name === row.message.name,\n        {\n          ...row,\n          name,\n          invalid: is_invalid(name, row.message),\n        }\n      )\n    );\n  }, []);\n\n  const on_change_discard = useCallback(\n    (row: RenameMessageRow, discard: boolean) => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          m => m.message.name === row.message.name,\n          {\n            ...row,\n            discard,\n            invalid: is_invalid(row.name, row.message),\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(\n    () =>\n      result.every(\n        r => (r.name && r.name !== r.message.name && !r.invalid) || r.discard\n      ),\n    [result]\n  );\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!e.target.checkValidity() || !finished) {\n        e.target.reportValidity();\n        return;\n      }\n      const output = messages.concat(\n        result\n          .filter(r => !r.discard && !r.invalid)\n          .map(r => ({ ...r.message, name: r.name }))\n      );\n      updateMessages(output);\n      nextStep();\n    },\n    [result, finished]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts\">\n        <p>\n          Some of the messages you imported had identical names to existing\n          messages but different content. Rename or discard these messages.\n        </p>\n        <form\n          id=\"import-rename-form\"\n          className=\"tts-import-rename modal-scroll-content\"\n          onSubmit={on_submit}\n        >\n          <table cellSpacing={0}>\n            <thead>\n              <tr className=\"tts-import-rename-row\">\n                <th className=\"tts-import-rename-message\">Message</th>\n                <th className=\"tts-import-rename-name\">New Name</th>\n                <th className=\"tts-import-rename-discard\">\n                  <label>\n                    Discard\n                    <input\n                      type=\"checkbox\"\n                      checked={select_all}\n                      onChange={() => set_select_all(!select_all)}\n                    />\n                  </label>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.map(r => (\n                <ImportMessageRenameItem\n                  key={r.message.name}\n                  {...r}\n                  onChangeName={on_change_name}\n                  onChangeDiscard={on_change_discard}\n                />\n              ))}\n            </tbody>\n          </table>\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          disabled={!finished}\n          className=\"btn btn-primary btn-large\"\n          form=\"import-rename-form\"\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportMessageRenameItem: Preact.FunctionComponent<\n  RenameMessageRow & {\n    onChangeName: (row: RenameMessageRow, name: string) => void;\n    onChangeDiscard: (row: RenameMessageRow, discard: boolean) => void;\n  }\n> = ({ onChangeName, onChangeDiscard, ...row }) => {\n  const { message, name, discard, invalid } = row;\n  const [value, set_value] = useStateIfMounted(name ?? message?.name);\n  const [on_change_name] = useDebounce(onChangeName, 80);\n  useEffect(() => {\n    on_change_name(row, value);\n  }, [value]);\n  useEffect(() => {\n    if (name !== value) {\n      set_value(name);\n    }\n  }, [name]);\n\n  return (\n    <tr className=\"tts-import-rename-row\">\n      <td className=\"tts-import-rename-message\">\n        <div className=\"tts-import-compare-message-text\">{message.text}</div>\n      </td>\n      <td className=\"tts-import-rename-name\">\n        <input\n          type=\"text\"\n          value={value}\n          // @ts-expect-error:\n          defaultValue={message.name}\n          required={!discard}\n          // @ts-expect-error:\n          onChange={e => set_value(e.target.value)}\n          disabled={discard}\n          data-invalid={`${!discard && invalid}`}\n        />\n      </td>\n      <td className=\"tts-import-rename-discard\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={discard}\n            onInput={() => onChangeDiscard(row, !discard)}\n          />\n        </label>\n      </td>\n    </tr>\n  );\n};\n","import * as Preact from \"preact\";\nimport { Snippet } from \"~/view/components\";\nimport { useCallback, useEffect, useMemo, useRef } from \"preact/hooks\";\nimport {\n  useDebounce,\n  useStateIfMounted,\n  useStateRef,\n  useStateWithRef,\n  useValueRef,\n} from \"~/view/utils\";\nimport { add_item_to, deep_equals, replace_item_in } from \"~/common\";\n\ninterface UncategorizedSnippetRow {\n  selected?: TTS.SnippetsSection;\n  snippet: TTS.Snippet;\n  discard?: boolean;\n}\n\nexport const ImportUncategorizedSnippets: Preact.FunctionComponent<{\n  current: boolean;\n  snippets: TTS.SnippetsSection[];\n  updateSnippets: (snippets: TTS.SnippetsSection[]) => void;\n  uncategorized: TTS.Snippet[];\n  nextStep: () => void;\n  prevStep: () => void;\n}> = ({\n  uncategorized,\n  updateSnippets,\n  snippets,\n  nextStep,\n  prevStep,\n  current,\n}) => {\n  const result_ref = useRef<UncategorizedSnippetRow[]>();\n  const [select_all, set_select_all, select_all_ref] = useStateRef<\n    boolean | undefined\n  >(undefined);\n\n  const items = useMemo<UncategorizedSnippetRow[]>(\n    () =>\n      uncategorized.map(s => ({\n        snippet: s,\n        selected: undefined,\n        discard: false,\n      })),\n    [uncategorized]\n  );\n\n  const [result, set_result] = useStateWithRef(items, result_ref);\n\n  useEffect(() => {\n    if (select_all == null) {\n      return;\n    }\n    set_result(\n      result.map(s => ({\n        ...s,\n        discard: select_all,\n      }))\n    );\n  }, [select_all]);\n\n  const on_select_section = useCallback(\n    (row: UncategorizedSnippetRow, selected?: TTS.SnippetsSection) => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          s => deep_equals(s.snippet, row.snippet),\n          {\n            ...row,\n            selected,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const on_change_discard = useCallback(\n    (row: UncategorizedSnippetRow, discard: boolean) => {\n      set_select_all(undefined);\n      set_result(\n        replace_item_in(\n          result_ref.current,\n          s => deep_equals(s.snippet, row.snippet),\n          {\n            ...row,\n            discard,\n          }\n        )\n      );\n    },\n    []\n  );\n\n  const finished = useMemo(\n    () => result.every(s => !!s.selected || s.discard),\n    [result]\n  );\n\n  const on_submit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!finished) {\n        return;\n      }\n      let output = snippets ?? [];\n      if (select_all_ref.current === true) {\n        nextStep();\n        return;\n      }\n\n      for (let row of result) {\n        if (!row.selected || row.discard) {\n          continue;\n        }\n        const section =\n          output.find(s => s.name === row.selected.name) ?? row.selected;\n        output = replace_item_in(\n          output,\n          s => s.name === row.selected.name,\n          {\n            ...section,\n            data: add_item_to(section.data, row.snippet),\n          },\n          \"end\"\n        );\n      }\n      updateSnippets(output);\n      nextStep();\n    },\n    [finished, result, snippets]\n  );\n\n  const sections = useMemo(\n    () =>\n      snippets?.concat(\n        result\n          .filter(\n            r =>\n              !!r.selected &&\n              !snippets.find(sec => sec.name === r.selected?.name)\n          )\n          .map(r => r.selected)\n      ),\n    [snippets, result]\n  );\n\n  return current ? (\n    <Preact.Fragment>\n      <div className=\"modal-body tts-import-conflicts tts-import-snippets-uncategorized\">\n        <p>\n          Some of the snippets you imported were not part of a group. Choose or\n          create a group to add each snippet to.\n        </p>\n        <form\n          id=\"uncategorized-snippet-form\"\n          onSubmit={on_submit}\n          className=\"tts-import-rename tts-import-categorize-snippets modal-scroll-content\"\n        >\n          <table cellSpacing={0}>\n            <thead>\n              <tr className=\"tts-import-compare-row\">\n                <th className=\"tts-import-snippet-col\">Snippet</th>\n                <th className=\"tts-import-snippet-select-section\">Section</th>\n                <th className=\"tts-import-rename-discard\">\n                  <label>\n                    Discard\n                    <input\n                      type=\"checkbox\"\n                      checked={select_all}\n                      onChange={() => set_select_all(!select_all)}\n                    />\n                  </label>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.map((s, i) => (\n                <ImportSnippetCategorizeItem\n                  key={i}\n                  row={s}\n                  sections={sections}\n                  onChangeDiscard={on_change_discard}\n                  onSelect={on_select_section}\n                />\n              ))}\n            </tbody>\n          </table>\n        </form>\n      </div>\n      <div className=\"tts-import-review-footer modal-footer\">\n        <button className=\"btn btn-large\" type=\"button\" onClick={prevStep}>\n          Back\n        </button>\n        <button\n          disabled={!finished}\n          className=\"btn btn-primary btn-large\"\n          form=\"uncategorized-snippet-form\"\n        >\n          Continue\n        </button>\n      </div>\n    </Preact.Fragment>\n  ) : null;\n};\n\nexport const ImportSnippetCategorizeItem: Preact.FunctionComponent<{\n  row: UncategorizedSnippetRow;\n  sections: TTS.SnippetsSection[];\n  onSelect: (\n    row: UncategorizedSnippetRow,\n    selected: TTS.SnippetsSection\n  ) => void;\n  onChangeDiscard: (row: UncategorizedSnippetRow, discard: boolean) => void;\n}> = ({ row, sections, onSelect, onChangeDiscard }) => {\n  const { snippet, selected, discard } = row;\n  const row_ref = useValueRef(row);\n\n  const [value, set_value] = useStateIfMounted(selected?.name ?? \"\");\n  const on_change = useCallback(\n    (name: string) => {\n      if (!name.trim()) {\n        onSelect(row_ref.current, undefined);\n        return;\n      }\n      const section: TTS.SnippetsSection = sections.find(\n        s => s.name === name\n      ) ?? {\n        name,\n        open: false,\n        data: [],\n      };\n      onSelect(row_ref.current, section);\n    },\n    [onSelect, sections]\n  );\n  const [on_change_debounced] = useDebounce(on_change, 100);\n\n  useEffect(() => {\n    on_change_debounced(value);\n  }, [value]);\n\n  return (\n    <tr className=\"tts-import-compare-row\">\n      <td className=\"tts-import-categorize-snippet\">\n        <Snippet data={snippet} showRepeats={true} />\n      </td>\n      <td className=\"tts-import-categorize-section\">\n        <label className=\"tts-import-categorize-section-input\">\n          <input\n            id=\"categorize-input\"\n            value={value}\n            // @ts-expect-error\n            onChange={e => set_value(e.target.value)}\n            list=\"categories-list\"\n            disabled={discard}\n            autocomplete=\"off\"\n          />\n          <datalist id=\"categories-list\">\n            {sections?.map(s => (\n              <option key={s.name} value={s.name}>\n                {s.name}\n              </option>\n            ))}\n          </datalist>\n        </label>\n      </td>\n      <td className=\"tts-import-rename-discard\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={discard}\n            onInput={() => onChangeDiscard(row, !discard)}\n          />\n        </label>\n      </td>\n    </tr>\n  );\n};\n","import { deep_equals } from \"~/common\";\nimport {\n  conform_to_schema,\n  MESSAGE_SCHEMA,\n  SETTINGS_SCHEMA,\n  SNIPPET_SCHEMA,\n  SNIPPET_SECTION_SCHEMA,\n} from \"~/model\";\n\nconst MAX_TYPE_CHECK_DEPTH = 6;\nexport const MESSAGE_DUPE_PROPS: readonly (keyof TTS.MessageOptions)[] = [\n  \"speed\",\n  \"max_length\",\n] as const;\nexport const SNIPPET_DUPE_PROPS: readonly (keyof TTS.SnippetOptions)[] = [\n  \"prefix\",\n  \"suffix\",\n];\n\nexport const export_messages = (\n  data: TTS.Message[]\n): TTS.ExportData[\"messages\"] => {\n  return data.map(m => ({\n    ...conform_to_schema(m, MESSAGE_SCHEMA),\n    __type: \"message\",\n  }));\n};\nexport const export_snippets = (\n  data: TTS.SnippetsSection[]\n): TTS.ExportData[\"snippets\"] => {\n  return data.map(s => ({\n    ...conform_to_schema({ ...s, data: [] }, SNIPPET_SECTION_SCHEMA),\n    __type: \"snippets-section\" as const,\n    data: s.data.map(sn => ({\n      ...conform_to_schema(sn, SNIPPET_SCHEMA),\n      __type: \"snippet\" as const,\n    })),\n  }));\n};\n\nexport const generate_file = (data: object) => JSON.stringify(data, null, \"  \");\n\nexport const is_duplicate_message = (a: TTS.Message, b: TTS.Message) =>\n  a.text === b.text && MESSAGE_DUPE_PROPS.every(k => a[k] === b[k]);\n\nexport const is_duplicate_snippet = (a: TTS.Snippet, b: TTS.Snippet) =>\n  a.text === b.text &&\n  SNIPPET_DUPE_PROPS.every(k => a.options[k] === b.options[k]);\n\nexport const import_data = (\n  data: TTS.AnyExportData,\n  settings: TTS.EditorSettings,\n  messages: TTS.Message[],\n  snippets: TTS.SnippetsSection[]\n) => {\n  let new_messages: TTS.Message[] = [];\n  let new_snippets: TTS.SnippetsSection[] = [];\n\n  const dup_messages: TTS.Message[] = [];\n  const rename_messages: TTS.Message[] = [];\n  const uncategorized_snippets: TTS.Snippet[] = [];\n  const dup_snippets_in_section: TTS.SnippetsSection[] = [];\n  const merge_snippet_sections: TTS.SnippetsSection[] = [];\n\n  const process_message = (msg: TTS.Message) => {\n    const dupe =\n      messages.find(m => is_duplicate_message(m, msg)) ||\n      new_messages.find(m => is_duplicate_message(m, msg));\n    if (dupe) {\n      if (dupe.name !== msg.name) {\n        dup_messages.push(msg);\n      }\n    } else if (\n      messages.find(m => m.name === msg.name) ||\n      new_messages.find(m => m.name === msg.name)\n    ) {\n      rename_messages.push(msg);\n    } else {\n      new_messages.push(msg);\n    }\n  };\n\n  const process_snippet_section = (section: TTS.SnippetsSection) => {\n    const existing = new_snippets.find(s => s.name === section.name);\n    if (existing) {\n      return existing;\n    }\n    const new_section = { ...section, data: [] };\n    new_snippets.push(new_section);\n    return new_section;\n  };\n\n  const process_snippet = (\n    snip: TTS.Snippet,\n    section?: TTS.SnippetsSection\n  ) => {\n    let search = uncategorized_snippets;\n    if (section) {\n      section = process_snippet_section(section);\n      search = section.data;\n    }\n    const dupe =\n      search.find(s => is_duplicate_snippet(s, snip)) ||\n      snippets\n        .find(sect => sect.name === section?.name)\n        ?.data?.find(s => is_duplicate_snippet(s, snip));\n\n    if (!dupe) {\n      if (!section) {\n        uncategorized_snippets.push(snip);\n      } else {\n        section.data.push(snip);\n      }\n      return;\n    }\n    if (deep_equals(snip, dupe)) {\n      return;\n    }\n    if (!section) {\n      return;\n    }\n\n    const existing = dup_snippets_in_section.find(s => s.name === section.name);\n    if (existing) {\n      existing.data.push(snip);\n    } else {\n      const new_section = { ...section, data: [snip] };\n      dup_snippets_in_section.push(new_section);\n    }\n  };\n\n  let settings_result;\n  let messages_result;\n  let snippets_result;\n  if (!Array.isArray(data)) {\n    if (data.__type === \"export-data\") {\n      const {\n        settings: new_settings,\n        messages: imp_messages,\n        snippets: imp_snippets,\n      } = data;\n\n      if (new_settings) {\n        const { __type, ...new_settings_ } = new_settings;\n        settings_result = { ...settings, ...new_settings_ };\n      }\n      imp_messages.forEach(({ __type, ...m }) => {\n        if (__type === \"message\") {\n          process_message(m);\n        }\n      });\n      imp_snippets.forEach(({ __type, ...s }) => {\n        if (__type === \"snippets-section\") {\n          s.data.forEach(({ __type, ...snip }) => process_snippet(snip, s));\n        }\n      });\n    } else if (data.__type === \"settings\") {\n      const { __type, ...new_settings } = data;\n      settings_result = { ...settings, ...new_settings };\n    } else if (data.__type === \"message\") {\n      const { __type, ...new_message } = data;\n      process_message(new_message);\n    } else if (data.__type === \"snippets-section\") {\n      const { __type, ...new_section } = data;\n      new_section.data.forEach(({ __type, ...snip }) =>\n        process_snippet(snip, new_section)\n      );\n    } else if (data.__type === \"snippet\") {\n      const { __type, ...new_snippet } = data;\n      process_snippet(new_snippet);\n    }\n  } else {\n    data.forEach(({ __type, ...d }) => {\n      if (__type === \"message\") {\n        process_message(d as TTS.Message);\n      } else if (__type === \"snippets-section\") {\n        d.data.forEach(({ __type, ...snip }) =>\n          process_snippet(snip as TTS.Snippet, d as TTS.SnippetsSection)\n        );\n      } else if (__type === \"snippet\") {\n        process_snippet(d as TTS.Snippet);\n      }\n    });\n  }\n\n  if (new_messages.length > 0) {\n    messages_result = messages.concat(new_messages);\n  }\n\n  new_snippets = new_snippets.filter(ns => {\n    if (snippets.find(s => s.name === ns.name)) {\n      if (ns.data.length > 0) {\n        merge_snippet_sections.push(ns);\n      }\n      return false;\n    }\n    return true;\n  });\n\n  if (merge_snippet_sections.length > 0) {\n    snippets_result = snippets.map(s => {\n      const new_data = merge_snippet_sections.find(ns => ns.name === s.name);\n      if (!new_data) {\n        return s;\n      }\n      return { ...s, data: s.data.concat(new_data.data) };\n    });\n  }\n  if (new_snippets.length > 0) {\n    snippets_result = (snippets_result ?? snippets).concat(new_snippets);\n  }\n\n  return [\n    settings_result,\n    messages_result,\n    snippets_result,\n    dup_messages,\n    rename_messages,\n    dup_snippets_in_section,\n    uncategorized_snippets.filter(\n      snip =>\n        !(snippets_result ?? snippets ?? []).find(\n          (sect: TTS.SnippetsSection) => {\n            if (!sect.data) {\n              console.log(`what is this doing in here: `, sect);\n            } else {\n              return !!sect.data.find(s => is_duplicate_snippet(s, snip));\n            }\n          }\n        )\n    ),\n  ] as const;\n};\n\n// ensure the data has a shape that we expect\nexport const validate_import_data = (\n  data: object | object[],\n  depth: number = 0,\n  expected_type?: string\n): TTS.AnyExportData | null => {\n  if (depth > MAX_TYPE_CHECK_DEPTH) {\n    return null;\n  }\n  if (Array.isArray(data)) {\n    const validated = data\n      .map(d => validate_import_data(d, depth + 1, expected_type))\n      .filter(d => !!d);\n    // if (validated.length > 0 && validated.every((v) => !!v)) {\n    return validated as TTS.ExportData[\"messages\"] | TTS.ExportData[\"snippets\"];\n    // }\n    // return null;\n  }\n\n  if (\n    !(\"__type\" in data) ||\n    typeof data[\"__type\"] !== \"string\" ||\n    (!!expected_type && data[\"__type\"] !== expected_type)\n  ) {\n    return null;\n  }\n\n  if (data[\"__type\"] === \"export-data\") {\n    if (!data[\"snippets\"] && !data[\"messages\"] && !data[\"settings\"]) {\n      return null;\n    }\n    const output: TTS.ExportData = { __type: \"export-data\" };\n    if (data[\"settings\"]) {\n      output.settings = validate_import_data(\n        data[\"settings\"],\n        depth + 1\n      ) as TTS.ExportData[\"settings\"];\n    }\n    if (data[\"messages\"]) {\n      output.messages = validate_import_data(\n        data[\"messages\"],\n        depth + 1,\n        \"message\"\n      ) as TTS.ExportData[\"messages\"];\n    }\n    if (data[\"snippets\"]) {\n      output.snippets = validate_import_data(\n        data[\"snippets\"],\n        depth + 1,\n        \"snippets-section\"\n      ) as TTS.ExportData[\"snippets\"];\n    }\n    return output;\n  }\n\n  if (data[\"__type\"] === \"settings\") {\n    return { __type: \"settings\", ...conform_to_schema(data, SETTINGS_SCHEMA) };\n  }\n\n  if (data[\"__type\"] === \"message\") {\n    return { __type: \"message\", ...conform_to_schema(data, MESSAGE_SCHEMA) };\n  }\n\n  if (data[\"__type\"] === \"snippet\") {\n    return { __type: \"snippet\", ...conform_to_schema(data, SNIPPET_SCHEMA) };\n  }\n\n  if (data[\"__type\"] === \"snippets-section\") {\n    const { data: snippets, ...section } = data as TTS.ExportedSnippetsSection;\n    return {\n      __type: \"snippets-section\",\n      ...conform_to_schema({ ...section, data: [] }, SNIPPET_SECTION_SCHEMA),\n      data: snippets\n        .filter(s => !!s)\n        .map(\n          s =>\n            validate_import_data(s, depth + 1, \"snippet\") as TTS.ExportedSnippet\n        )\n        .filter(s => !!s),\n    } as TTS.ExportedSnippetsSection;\n  }\n\n  return null;\n};\n","export * from \"./Export\";\nexport * from \"./Import\";\nexport * from \"./ImportDuplicateMessages\";\nexport * from \"./ImportDuplicateSnippets\";\nexport * from \"./ImportExport\";\nexport * from \"./ImportExportModal\";\nexport * from \"./ImportRenameMessages\";\nexport * from \"./ImportUncategorizedSnippets\";\nexport * from \"./utils\";\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\nimport { ClipboardButton } from \"~/view/components\";\nimport { useMessageFullText, useStateIfMounted } from \"~/view/utils\";\n\nexport const MessageModal: Preact.FunctionComponent<{\n  message: TTS.Message;\n  loadMessage: () => void;\n  updateMessage: (message: TTS.Message) => void;\n  deleteMessage: () => void;\n  dismiss: () => void;\n  previewMessage: (text: string) => void;\n  isNew?: boolean;\n}> = ({\n  message,\n  loadMessage,\n  updateMessage,\n  deleteMessage,\n  dismiss,\n  previewMessage,\n  isNew,\n}) => {\n  const { name = \"\", options } = message || {};\n  const text = useMessageFullText(message);\n  const [value, set_value] = useStateIfMounted(name);\n\n  const on_click_delete = useCallback(() => {\n    const should_delete = confirm(\n      \"Are you sure you want to delete this message?\"\n    );\n    if (should_delete) {\n      deleteMessage();\n      dismiss();\n    }\n  }, []);\n\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <MessageModalBase\n      message={message}\n      name={value}\n      setName={set_value}\n      dismiss={dismiss}\n      previewMessage={previewMessage}\n    >\n      {isNew ? (\n        <div />\n      ) : (\n        <button\n          className=\"btn btn-negative btn-with-icon\"\n          onClick={on_click_delete}\n          disabled={!name}\n        >\n          <i className=\"fas fa-trash\" />\n          Delete\n        </button>\n      )}\n      {!isNew && (\n        <div className=\"btn-multi\">\n          <button\n            className=\"btn btn-with-icon btn-left\"\n            onClick={() => {\n              loadMessage();\n              dismiss();\n            }}\n          >\n            <i className=\"fas fa-folder-open\" />\n            Load Into Editor\n          </button>\n          <ClipboardButton\n            className=\"btn btn-with-icon btn-right\"\n            text={text}\n          />\n        </div>\n      )}\n\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          updateMessage({\n            name: value,\n            text: message.text,\n            options,\n          });\n          dismiss();\n        }}\n        disabled={!value || value === name}\n      >\n        Save\n      </button>\n    </MessageModalBase>\n  );\n};\n\nexport const MessageModalBase: Preact.FunctionComponent<{\n  message: TTS.Message;\n  name: string;\n  setName: (value: string) => void;\n  dismiss: () => void;\n  isNew?: boolean;\n  previewMessage?: (text: string) => void;\n}> = ({ message, name, setName, dismiss, isNew, previewMessage, children }) => {\n  const input_ref = useRef<HTMLInputElement>();\n  const {\n    options: { max_length, speed },\n  } = message || {};\n  const text = useMessageFullText(message);\n\n  useEffect(() => {\n    input_ref.current?.focus();\n  }, []);\n\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal tts-message-modal\">\n        <div className=\"modal-header\">\n          <h3>{isNew ? \"Create New\" : \"Edit\"} Saved Message</h3>\n          <button className=\"icon-button modal-close\" onClick={dismiss}>\n            <i className=\"fas fa-times\" />\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"row tts-message-modal-name\">\n            <label className=\"tts-message-modal-input\">\n              <p>Message Name</p>\n              <input\n                ref={input_ref}\n                value={name}\n                onInput={(e) => setName((e.target as HTMLInputElement).value)}\n              />\n            </label>\n            {\n              // TODO: move full player here\n              /*{previewMessage && (\n              <button\n                className=\"btn btn-with-icon\"\n                onClick={() => previewMessage(text)}\n              >\n                <i className=\"fas fa-volume-up\" />\n                Preview Message\n              </button>\n            )}*/\n            }\n          </div>\n          <div className=\"tts-message-modal-preview\">{text}</div>\n          <div className=\"tts-message-modal-details\">\n            <h4>Options</h4>\n            <div className=\"row\">\n              <span>\n                Character Limit: <strong>{max_length}</strong>\n              </span>\n              <span>\n                Use Speed Modifier: <strong>{speed ? \"Yes\" : \"No\"}</strong>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useContext } from \"preact/hooks\";\nimport { LOADED_MESSAGE, MESSAGES } from \"~/model\";\nimport { AudioPlayer } from \"~/view/components\";\nimport { MessageModal } from \"~/view/components/messages/Modal\";\nimport {\n  useAudioPlayer,\n  useContextState,\n  useCopyToClipboard,\n  useMessageFullText,\n  useModal,\n  useStateIfMounted,\n} from \"~/view/utils\";\n\nexport const MessagesList: Preact.FunctionComponent<{\n  updateMessages: (index: number, message?: TTS.Message) => void;\n}> = ({ updateMessages }) => {\n  const messages = useContext(MESSAGES).value;\n  const [loaded_index, set_loaded_index] = useContextState(LOADED_MESSAGE);\n  const [edit_target, set_edit_target] = useStateIfMounted(undefined);\n\n  const [tts_data, preview_tts] = useAudioPlayer(\"messages-sidebar-player\");\n\n  return (\n    <div className=\"tts-messages\">\n      <div className=\"row tts-col-header tts-messages-header\">\n        <h4>Messages</h4>\n      </div>\n      <div className=\"tts-message-list\">\n        {messages.map((m, i) => (\n          <MessagesListItem\n            active={i === loaded_index}\n            message={m}\n            openMessageInModal={() => set_edit_target(i)}\n          />\n        ))}\n      </div>\n      <AudioPlayer\n        id=\"messages-sidebar-player\"\n        className=\"tts-messages-sidebar-player invisible\"\n        data={tts_data}\n      />\n      {edit_target != null &&\n        useModal(\n          <MessageModal\n            message={messages[edit_target]}\n            loadMessage={() => set_loaded_index(edit_target)}\n            updateMessage={(value) => updateMessages(edit_target, value)}\n            deleteMessage={() => updateMessages(edit_target)}\n            dismiss={() => set_edit_target(undefined)}\n            previewMessage={preview_tts}\n          />\n        )}\n    </div>\n  );\n};\n\nexport const MessagesListItem: Preact.FunctionComponent<{\n  active: boolean;\n  message: TTS.Message;\n  openMessageInModal: () => void;\n}> = ({ active, message, openMessageInModal }) => {\n  const copy = useCopyToClipboard(useMessageFullText(message));\n  return (\n    <div className=\"tts-message-item\" data-active={`${active}`}>\n      <div className=\"tts-message-item-header\">\n        <div className=\"tts-message-item-title\" onClick={openMessageInModal}>\n          {message.name}\n        </div>\n        <button\n          className=\"btn icon-button tts-message-item-copy\"\n          onClick={copy}\n          title=\"Copy message to clipboard\"\n        >\n          <i className=\"fas fa-clipboard\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n","export * from \"./List\";\nexport * from \"./Modal\";\n","import * as Preact from \"preact\";\nimport { useCallback, useContext, useRef } from \"preact/hooks\";\nimport { ADD_SNIPPET_CALLBACK } from \"~/model\";\nimport { SnippetsRowControls } from \"~/view/components\";\nimport { useHoldClick, useStateIfMounted, useValueRef } from \"~/view/utils\";\n\nexport const SnippetsRow: Preact.FunctionComponent<{\n  row: TTS.Snippet;\n  updateRow: (row: TTS.Snippet) => void;\n  onClickDelete: () => void;\n  onClickEdit: () => void;\n  previewText: (snippet: TTS.Snippet, count?: number) => Promise<void>;\n}> = ({ row, updateRow, onClickDelete, onClickEdit, previewText }) => {\n  const addToMessage = useContext(ADD_SNIPPET_CALLBACK).value;\n  const [edit, set_edit] = useStateIfMounted(!row.text);\n  const is_right_click = useRef(false);\n  const options_ref = useValueRef(row?.options);\n\n  const add_to_message = useCallback(\n    (e) => {\n      const {\n        text = \"\",\n        options: { prefix, space_before, default_count },\n      } = row;\n      if (e?.button === 2) {\n        e.preventDefault();\n        is_right_click.current = true;\n        addToMessage(text, e?.initialClick ? \"start\" : undefined);\n      } else if (!e?.initialClick) {\n        addToMessage(text);\n      } else {\n        let msg = prefix ? prefix : \"\";\n        addToMessage(\n          `${space_before ? \" \" : \"\"}${msg}${text.repeat(default_count || 1)}`,\n          \"start\"\n        );\n      }\n    },\n    [addToMessage, row]\n  );\n\n  const on_end_hold = useCallback(() => {\n    const { space_after, suffix = \"\" } = options_ref.current ?? {};\n    if (!is_right_click.current && (suffix || space_after)) {\n      addToMessage(`${suffix}${space_after ? \" \" : \"\"}`, \"end\");\n    } else {\n      addToMessage(\"\", \"end\");\n    }\n    is_right_click.current = false;\n    document.getElementById(\"tts-editor-input\")?.focus();\n  }, [addToMessage]);\n\n  const add_listeners = useHoldClick(add_to_message, on_end_hold, 100);\n\n  return (\n    <li className=\"tts-snippets-row\" data-edit={`${edit}`}>\n      <div className=\"tts-snippets-row-left\">\n        <button\n          type=\"button\"\n          className=\"icon-button tts-snippets-row-control tts-snippets-row-control-add\"\n          title=\"Add to message\"\n          {...add_listeners}\n          onContextMenu={(e) => e.preventDefault()}\n        >\n          <i className=\"fas fa-plus\" />\n        </button>\n        <div className=\"tts-snippets-row-text\">\n          {row.options?.prefix ? (\n            <span className=\"tts-snippets-row-text-prefix\">\n              {row.options.prefix}\n            </span>\n          ) : null}\n          {row.text ?? \" \"}\n          {row.options?.suffix ? (\n            <span className=\"tts-snippets-row-text-suffix\">\n              {row.options.suffix}\n            </span>\n          ) : null}\n        </div>\n      </div>\n      <SnippetsRowControls\n        row={row}\n        open={edit}\n        setOpen={set_edit}\n        onClickEdit={onClickEdit}\n        onClickDelete={onClickDelete}\n        previewText={previewText}\n      />\n    </li>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect } from \"preact/hooks\";\nimport { useCopyToClipboard, useRequestStatus } from \"~/view/utils\";\n\nconst listener_opts = { once: true };\nexport const SnippetsRowControls: Preact.FunctionComponent<{\n  row: TTS.Snippet;\n  open: boolean;\n  setOpen: (value: boolean) => void;\n  onClickEdit: () => void;\n  onClickDelete: () => void;\n  previewText: (snippet: TTS.Snippet, count?: number) => Promise<void>;\n}> = ({ row, open, setOpen, onClickEdit, onClickDelete, previewText }) => {\n  const {\n    text,\n    options: { prefix = \"\", default_count, suffix = \"\" },\n  } = row;\n  const [status, fetch_tts] = useRequestStatus(previewText);\n  useEffect(() => {\n    if (open) {\n      const listener = () => {\n        setTimeout(() => setOpen(false), 50);\n      };\n      window.addEventListener(\"mouseup\", listener, listener_opts);\n      return () => {\n        // @ts-expect-error:\n        window.removeEventListener(\"mouseup\", listener, listener_opts);\n      };\n    }\n  }, [open]);\n\n  const on_delete = useCallback(() => {\n    const should_continue = confirm(\n      \"Are you sure you want to delete this snippet?\"\n    );\n    if (should_continue) {\n      onClickDelete();\n    }\n  }, [onClickDelete]);\n\n  const copy_all = useCopyToClipboard(\n    `${prefix}${text.repeat(default_count || 1)}${suffix}`\n  );\n  const copy_main = useCopyToClipboard(\n    row.text.repeat(Math.round((default_count || 2) / 2))\n  );\n  return (\n    <div className=\"tts-snippets-row-controls\" data-open={`${open}`}>\n      <button\n        className=\"tts-snippets-row-control icon-button tts-snippets-row-controls-button\"\n        onClick={() => setOpen(!open)}\n      >\n        <i className=\"fas fa-cog\" />\n      </button>\n      <div className=\"tts-snippets-row-controls-menu\">\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Listen\"\n          onClick={() => fetch_tts(row, default_count)}\n          disabled={status.pending}\n        >\n          <i className=\"fas fa-volume-up\" />\n        </button>\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Copy to Clipboard\"\n          onClick={copy_all}\n          // @ts-expect-error:\n          onAuxClick={copy_main}\n          onContextMenu={(e) => {\n            e.preventDefault();\n            copy_main();\n          }}\n        >\n          <i className=\"fas fa-clipboard\" />\n        </button>\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Edit\"\n          onClick={onClickEdit}\n        >\n          <i className=\"fas fa-edit\" />\n        </button>\n        <button\n          className=\"icon-button tts-snippets-row-control\"\n          title=\"Delete\"\n          onClick={on_delete}\n        >\n          <i className=\"fas fa-trash\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useEffect, useRef } from \"preact/hooks\";\nimport { AudioPlayer } from \"~/view/components\";\nimport { usePlaySnippet, useStateIfMounted } from \"~/view/utils\";\n\nconst SNIPPETS_EDIT_MODAL_REQUEST: TTS.TTSRequest = {\n  text: \"\",\n  promise: new Promise(() => {}),\n  data: \"\",\n};\nexport const SnippetsRowEdit: Preact.FunctionComponent<{\n  row: TTS.Snippet;\n  updateRow: (row: TTS.Snippet) => void;\n  onClickDelete: () => void;\n  dismiss: () => void;\n}> = ({ row = {}, updateRow, dismiss }) => {\n  const [value, set_value] = useStateIfMounted(row.text ?? \"\");\n  const [prefix, set_prefix] = useStateIfMounted(row.options?.prefix ?? \"\");\n  const [suffix, set_suffix] = useStateIfMounted(row.options?.suffix ?? \"\");\n  const [count, set_count] = useStateIfMounted(row.options?.default_count || 1);\n  const [space_before, set_space_before] = useStateIfMounted(\n    row.options?.space_before\n  );\n  const [space_after, set_space_after] = useStateIfMounted(\n    row.options?.space_after\n  );\n\n  const [tts_data, status, preview_tts] = usePlaySnippet(\n    \"snippet-modal-player\",\n    SNIPPETS_EDIT_MODAL_REQUEST\n  );\n\n  const input_ref = useRef<HTMLInputElement>();\n  useEffect(() => {\n    input_ref.current?.focus();\n  }, []);\n\n  const new_row = {\n    text: value,\n    options: {\n      prefix,\n      suffix,\n      default_count: count,\n      space_before: space_before,\n      space_after: space_after,\n    },\n  };\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal tts-snippets-modal\">\n        <div className=\"modal-header\">\n          <h3>{!row.text ? \"Create New\" : \"Edit\"} Snippet</h3>\n          <button className=\"icon-button modal-close\" onClick={dismiss}>\n            <i className=\"fas fa-times\" />\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"row tts-snippets-modal-text\">\n            <label\n              className=\"tts-snippets-modal-prefix\"\n              title=\"Some snippets need to start with a different string than the repeated characters (e.g. the 'y' in yDRDRDR).\"\n            >\n              <span>Prefix</span>\n              <input\n                ref={input_ref}\n                value={prefix}\n                onInput={(e) =>\n                  set_prefix((e.target as HTMLInputElement).value)\n                }\n              />\n            </label>\n            <label className=\"tts-snippets-modal-input\">\n              <span>Main Text</span>\n              <input\n                ref={input_ref}\n                value={value}\n                onInput={(e) => set_value((e.target as HTMLInputElement).value)}\n              />\n            </label>\n            <label\n              className=\"tts-snippets-modal-suffix\"\n              title=\"Text to insert after all repetitions of the snippet (e.g. punctuation)\"\n            >\n              <span>Suffix</span>\n              <input\n                ref={input_ref}\n                value={suffix}\n                onInput={(e) =>\n                  set_suffix((e.target as HTMLInputElement).value)\n                }\n              />\n            </label>\n            <button\n              className=\"icon-button\"\n              onClick={() => preview_tts(new_row)}\n              disabled={!value}\n            >\n              <i className=\"fas fa-volume-up\" />\n            </button>\n            <div className=\"tts-submit-status\">\n              {status.pending ? (\n                <i className=\"fas fa-circle-notch\" />\n              ) : status.success ? (\n                <i className=\"fas fa-check-circle\" />\n              ) : status.error ? (\n                <i className=\"fas fa-exclamation-circle\" />\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <AudioPlayer id=\"snippet-modal-player\" data={tts_data} />\n            {status.error && (\n              <p className=\"error\">{JSON.stringify(status.error, null, 2)}</p>\n            )}\n          </div>\n          <h4>Options</h4>\n          <div className=\"row\">\n            <label\n              className=\"tts-snippets-modal-checkbox\"\n              title=\"When adding this snippet to the message, put a space between the existing text and the snippet.\"\n            >\n              <input\n                type=\"checkbox\"\n                checked={space_before}\n                onInput={(e) =>\n                  set_space_before((e.target as HTMLInputElement).checked)\n                }\n              />\n              Space Before\n            </label>\n            <label\n              className=\"tts-snippets-modal-checkbox\"\n              title=\"When adding this snippet to the message, put a space after the snippet.\"\n            >\n              <input\n                type=\"checkbox\"\n                checked={space_after}\n                onInput={(e) =>\n                  set_space_after((e.target as HTMLInputElement).checked)\n                }\n              />\n              Space After\n            </label>\n            <label\n              className=\"tts-snippets-modal-count\"\n              title=\"By default, the snippet's main text will be repeated this many times. This can be overridden in the Snippet sidebar.\"\n            >\n              <input\n                type=\"number\"\n                value={count}\n                min={1}\n                max={20}\n                step={1}\n                onInput={(e) => {\n                  const value = (e.target as HTMLInputElement).valueAsNumber;\n                  if (!isNaN(value)) {\n                    set_count(value);\n                  }\n                }}\n              />\n              Default Repeat Count\n            </label>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn\" onClick={dismiss}>\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              updateRow(new_row);\n              dismiss();\n            }}\n            disabled={!value}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { maybeClassName } from \"~/view/utils\";\n\nexport const Snippet: Preact.FunctionComponent<{\n  data: TTS.Snippet;\n  className?: string;\n  showRepeats?: boolean;\n}> = ({ data, className, showRepeats }) => {\n  return (\n    <div className={`snippet${maybeClassName(className)}`}>\n      <div\n        className=\"snippet-space-before\"\n        data-show={`${data.options.space_before}`}\n      />\n      {data.options.prefix && (\n        <div className=\"snippet-prefix\">{data.options.prefix}</div>\n      )}\n      <div className=\"snippet-text\">{data.text}</div>\n      {showRepeats && data.options.default_count > 1 && (\n        <div\n          className=\"snippet-text-repeats\"\n          title={`Repeat Count: ${data.options.default_count}`}\n        >\n          {data.text.repeat(data.options.default_count - 1)}\n        </div>\n      )}\n      {data.options.suffix && (\n        <div className=\"snippet-suffix\">{data.options.suffix}</div>\n      )}\n      <div\n        className=\"snippet-space-after\"\n        data-show={`${data.options.space_after}`}\n      />\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback } from \"preact/hooks\";\nimport { SNIPPETS } from \"~/model\";\nimport {\n  AudioPlayer,\n  SnippetsSection,\n  SnippetsSectionModal,\n} from \"~/view/components\";\nimport {\n  useContextState,\n  useModal,\n  usePlaySnippet,\n  useStateIfMounted,\n} from \"~/view/utils\";\n\nconst SNIPPETS_PREVIEW_REQUEST: TTS.TTSRequest = {\n  text: \"\",\n  promise: new Promise(() => {}),\n  data: \"\",\n};\nexport const Snippets: Preact.FunctionComponent = () => {\n  const [snippets, set_snippets] = useContextState(SNIPPETS);\n  const [edit_target, set_edit_target] = useStateIfMounted(undefined);\n  const update_snippets = useCallback(\n    (index: number, value?: TTS.SnippetsSection) => {\n      const data = snippets?.slice();\n      data[index] = value;\n      set_snippets(data.filter((r) => !!r));\n    },\n    [snippets]\n  );\n\n  const on_finish_edit = useCallback(\n    (name: string) => {\n      if (edit_target == null) {\n        return;\n      }\n      const section = snippets[edit_target];\n      update_snippets(edit_target, {\n        data: [],\n        open: false,\n        ...section,\n        name,\n      });\n    },\n    [edit_target, update_snippets, snippets]\n  );\n\n  const on_delete_section = useCallback(() => {\n    if (edit_target == null) {\n      return;\n    }\n    update_snippets(edit_target);\n    set_edit_target(undefined);\n  }, [update_snippets, edit_target]);\n\n  const [tts_data, , preview_tts] = usePlaySnippet(\n    \"snippets-sidebar-player\",\n    SNIPPETS_PREVIEW_REQUEST\n  );\n\n  return (\n    <div className=\"tts-snippets\">\n      <div className=\"row tts-col-header tts-snippets-header\">\n        <h4>Snippets</h4>\n\n        <button\n          className=\"tts-snippets-add-section icon-button\"\n          type=\"button\"\n          onClick={() => set_edit_target(snippets?.length ?? 0)}\n          title=\"Create a new group of snippets\"\n        >\n          <i className=\"fas fa-plus\" />\n        </button>\n      </div>\n      <div className=\"tts-snippets-section-list\">\n        {snippets.map((s, i) => (\n          <SnippetsSection\n            key={i}\n            section={s}\n            updateSection={(value) => update_snippets(i, value)}\n            onClickEdit={() => set_edit_target(i)}\n            previewText={preview_tts}\n          />\n        ))}\n      </div>\n      <AudioPlayer\n        id=\"snippets-sidebar-player\"\n        className=\"tts-snippets-sidebar-player invisible\"\n        data={tts_data}\n      />\n      {edit_target != null &&\n        useModal(\n          <SnippetsSectionModal\n            name={snippets[edit_target]?.name}\n            setName={on_finish_edit}\n            dismiss={() => set_edit_target(undefined)}\n            deleteSection={on_delete_section}\n          />\n        )}\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect } from \"preact/hooks\";\nimport { SnippetsRow, SnippetsRowEdit } from \"~/view/components\";\nimport { useModal, useStateIfMounted } from \"~/view/utils\";\n\nexport const SnippetsSection: Preact.FunctionComponent<{\n  section: TTS.SnippetsSection;\n  updateSection: (value: TTS.SnippetsSection) => void;\n  onClickEdit: () => void;\n  previewText: (snippet: TTS.Snippet, count?: number) => Promise<void>;\n}> = ({ section, updateSection, onClickEdit, previewText }) => {\n  const [open, set_open] = useStateIfMounted(section.open ?? false);\n  const update_row = useCallback(\n    (index: number, value?: TTS.Snippet) => {\n      const data = section.data?.slice() ?? [];\n      data[index] = value;\n      updateSection({ ...section, data: data.filter((r) => !!r) });\n    },\n    [updateSection, section]\n  );\n\n  useEffect(() => {\n    updateSection({ ...section, open });\n  }, [open]);\n\n  const [edit_target, set_edit_target] = useStateIfMounted(undefined);\n\n  return (\n    <div className=\"tts-snippets-section\" data-open={`${open}`}>\n      <div className=\"tts-snippets-section-header\">\n        <div\n          className=\"tts-snippets-section-title\"\n          onClick={() => set_open(!open)}\n        >\n          <div className=\"tts-snippets-section-expand\">\n            {open ? (\n              <i className=\"fas fa-chevron-down\" />\n            ) : (\n              <i className=\"fas fa-chevron-right\" />\n            )}\n          </div>\n          <span>{section.name}</span>\n        </div>\n        {open && (\n          <button\n            className=\"icon-button tts-snippets-section-edit\"\n            onClick={onClickEdit}\n          >\n            <i className=\"fas fa-edit\" />\n          </button>\n        )}\n      </div>\n      <ul>\n        {section.data?.map((r, i) => (\n          <SnippetsRow\n            key={i}\n            row={r}\n            updateRow={(value) => update_row(i, value)}\n            onClickDelete={() => update_row(i)}\n            onClickEdit={() => set_edit_target(i)}\n            previewText={previewText}\n          />\n        ))}\n        <li className=\"tts-snippets-row tts-snippets-section-add-row-item\">\n          <button\n            className=\"tts-snippets-section-add-row\"\n            type=\"button\"\n            onClick={() => set_edit_target(section.data?.length ?? 0)}\n          >\n            <i className=\"fas fa-plus\" />\n            Add a Snippet\n          </button>\n        </li>\n      </ul>\n      {edit_target != null &&\n        useModal(\n          <SnippetsRowEdit\n            row={section.data[edit_target]}\n            updateRow={(value) => update_row(edit_target, value)}\n            onClickDelete={() => update_row(edit_target)}\n            dismiss={() => set_edit_target(undefined)}\n          />\n        )}\n    </div>\n  );\n};\n","import * as Preact from \"preact\";\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\nimport { useStateIfMounted } from \"~/view/utils\";\n\nexport const SnippetsSectionModal: Preact.FunctionComponent<{\n  name: string;\n  setName: (value: string) => void;\n  deleteSection: () => void;\n  dismiss: () => void;\n}> = ({ name, setName, deleteSection, dismiss }) => {\n  const input_ref = useRef<HTMLInputElement>();\n  const [value, set_value] = useStateIfMounted(name);\n  const on_click_delete = useCallback(() => {\n    const should_delete = confirm(\n      \"Are you sure you want to delete this group and all snippets in it?\"\n    );\n    if (should_delete) {\n      deleteSection();\n      dismiss();\n    }\n  }, []);\n  useEffect(() => input_ref.current?.focus(), []);\n\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal tts-snippets-section-modal\">\n        <div className=\"modal-header\">\n          <h3>{!name ? \"Create New\" : \"Edit\"} Snippet Group</h3>\n          <button className=\"icon-button modal-close\" onClick={dismiss}>\n            <i className=\"fas fa-times\" />\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <label className=\"tts-snippets-section-modal-input\">\n            <span>Group Name</span>\n            <input\n              ref={input_ref}\n              value={value}\n              onInput={(e) => set_value((e.target as HTMLInputElement).value)}\n            />\n          </label>\n          {name && (\n            <button\n              className=\"btn btn-negative btn-with-icon\"\n              onClick={on_click_delete}\n            >\n              <i className=\"fas fa-trash\" />\n              Delete Group\n            </button>\n          )}\n        </div>\n\n        <div className=\"modal-footer\">\n          <button className=\"btn\" onClick={dismiss}>\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              setName(value);\n              dismiss();\n            }}\n            disabled={!value}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export * from \"./Row\";\nexport * from \"./RowControls\";\nexport * from \"./RowEdit\";\nexport * from \"./Snippet\";\nexport * from \"./Snippets\";\nexport * from \"./Section\";\nexport * from \"./SectionEdit\";\n","import * as Preact from \"preact\";\nimport { memo } from \"preact/compat\";\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"preact/hooks\";\nimport {\n  EDITOR_STATE,\n  EDITOR_UNSAVED,\n  LOADED_MESSAGE,\n  MESSAGES,\n} from \"~/model\";\nimport {\n  Editor,\n  ImportExport,\n  MessagesList,\n  Snippets,\n} from \"~/view/components\";\nimport { useContextState, useValueRef } from \"~/view/utils\";\n\nconst View: Preact.FunctionComponent = () => {\n  const [messages, set_messages] = useContextState(MESSAGES);\n  const [loaded_index, set_loaded_index] = useContextState(LOADED_MESSAGE);\n  const {\n    value: { text, speed, max_length },\n  } = useContext(EDITOR_STATE);\n  const [is_unsaved, set_unsaved] = useContextState(EDITOR_UNSAVED);\n  const loaded_message = messages[loaded_index];\n\n  const new_is_unsaved = useMemo(() => {\n    return !loaded_message\n      ? !!text\n      : loaded_message.text !== text ||\n          loaded_message.options?.speed !== speed ||\n          loaded_message.options?.max_length !== max_length;\n  }, [loaded_message, text, speed, max_length]);\n  useEffect(() => {\n    set_unsaved(new_is_unsaved);\n  }, [new_is_unsaved]);\n\n  const load_when_unsaved_reset = useRef<number | null>(null);\n  const messages_ref = useValueRef(messages);\n  const update_messages = useCallback(\n    (index = -1, value) => {\n      const same_name = messages_ref.current.findIndex(\n        m => m.name === value?.name\n      );\n      if (same_name > -1 && same_name !== index) {\n        alert(\"A message with this name already exists.\");\n        return false;\n      }\n      const data = messages_ref.current?.slice();\n      data[index === -1 ? messages_ref.current.length : index] = value;\n      const new_messages = data.filter(r => !!r);\n      set_messages(new_messages);\n      if (!value) {\n        load_when_unsaved_reset.current = -1;\n      } else if (index === -1) {\n        load_when_unsaved_reset.current = new_messages.length - 1;\n      } else {\n        load_when_unsaved_reset.current = new_messages.findIndex(\n          m => m.name === value?.name\n        );\n      }\n      set_unsaved(!value);\n      return true;\n    },\n    [messages]\n  );\n\n  useEffect(() => {\n    const new_index = load_when_unsaved_reset.current;\n    if (new_index != null && (!is_unsaved || new_index === -1)) {\n      set_loaded_index(new_index, new_index === -1);\n      load_when_unsaved_reset.current = null;\n    }\n  }, [is_unsaved]);\n\n  useEffect(() => {\n    const listener = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    document.addEventListener(\"dragover\", listener);\n    document.addEventListener(\"dragenter\", listener);\n    document.addEventListener(\"drop\", listener);\n    document.addEventListener(\"dragleave\", listener);\n    document.addEventListener(\"dragexit\", listener);\n    document.addEventListener(\"dragend\", listener);\n\n    return () => {\n      document.removeEventListener(\"dragover\", listener);\n      document.removeEventListener(\"dragenter\", listener);\n      document.removeEventListener(\"drop\", listener);\n      document.removeEventListener(\"dragleave\", listener);\n      document.removeEventListener(\"dragexit\", listener);\n      document.removeEventListener(\"dragend\", listener);\n    };\n  }, []);\n\n  return (\n    <Preact.Fragment>\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <h1>TTS Playground</h1>\n          <h4>By BlueLdr</h4>\n        </div>\n        <div className=\"header-right\">\n          <ImportExport />\n        </div>\n      </div>\n      <div className=\"tts-container\">\n        <div className=\"tts-container\">\n          <div className=\"tts-col tts-col-messages\">\n            <MessagesList updateMessages={update_messages} />\n          </div>\n          <div className=\"tts-col tts-col-main\">\n            <Editor message={loaded_message} updateMessages={update_messages} />\n          </div>\n          <div className=\"tts-col tts-col-snippets\">\n            <Snippets />\n          </div>\n        </div>\n      </div>\n    </Preact.Fragment>\n  );\n};\n\nexport default memo(View);\n","export * from \"./App\";\nexport * from \"./context\";\nexport * from \"./common\";\nexport * from \"./editor\";\nexport * from \"./export\";\nexport * from \"./messages\";\nexport * from \"./snippets\";\nimport View from \"./View\";\nexport { View };\n","import \"preact/debug\";\nimport * as Preact from \"preact\";\nimport { App } from \"~/view/components\";\n\nconst container = document.getElementById(\"app\");\nif (container) {\n  Preact.render(<App />, container, container.lastElementChild || undefined);\n}\n"]}